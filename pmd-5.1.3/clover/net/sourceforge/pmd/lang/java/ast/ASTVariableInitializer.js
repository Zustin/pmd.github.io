var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":24,"id":11277,"methods":[{"el":11,"sc":5,"sl":9},{"el":15,"sc":5,"sl":13},{"el":23,"sc":5,"sl":21}],"name":"ASTVariableInitializer","sl":8}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_100":{"methods":[{"sl":13},{"sl":21}],"name":"testAbstractNamesInNestedRuleset","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_105":{"methods":[{"sl":13},{"sl":21}],"name":"test_21","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_107":{"methods":[{"sl":13},{"sl":21}],"name":"test_25","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_128":{"methods":[{"sl":13},{"sl":21}],"name":"testForStmtHasCorrectTypes","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_134":{"methods":[{"sl":13},{"sl":21}],"name":"testLambdaWithoutType","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_144":{"methods":[{"sl":13},{"sl":21}],"name":"test_8","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_16":{"methods":[{"sl":13},{"sl":21}],"name":"testIsSyntacticallyPublic","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_165":{"methods":[{"sl":13},{"sl":21}],"name":"testNestedClassFieldAndParameter","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_176":{"methods":[{"sl":13},{"sl":21}],"name":"test_12","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_195":{"methods":[{"sl":13},{"sl":21}],"name":"test_18","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_215":{"methods":[{"sl":13},{"sl":21}],"name":"testPostfixUsageIsRecorded","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_217":{"methods":[{"sl":13},{"sl":21}],"name":"testContainsNoInnerWithAnonInner","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_242":{"methods":[{"sl":13},{"sl":21}],"name":"testTrue","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_276":{"methods":[{"sl":13},{"sl":21}],"name":"testAssertAsIdentifierSucceedsWith1_3","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_28":{"methods":[{"sl":13},{"sl":21}],"name":"testNoFormattersValidation","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_289":{"methods":[{"sl":13},{"sl":21}],"name":"testInnerOuterClass","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_29":{"methods":[{"sl":13},{"sl":21}],"name":"testLocalVariableTypesAreRecorded","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_299":{"methods":[{"sl":13},{"sl":21}],"name":"testNestedClassInMethodBug","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_30":{"methods":[{"sl":13},{"sl":21}],"name":"testPrimitiveType","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_308":{"methods":[{"sl":13},{"sl":21}],"name":"test1","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_332":{"methods":[{"sl":13},{"sl":21}],"name":"testVariousParserBugs","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_336":{"methods":[{"sl":13},{"sl":21}],"name":"test_24","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_338":{"methods":[{"sl":13},{"sl":21}],"name":"testResourceFileCommands","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_34":{"methods":[{"sl":13},{"sl":21}],"name":"testLineNumbersAreSetOnAllSiblings","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_351":{"methods":[{"sl":13},{"sl":21}],"name":"testEnumAnonymousInnerClass","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_356":{"methods":[{"sl":13},{"sl":21}],"name":"testIsIntIntLiteral","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_36":{"methods":[{"sl":13},{"sl":21}],"name":"testRelativeRulesetsInRulesetfiles","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_360":{"methods":[{"sl":13},{"sl":21}],"name":"test_11","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_366":{"methods":[{"sl":13},{"sl":21}],"name":"test_3","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_373":{"methods":[{"sl":13},{"sl":21}],"name":"test_20","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_382":{"methods":[{"sl":13},{"sl":21}],"name":"test_23","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_392":{"methods":[{"sl":13},{"sl":21}],"name":"test_27","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_404":{"methods":[{"sl":13},{"sl":21}],"name":"test_13","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_413":{"methods":[{"sl":13},{"sl":21}],"name":"testStringInSwitch","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_421":{"methods":[{"sl":13},{"sl":21}],"name":"testGenericsProblem","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_429":{"methods":[{"sl":13},{"sl":21}],"name":"testCommaInRulesetfiles","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_440":{"methods":[{"sl":13},{"sl":21}],"name":"test_28","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_441":{"methods":[{"sl":13},{"sl":21}],"name":"testRelativeRulesets","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_445":{"methods":[{"sl":13},{"sl":21}],"name":"testPmdOptions","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_448":{"methods":[{"sl":13},{"sl":21}],"name":"test_17","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_451":{"methods":[{"sl":13},{"sl":21}],"name":"test_15","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_466":{"methods":[{"sl":13},{"sl":21}],"name":"testbook","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_506":{"methods":[{"sl":13},{"sl":21}],"name":"test_9","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_532":{"methods":[{"sl":13},{"sl":21}],"name":"test_26","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_542":{"methods":[{"sl":13},{"sl":21}],"name":"test_7","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_563":{"methods":[{"sl":13},{"sl":21}],"name":"testSingleDimArray","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_576":{"methods":[{"sl":13},{"sl":21}],"name":"testJDK15GenericsSyntaxShouldPassWith15","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_594":{"methods":[{"sl":13},{"sl":21}],"name":"testAbstractNames","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_596":{"methods":[{"sl":13},{"sl":21}],"name":"test_6","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_614":{"methods":[{"sl":13},{"sl":21}],"name":"testIsStringLiteral","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_625":{"methods":[{"sl":13},{"sl":21}],"name":"testBinaryAndUnderscoresInNumericalLiterals","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_633":{"methods":[{"sl":13},{"sl":21}],"name":"testAnnotatedLocals","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_637":{"methods":[{"sl":13},{"sl":21}],"name":"testIsFloatFloatLiteral","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_650":{"methods":[{"sl":13},{"sl":21}],"name":"testFieldFinder","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_659":{"methods":[{"sl":13},{"sl":21}],"name":"testParsersCases","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_662":{"methods":[{"sl":13},{"sl":21}],"name":"testFormatterWithProperties","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_667":{"methods":[{"sl":13},{"sl":21}],"name":"testGenericDiamond","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_686":{"methods":[{"sl":13},{"sl":21}],"name":"test_10","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_705":{"methods":[{"sl":13},{"sl":21}],"name":"testXPathNodeSelect","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_708":{"methods":[{"sl":13},{"sl":21}],"name":"testMultDimArraySplitBraces","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_713":{"methods":[{"sl":13},{"sl":21}],"name":"testExplicitRuleInRuleSet","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_716":{"methods":[{"sl":13},{"sl":21}],"name":"testClashingSymbols","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_717":{"methods":[{"sl":13},{"sl":21}],"name":"test_16","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_728":{"methods":[{"sl":13},{"sl":21}],"name":"testIsCharLiteral","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_745":{"methods":[{"sl":13},{"sl":21}],"name":"testIsIntLongLiteral","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_749":{"methods":[{"sl":13},{"sl":21}],"name":"testLocalVariableDeclarationFound","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_759":{"methods":[{"sl":13},{"sl":21}],"name":"testFalse","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_760":{"methods":[{"sl":13},{"sl":21}],"name":"testLiterals","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_767":{"methods":[{"sl":13},{"sl":21}],"name":"testNestedRuleset","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_770":{"methods":[{"sl":13},{"sl":21}],"name":"testAll","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_78":{"methods":[{"sl":13},{"sl":21}],"name":"test_1","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_790":{"methods":[{"sl":13},{"sl":21}],"name":"test_2","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_817":{"methods":[{"sl":13},{"sl":21}],"name":"test_22","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_818":{"methods":[{"sl":13},{"sl":21}],"name":"test_30","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_83":{"methods":[{"sl":13},{"sl":21}],"name":"testIsFloatDoubleLiteral","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_835":{"methods":[{"sl":13},{"sl":21}],"name":"testTwoUpdateDefs","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_856":{"methods":[{"sl":13}],"name":"testFollowingSibling","pass":true,"statements":[{"sl":14}]},"test_866":{"methods":[{"sl":13},{"sl":21}],"name":"test_19","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_88":{"methods":[{"sl":13},{"sl":21}],"name":"testEnums","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_880":{"methods":[{"sl":13},{"sl":21}],"name":"testQualifiedNameOccurrence","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_881":{"methods":[{"sl":13},{"sl":21}],"name":"testMultDimArray","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_890":{"methods":[{"sl":13},{"sl":21}],"name":"testIsNotStringLiteral","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_898":{"methods":[{"sl":13},{"sl":21}],"name":"test_14","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_903":{"methods":[{"sl":13},{"sl":21}],"name":"testLambdaWithType","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_915":{"methods":[{"sl":13},{"sl":21}],"name":"testAnonymousInnerClass","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_94":{"methods":[{"sl":13},{"sl":21}],"name":"testConstructor","pass":true,"statements":[{"sl":14},{"sl":22}]},"test_99":{"methods":[{"sl":13},{"sl":21}],"name":"runXPath","pass":true,"statements":[{"sl":14},{"sl":22}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [299, 817, 749, 448, 36, 94, 759, 373, 614, 34, 382, 242, 217, 625, 78, 83, 716, 29, 276, 332, 413, 881, 107, 767, 760, 165, 404, 576, 890, 903, 667, 360, 835, 542, 705, 366, 100, 898, 28, 532, 134, 451, 88, 351, 30, 818, 659, 336, 356, 856, 441, 128, 16, 506, 866, 686, 392, 650, 338, 195, 308, 708, 421, 633, 215, 662, 770, 429, 144, 637, 440, 466, 594, 713, 563, 880, 745, 289, 728, 99, 717, 915, 790, 176, 596, 105, 445], [299, 817, 749, 448, 36, 94, 759, 373, 614, 34, 382, 242, 217, 625, 78, 83, 716, 29, 276, 332, 413, 881, 107, 767, 760, 165, 404, 576, 890, 903, 667, 360, 835, 542, 705, 366, 100, 898, 28, 532, 134, 451, 88, 351, 30, 818, 659, 336, 356, 856, 441, 128, 16, 506, 866, 686, 392, 650, 338, 195, 308, 708, 421, 633, 215, 662, 770, 429, 144, 637, 440, 466, 594, 713, 563, 880, 745, 289, 728, 99, 717, 915, 790, 176, 596, 105, 445], [], [], [], [], [], [], [299, 817, 749, 448, 36, 94, 759, 373, 614, 34, 382, 242, 217, 625, 78, 83, 716, 29, 276, 332, 413, 881, 107, 767, 760, 165, 404, 576, 890, 903, 667, 360, 835, 542, 705, 366, 100, 898, 28, 532, 134, 451, 88, 351, 30, 818, 659, 336, 356, 441, 128, 16, 506, 866, 686, 392, 650, 338, 195, 308, 708, 421, 633, 215, 662, 770, 429, 144, 637, 440, 466, 594, 713, 563, 880, 745, 289, 728, 99, 717, 915, 790, 176, 596, 105, 445], [299, 817, 749, 448, 36, 94, 759, 373, 614, 34, 382, 242, 217, 625, 78, 83, 716, 29, 276, 332, 413, 881, 107, 767, 760, 165, 404, 576, 890, 903, 667, 360, 835, 542, 705, 366, 100, 898, 28, 532, 134, 451, 88, 351, 30, 818, 659, 336, 356, 441, 128, 16, 506, 866, 686, 392, 650, 338, 195, 308, 708, 421, 633, 215, 662, 770, 429, 144, 637, 440, 466, 594, 713, 563, 880, 745, 289, 728, 99, 717, 915, 790, 176, 596, 105, 445], [], []]
