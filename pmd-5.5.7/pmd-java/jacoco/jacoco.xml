<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="PMD Java"><sessioninfo id="testing-docker-e3101bae-b774-4196-ace0-d39d26e9853c-73fe1247" start="1493495512636" dump="1493495547949"/><sessioninfo id="testing-docker-e3101bae-b774-4196-ace0-d39d26e9853c-52d69750" start="1493496031309" dump="1493496063289"/><package name="net/sourceforge/pmd/lang/java/rule/comments"><class name="net/sourceforge/pmd/lang/java/rule/comments/CommentContentRule"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Lnet/sourceforge/pmd/RuleContext;)V" line="67"><counter type="INSTRUCTION" missed="5" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoredProperties" desc="()Ljava/util/Set;" line="82"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="end" desc="(Lnet/sourceforge/pmd/RuleContext;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="illegalTermsIn" desc="(Lnet/sourceforge/pmd/lang/java/ast/Comment;)Ljava/util/List;" line="95"><counter type="INSTRUCTION" missed="2" covered="48"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorMsgFor" desc="(Ljava/util/List;)Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="32" covered="27"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="138"><counter type="INSTRUCTION" missed="3" covered="39"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasDissallowedTerms" desc="()Z" line="155"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dysfunctionReason" desc="()Ljava/lang/String;" line="164"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="237"/><counter type="BRANCH" missed="10" covered="18"/><counter type="LINE" missed="9" covered="47"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/comments/CommentRequiredRule"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommentRequirement" desc="(Ljava/lang/String;)Lnet/sourceforge/pmd/lang/java/rule/comments/CommentRequiredRule$CommentRequirement;" line="76"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="115"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="121"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkComment" desc="(Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaAccessNode;Ljava/lang/Object;)V" line="126"><counter type="INSTRUCTION" missed="22" covered="102"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="172"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSerialVersionUID" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;Lnet/sourceforge/pmd/lang/java/rule/comments/CommentRequiredRule$CommentRequirement;)V" line="201"><counter type="INSTRUCTION" missed="22" covered="37"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSerialVersionUID" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;)Z" line="222"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="233"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="259"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allCommentsAreIgnored" desc="()Z" line="266"><counter type="INSTRUCTION" missed="22" covered="7"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dysfunctionReason" desc="()Ljava/lang/String;" line="278"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="70" covered="546"/><counter type="BRANCH" missed="26" covered="54"/><counter type="LINE" missed="5" covered="78"/><counter type="COMPLEXITY" missed="20" covered="34"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/comments/CommentDefaultAccessModifierRule"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRegex" desc="(Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldReport" desc="(Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaAccessNode;)Z" line="88"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNoVisibleForTestingAnnotation" desc="(Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaAccessNode;)Z" line="101"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="227"/><counter type="BRANCH" missed="1" covered="31"/><counter type="LINE" missed="5" covered="38"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/comments/AbstractCommentRule"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tagsIndicesIn" desc="(Ljava/lang/String;)Ljava/util/List;" line="41"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filteredCommentIn" desc="(Lnet/sourceforge/pmd/lang/java/ast/Comment;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleLineIn" desc="(Ljava/lang/String;)Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asSingleString" desc="(Ljava/util/List;)Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiLinesIn" desc="(Ljava/lang/String;)Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formalLinesIn" desc="(Ljava/lang/String;)Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignCommentsToDeclarations" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCommentNotWithin" desc="(Lnet/sourceforge/pmd/lang/java/ast/FormalComment;Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="182"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCommentBefore" desc="(Lnet/sourceforge/pmd/lang/java/ast/FormalComment;Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="195"><counter type="INSTRUCTION" missed="1" covered="18"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orderedCommentsAndDeclarations" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)Ljava/util/SortedMap;" line="201"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDeclarations" desc="(Ljava/util/SortedMap;Ljava/util/List;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="441"/><counter type="BRANCH" missed="13" covered="73"/><counter type="LINE" missed="12" covered="88"/><counter type="COMPLEXITY" missed="12" covered="43"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/comments/HeaderCommentsRule"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/comments/HeaderCommentsRule$RequiredHeaderPlacement"><method name="values" desc="()[Lnet/sourceforge/pmd/lang/java/rule/comments/HeaderCommentsRule$RequiredHeaderPlacement;" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lnet/sourceforge/pmd/lang/java/rule/comments/HeaderCommentsRule$RequiredHeaderPlacement;" line="27"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="labels" desc="()[Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/comments/CodeInCommentsRule"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/comments/CommentRequiredRule$CommentRequirement"><method name="values" desc="()[Lnet/sourceforge/pmd/lang/java/rule/comments/CommentRequiredRule$CommentRequirement;" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lnet/sourceforge/pmd/lang/java/rule/comments/CommentRequiredRule$CommentRequirement;" line="23"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="labels" desc="()[Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="79"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/comments/CommentSizeRule"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasRealText" desc="(Ljava/lang/String;)Z" line="34"><counter type="INSTRUCTION" missed="2" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasTooManyLines" desc="(Lnet/sourceforge/pmd/lang/java/ast/Comment;)Z" line="43"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withoutCommentMarkup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overLengthLineIndicesIn" desc="(Lnet/sourceforge/pmd/lang/java/ast/Comment;)Ljava/util/List;" line="71"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="257"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/comments/JavadocRule"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AbstractCommentRule.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="2" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="2" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="1" cb="1"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="1" cb="1"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="16" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="2"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="4"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="16" mb="0" cb="2"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="10" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="4"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="11" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="13" mb="1" cb="5"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="2"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="2" cb="4"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="19" mb="1" cb="5"/><line nr="187" mi="0" ci="11" mb="0" cb="2"/><line nr="189" mi="0" ci="19" mb="1" cb="5"/><line nr="191" mi="0" ci="10" mb="0" cb="6"/><line nr="195" mi="1" ci="18" mb="2" cb="4"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="10" mb="0" cb="2"/><line nr="226" mi="0" ci="12" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="441"/><counter type="BRANCH" missed="13" covered="73"/><counter type="LINE" missed="12" covered="88"/><counter type="COMPLEXITY" missed="12" covered="43"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentRequiredRule.java"><line nr="23" mi="5" ci="20" mb="0" cb="0"/><line nr="24" mi="0" ci="21" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="16" mb="0" cb="2"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="18" mb="0" cb="0"/><line nr="46" mi="0" ci="18" mb="0" cb="0"/><line nr="50" mi="0" ci="18" mb="0" cb="0"/><line nr="54" mi="0" ci="18" mb="0" cb="0"/><line nr="58" mi="0" ci="18" mb="0" cb="0"/><line nr="62" mi="0" ci="19" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="1" cb="1"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="1" cb="1"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="20" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="0" ci="19" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="20" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="0" ci="20" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="20" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="2" cb="0"/><line nr="160" mi="19" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="2"/><line nr="177" mi="0" ci="4" mb="0" cb="2"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="3" mb="0" cb="2"/><line nr="182" mi="0" ci="20" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="1" cb="1"/><line nr="189" mi="0" ci="19" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="3" mb="1" cb="1"/><line nr="204" mi="0" ci="3" mb="1" cb="1"/><line nr="205" mi="0" ci="20" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="2" cb="0"/><line nr="212" mi="19" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="15" mb="2" cb="6"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="2"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="3" mb="0" cb="2"/><line nr="239" mi="0" ci="20" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="1" cb="1"/><line nr="246" mi="0" ci="19" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="22" ci="7" mb="9" cb="1"/><line nr="278" mi="2" ci="5" mb="1" cb="1"/><counter type="INSTRUCTION" missed="75" covered="625"/><counter type="BRANCH" missed="26" covered="56"/><counter type="LINE" missed="5" covered="88"/><counter type="COMPLEXITY" missed="21" covered="39"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="JavadocRule.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CommentContentRule.java"><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="1" cb="1"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="2"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="10" ci="0" mb="2" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="1" cb="1"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="1" cb="1"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="9" mb="0" cb="2"/><line nr="111" mi="0" ci="7" mb="0" cb="2"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="1" cb="1"/><line nr="122" mi="0" ci="12" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="8" ci="0" mb="2" cb="0"/><line nr="127" mi="9" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="1" cb="1"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="11" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="1" ci="6" mb="1" cb="1"/><counter type="INSTRUCTION" missed="53" covered="237"/><counter type="BRANCH" missed="10" covered="18"/><counter type="LINE" missed="9" covered="47"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CodeInCommentsRule.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CommentSizeRule.java"><line nr="21" mi="0" ci="13" mb="0" cb="0"/><line nr="22" mi="0" ci="14" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="1" cb="1"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="30" mb="0" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="2"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="5" mb="0" cb="2"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="2"/><line nr="66" mi="0" ci="18" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="2"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="11" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="2"/><line nr="93" mi="0" ci="17" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="2"/><line nr="103" mi="0" ci="17" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="257"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HeaderCommentsRule.java"><line nr="18" mi="7" ci="0" mb="0" cb="0"/><line nr="19" mi="11" ci="0" mb="0" cb="0"/><line nr="21" mi="9" ci="0" mb="0" cb="0"/><line nr="24" mi="9" ci="0" mb="0" cb="0"/><line nr="27" mi="29" ci="0" mb="0" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="7" ci="0" mb="0" cb="0"/><line nr="30" mi="7" ci="0" mb="0" cb="0"/><line nr="31" mi="7" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="16" ci="0" mb="2" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="11" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="CommentDefaultAccessModifierRule.java"><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="20" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="20" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="4"/><line nr="82" mi="0" ci="17" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="27" mb="0" cb="10"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="1" cb="1"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="227"/><counter type="BRANCH" missed="1" covered="31"/><counter type="LINE" missed="5" covered="38"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="352" covered="1787"/><counter type="BRANCH" missed="53" covered="203"/><counter type="LINE" missed="58" covered="301"/><counter type="COMPLEXITY" missed="57" covered="139"/><counter type="METHOD" missed="15" covered="53"/><counter type="CLASS" missed="4" covered="6"/></package><package name="net/sourceforge/pmd/lang/java/rule/logging"><class name="net/sourceforge/pmd/lang/java/rule/logging/GuardLogStatementJavaUtilRule"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSlf4jOrLog4jImported" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)Z" line="47"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureGuards" desc="([Ljava/lang/String;[Ljava/lang/String;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureDefaultGuards" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatLogLevelString" desc="(Ljava/util/logging/Level;)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/logging/GuardLogStatementRule"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findViolationForEachLogStatement" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findViolations" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;" line="70"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPropertiesDefaultValues" desc="(Ljava/util/List;Ljava/util/List;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractProperties" desc="()V" line="95"><counter type="INSTRUCTION" missed="5" covered="40"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildGuardStatementMap" desc="(Ljava/util/List;Ljava/util/List;)V" line="113"><counter type="INSTRUCTION" missed="18" covered="50"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="235"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="5" covered="48"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/logging/GuardDebugLoggingRule"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractProperties" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/logging/InvalidSlf4jMessageFormatRule"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="5" covered="175"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNewThrowable" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="113"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasTypeThrowable" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="123"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReferencingThrowable" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="131"><counter type="INSTRUCTION" missed="7" covered="33"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeThrowableParam" desc="(Ljava/util/List;)V" line="148"><counter type="INSTRUCTION" missed="1" covered="31"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpectedMessage" desc="(Ljava/util/List;I)Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedArguments" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)I" line="166"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAmountOfExpectedArguments" desc="(Ljava/lang/String;Ljava/util/List;)I" line="193"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countPlaceholders" desc="(Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaTypeNode;)I" line="203"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="434"/><counter type="BRANCH" missed="14" covered="58"/><counter type="LINE" missed="4" covered="79"/><counter type="COMPLEXITY" missed="13" covered="34"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/logging/MoreThanOneLoggerRule"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="66"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="5" covered="65"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="137"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="7" covered="33"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GuardLogStatementRule.java"><line nr="33" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="2"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="2"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="14" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="1" cb="3"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="10" mb="0" cb="2"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="10" mb="0" cb="2"/><line nr="116" mi="0" ci="8" mb="0" cb="4"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="13" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="1" cb="1"/><line nr="123" mi="18" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="235"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="5" covered="48"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InvalidSlf4jMessageFormatRule.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="28" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="4"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="4"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="20" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="1" cb="1"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="2"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="2"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="16" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="15" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="2" cb="4"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="1" cb="3"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="2" cb="4"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="5" ci="3" mb="3" cb="1"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="2" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="1" cb="1"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="12" mb="1" cb="5"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="21" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="1" cb="1"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="2"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="2"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="10" mb="0" cb="2"/><line nr="194" mi="0" ci="8" mb="0" cb="2"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="2"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="434"/><counter type="BRANCH" missed="14" covered="58"/><counter type="LINE" missed="4" covered="79"/><counter type="COMPLEXITY" missed="13" covered="34"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MoreThanOneLoggerRule.java"><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="1" cb="1"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="1" cb="1"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="21" mb="1" cb="11"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="137"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="7" covered="33"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GuardDebugLoggingRule.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GuardLogStatementJavaUtilRule.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="1" cb="5"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="4"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="1" cb="1"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="2"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="66" mi="0" ci="17" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="58" covered="1017"/><counter type="BRANCH" missed="21" covered="117"/><counter type="LINE" missed="16" covered="200"/><counter type="COMPLEXITY" missed="20" covered="84"/><counter type="METHOD" missed="0" covered="35"/><counter type="CLASS" missed="0" covered="5"/></package><package name="net/sourceforge/pmd/lang/java/xpath"><class name="net/sourceforge/pmd/lang/java/xpath/TypeOfFunction"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerSelfInSimpleContext" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="28"><counter type="INSTRUCTION" missed="10" covered="65"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeof" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z" line="61"><counter type="INSTRUCTION" missed="9" covered="59"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="136"/><counter type="BRANCH" missed="8" covered="24"/><counter type="LINE" missed="5" covered="33"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/xpath/GetCommentOnFunction"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerSelfInSimpleContext" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="12"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="3"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/xpath/JavaFunctions"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeof" desc="(Lnet/sf/saxon/expr/XPathContext;Ljava/lang/String;Ljava/lang/String;)Z" line="20"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeof" desc="(Lnet/sf/saxon/expr/XPathContext;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z" line="24"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TypeOfFunction.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="2"/><line nr="33" mi="0" ci="5" mb="0" cb="2"/><line nr="34" mi="0" ci="2" mb="1" cb="1"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="2"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="1" cb="1"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="1" cb="1"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="2"/><line nr="64" mi="0" ci="14" mb="2" cb="4"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="1" cb="1"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="4"/><line nr="76" mi="0" ci="5" mb="1" cb="1"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="136"/><counter type="BRANCH" missed="8" covered="24"/><counter type="LINE" missed="5" covered="33"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaFunctions.java"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GetCommentOnFunction.java"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="2" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="2" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="10" ci="0" mb="2" cb="0"/><line nr="43" mi="8" ci="0" mb="4" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="12"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="3"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="91" covered="148"/><counter type="BRANCH" missed="18" covered="24"/><counter type="LINE" missed="21" covered="36"/><counter type="COMPLEXITY" missed="17" covered="14"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="1" covered="2"/></package><package name="net/sourceforge/pmd/lang/java/rule/naming"><class name="net/sourceforge/pmd/lang/java/rule/naming/VariableNamingConventionsRule"><method name="&lt;init&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="90"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="129"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameters;Ljava/lang/Object;)Ljava/lang/Object;" line="136"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkVariableDeclarators" desc="([Ljava/lang/String;[Ljava/lang/String;Lnet/sourceforge/pmd/lang/ast/Node;ZZLjava/lang/Object;)Ljava/lang/Object;" line="156"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkVariableDeclaratorId" desc="([Ljava/lang/String;[Ljava/lang/String;Lnet/sourceforge/pmd/lang/ast/Node;ZZLnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="169"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeVariableName" desc="(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;" line="204"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stripSuffix" desc="(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;" line="208"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stripPrefix" desc="(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;" line="220"><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrefixesOrSuffixes" desc="()Z" line="232"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dysfunctionReason" desc="()Ljava/lang/String;" line="244"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="149"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="599"/><counter type="BRANCH" missed="9" covered="53"/><counter type="LINE" missed="2" covered="102"/><counter type="COMPLEXITY" missed="9" covered="36"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/naming/AvoidDollarSignsRule"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="14"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/naming/ClassNamingConventionsRule"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="12"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/naming/MethodWithSameNameAsEnclosingClassRule"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="16"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/naming/SuspiciousHashcodeMethodNameRule"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/naming/AvoidFieldNameMatchingMethodNameRule"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBody;Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="1" covered="81"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="94"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/naming/AvoidFieldNameMatchingTypeNameRule"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="13"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="20"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/naming/MethodNamingConventionsRule"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOverriddenMethod" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;)Z" line="54"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AvoidDollarSignsRule.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="2"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="2"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="2"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SuspiciousHashcodeMethodNameRule.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="16" mb="2" cb="6"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="2" cb="2"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodWithSameNameAsEnclosingClassRule.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="10" mb="0" cb="2"/><line nr="18" mi="0" ci="5" mb="0" cb="2"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidFieldNameMatchingMethodNameRule.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="2"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="2"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="1" cb="1"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="2"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="94"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableNamingConventionsRule.java"><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="14" mb="0" cb="0"/><line nr="53" mi="0" ci="14" mb="0" cb="0"/><line nr="56" mi="0" ci="14" mb="0" cb="0"/><line nr="59" mi="0" ci="14" mb="0" cb="0"/><line nr="62" mi="0" ci="14" mb="0" cb="0"/><line nr="65" mi="0" ci="14" mb="0" cb="0"/><line nr="68" mi="0" ci="14" mb="0" cb="0"/><line nr="71" mi="0" ci="15" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="6"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="22" mb="0" cb="4"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="12" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="4"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="12" mb="0" cb="2"/><line nr="145" mi="0" ci="12" mb="0" cb="2"/><line nr="147" mi="0" ci="13" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="12" mb="0" cb="2"/><line nr="157" mi="0" ci="12" mb="0" cb="2"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="4"/><line nr="178" mi="0" ci="5" mb="0" cb="2"/><line nr="179" mi="0" ci="11" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="2"/><line nr="188" mi="0" ci="11" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="2"/><line nr="195" mi="0" ci="11" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="1" cb="1"/><line nr="209" mi="2" ci="6" mb="1" cb="1"/><line nr="210" mi="0" ci="6" mb="1" cb="1"/><line nr="211" mi="0" ci="11" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="1" cb="1"/><line nr="221" mi="2" ci="6" mb="1" cb="1"/><line nr="222" mi="0" ci="6" mb="1" cb="1"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="11" mb="1" cb="1"/><line nr="233" mi="0" ci="3" mb="0" cb="2"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="1" cb="1"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="6" mb="1" cb="1"/><counter type="INSTRUCTION" missed="9" covered="599"/><counter type="BRANCH" missed="9" covered="53"/><counter type="LINE" missed="2" covered="102"/><counter type="COMPLEXITY" missed="9" covered="36"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassNamingConventionsRule.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="2"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodNamingConventionsRule.java"><line nr="21" mi="0" ci="10" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="1" cb="3"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="2"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="2"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="2"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="1" cb="3"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidFieldNameMatchingTypeNameRule.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="2"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="4"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="10" covered="985"/><counter type="BRANCH" missed="16" covered="106"/><counter type="LINE" missed="3" covered="189"/><counter type="COMPLEXITY" missed="16" covered="80"/><counter type="METHOD" missed="0" covered="35"/><counter type="CLASS" missed="0" covered="8"/></package><package name="net/sourceforge/pmd/lang/java/dfa"><class name="net/sourceforge/pmd/lang/java/dfa/DataFlowFacade"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeWith" desc="(Lnet/sourceforge/pmd/lang/DataFlowHandler;Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="35"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/dfa/JavaDataFlowNode"><method name="&lt;init&gt;" desc="(Ljava/util/List;Lnet/sourceforge/pmd/lang/ast/Node;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="5"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/dfa/JavaDFAGraphRule"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethods" desc="()Ljava/util/List;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="35"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/dfa/StatementAndBraceFinder"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/DataFlowHandler;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDataFlowFor" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;)V" line="56"><counter type="INSTRUCTION" missed="19" covered="61"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="18" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="18" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="108"><counter type="INSTRUCTION" missed="86" covered="96"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="6" covered="23"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForInit;Ljava/lang/Object;)Ljava/lang/Object;" line="151"><counter type="INSTRUCTION" missed="18" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLabeledStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="166"><counter type="INSTRUCTION" missed="16" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForUpdate;Ljava/lang/Object;)Ljava/lang/Object;" line="176"><counter type="INSTRUCTION" missed="18" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="194"><counter type="INSTRUCTION" missed="135" covered="135"/><counter type="BRANCH" missed="10" covered="26"/><counter type="LINE" missed="9" covered="31"/><counter type="COMPLEXITY" missed="10" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="254"><counter type="INSTRUCTION" missed="18" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;" line="268"><counter type="INSTRUCTION" missed="35" covered="29"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBreakStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="289"><counter type="INSTRUCTION" missed="18" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTContinueStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="304"><counter type="INSTRUCTION" missed="18" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="318"><counter type="INSTRUCTION" missed="18" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTThrowStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="332"><counter type="INSTRUCTION" missed="18" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addForExpressionNode" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/dfa/Structure;)V" line="349"><counter type="INSTRUCTION" missed="50" covered="98"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="503" covered="659"/><counter type="BRANCH" missed="43" covered="95"/><counter type="LINE" missed="45" covered="163"/><counter type="COMPLEXITY" missed="43" covered="43"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/dfa/VariableAccessVisitor"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeNow" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markUsages" desc="(Lnet/sourceforge/pmd/lang/dfa/DataFlowNode;)Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectDeclarations" desc="(Lnet/sourceforge/pmd/lang/dfa/DataFlowNode;)Ljava/util/Set;" line="86"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAccess" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;Lnet/sourceforge/pmd/lang/dfa/DataFlowNode;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVariableAccess" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/dfa/VariableAccess;Ljava/util/List;)V" line="119"><counter type="INSTRUCTION" missed="1" covered="51"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="260"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="VariableAccessVisitor.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="1" cb="1"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="2"/><line nr="64" mi="0" ci="11" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="2"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="72" mi="0" ci="12" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="2"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="13" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="3" cb="3"/><line nr="106" mi="0" ci="12" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="1" cb="1"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="260"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StatementAndBraceFinder.java"><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="4"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="1" cb="1"/><line nr="68" mi="12" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="1" cb="1"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="1" cb="1"/><line nr="87" mi="16" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="1" cb="1"/><line nr="100" mi="16" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="1" cb="1"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="1" cb="1"/><line nr="118" mi="17" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="1" cb="1"/><line nr="124" mi="17" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="1" cb="1"/><line nr="130" mi="17" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="2"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="1" cb="1"/><line nr="136" mi="17" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="1" cb="1"/><line nr="142" mi="16" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="1" cb="1"/><line nr="158" mi="16" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="1" cb="1"/><line nr="169" mi="16" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="1" cb="1"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="1" cb="1"/><line nr="184" mi="16" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="1" cb="1"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="2"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="1" cb="1"/><line nr="203" mi="17" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="2"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="1" cb="1"/><line nr="209" mi="16" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="2"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="1" cb="1"/><line nr="220" mi="17" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="9" mb="1" cb="3"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="1" cb="1"/><line nr="225" mi="17" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="1" cb="1"/><line nr="230" mi="16" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="2"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="1" cb="1"/><line nr="236" mi="17" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="2"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="1" cb="1"/><line nr="241" mi="17" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="2"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="1" cb="1"/><line nr="246" mi="16" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="1" cb="1"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="1" cb="1"/><line nr="261" mi="16" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="1" cb="1"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="2"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="1" cb="1"/><line nr="276" mi="17" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="1" cb="1"/><line nr="281" mi="16" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="1" cb="1"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="1" cb="1"/><line nr="296" mi="16" ci="0" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="1" cb="1"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="1" cb="1"/><line nr="311" mi="16" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="1" cb="1"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="1" cb="1"/><line nr="325" mi="16" ci="0" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="1" cb="1"/><line nr="333" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="1" cb="1"/><line nr="339" mi="16" ci="0" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="8" mb="0" cb="2"/><line nr="355" mi="0" ci="5" mb="0" cb="2"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="5" mb="0" cb="2"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="2"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="2"/><line nr="364" mi="0" ci="3" mb="0" cb="2"/><line nr="365" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="5" mb="0" cb="0"/><line nr="367" mi="0" ci="4" mb="1" cb="1"/><line nr="368" mi="17" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="2"/><line nr="371" mi="0" ci="2" mb="0" cb="2"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="1" cb="1"/><line nr="375" mi="17" ci="0" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="1" cb="1"/><line nr="379" mi="0" ci="4" mb="0" cb="4"/><line nr="380" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="1" cb="1"/><line nr="383" mi="16" ci="0" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="503" covered="659"/><counter type="BRANCH" missed="43" covered="95"/><counter type="LINE" missed="45" covered="163"/><counter type="COMPLEXITY" missed="43" covered="43"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DataFlowFacade.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaDFAGraphRule.java"><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JavaDataFlowNode.java"><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="12" ci="0" mb="0" cb="0"/><line nr="22" mi="8" ci="0" mb="4" cb="0"/><line nr="23" mi="16" ci="0" mb="2" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="5"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="573" covered="964"/><counter type="BRANCH" missed="54" covered="124"/><counter type="LINE" missed="59" covered="231"/><counter type="COMPLEXITY" missed="56" covered="68"/><counter type="METHOD" missed="5" covered="30"/><counter type="CLASS" missed="1" covered="4"/></package><package name="net/sourceforge/pmd/lang/java/rule/design"><class name="net/sourceforge/pmd/lang/java/rule/design/SimplifyBooleanReturnsRule"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="44" covered="151"/><counter type="BRANCH" missed="18" covered="22"/><counter type="LINE" missed="8" covered="22"/><counter type="COMPLEXITY" missed="13" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJustReturnsBooleanAfter" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;)Z" line="162"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIfJustReturnsBoolean" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;)Z" line="181"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOneBlockStmt" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="187"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescendant" desc="(Lnet/sourceforge/pmd/lang/ast/Node;I)Lnet/sourceforge/pmd/lang/ast/Node;" line="196"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="terminatesInBooleanLiteral" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="207"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eachNodeHasOneChild" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="211"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastChild" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="221"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNodesEqualWithUnaryExpression" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="230"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNodesEquals" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="244"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSimpleReturn" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="264"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="120" covered="327"/><counter type="BRANCH" missed="37" covered="57"/><counter type="LINE" missed="28" covered="55"/><counter type="COMPLEXITY" missed="27" covered="33"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/SingularFieldRule"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="4" covered="222"/><counter type="BRANCH" missed="3" covered="53"/><counter type="LINE" missed="3" covered="54"/><counter type="COMPLEXITY" missed="3" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInAssignment" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="151"><counter type="INSTRUCTION" missed="1" covered="31"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="281"/><counter type="BRANCH" missed="5" covered="57"/><counter type="LINE" missed="3" covered="66"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/AssignmentToNonFinalStaticRule"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializedInConstructor" desc="(Ljava/util/List;)Z" line="42"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$MethodInvocation"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/util/List;Ljava/util/List;Ljava/lang/String;ILjava/util/List;Z)V" line="179"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuper" desc="()Z" line="190"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="194"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentCount" desc="()I" line="198"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentTypes" desc="()Ljava/util/List;" line="202"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferenceNames" desc="()Ljava/util/List;" line="206"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQualifierNames" desc="()Ljava/util/List;" line="210"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getASTPrimaryExpression" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;" line="214"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethod" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Lnet/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$MethodInvocation;" line="218"><counter type="INSTRUCTION" missed="59" covered="242"/><counter type="BRANCH" missed="11" covered="43"/><counter type="LINE" missed="16" covered="61"/><counter type="COMPLEXITY" missed="7" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="show" desc="()V" line="374"><counter type="INSTRUCTION" missed="115" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="174" covered="287"/><counter type="BRANCH" missed="15" covered="43"/><counter type="LINE" missed="33" covered="77"/><counter type="COMPLEXITY" missed="10" covered="29"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/UseCollectionIsEmptyRule"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appliesToClassName" desc="(Ljava/lang/String;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTargetMethod" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;)Z" line="45"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComparisonTargets" desc="()Ljava/util/Map;" line="55"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix;Ljava/lang/Object;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeOfMethodCall" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix;)Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;" line="83"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeOfPrimaryPrefix" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix;)Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;" line="104"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="204"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/AccessorClassGenerationRule"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="end" desc="(Lnet/sourceforge/pmd/RuleContext;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="1" covered="59"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="112"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/UseUtilityClassRule"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBody;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="1" covered="35"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipAnnotations" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="76"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExceptionType" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;)Z" line="85"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="174"/><counter type="BRANCH" missed="3" covered="47"/><counter type="LINE" missed="1" covered="50"/><counter type="COMPLEXITY" missed="3" covered="26"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/SwitchDensityRule$SwitchDensity"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSwitchLabel" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStatement" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStatements" desc="(I)V" line="39"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStatementCount" desc="()I" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDensity" desc="()D" line="47"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/GenericClassCounterRule"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayAsList" desc="([Ljava/lang/String;)Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()V" line="96"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(Lnet/sourceforge/pmd/RuleContext;)V" line="111"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="124"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="140"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAMatch" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;)V" line="157"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="searchForAMatch" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="165"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="end" desc="(Lnet/sourceforge/pmd/RuleContext;)V" line="173"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="341" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="63" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/UnsynchronizedStaticDateFormatterRule"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$ConstructorInvocation"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExplicitConstructorInvocation;)V" line="396"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getASTExplicitConstructorInvocation" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTExplicitConstructorInvocation;" line="411"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentCount" desc="()I" line="415"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentTypes" desc="()Ljava/util/List;" line="419"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="423"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/SwitchDensityRule"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="8" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="72"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ImmutableFieldRule"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializedWhenDeclared" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializedInConstructor" desc="(Ljava/util/List;Ljava/util/Set;)Lnet/sourceforge/pmd/lang/java/rule/design/ImmutableFieldRule$FieldImmutabilityType;" line="72"><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="BRANCH" missed="1" covered="31"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inLoopOrTry" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inAnonymousInnerClass" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="124"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllConstructors" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;)Ljava/util/List;" line="129"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="233"/><counter type="BRANCH" missed="5" covered="57"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="5" covered="33"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$ConstructorHolderComparator"><method name="&lt;init&gt;" desc="()V" line="524"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lnet/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$ConstructorHolder;Lnet/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$ConstructorHolder;)I" line="527"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ExcessiveNodeCountRule"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ImmutableFieldRule$FieldImmutabilityType"><method name="values" desc="()[Lnet/sourceforge/pmd/lang/java/rule/design/ImmutableFieldRule$FieldImmutabilityType;" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lnet/sourceforge/pmd/lang/java/rule/design/ImmutableFieldRule$FieldImmutabilityType;" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/PreserveStackTraceRule"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="14" covered="190"/><counter type="BRANCH" missed="7" covered="33"/><counter type="LINE" missed="4" covered="36"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFillInStackTraceCalled" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/java/ast/ASTVariableInitializer;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInitCauseCalled" desc="(Ljava/lang/String;Ljava/util/List;)Z" line="107"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForTargetUsage" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="136"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ck" desc="(Ljava/lang/Object;Ljava/lang/String;Lnet/sourceforge/pmd/lang/java/ast/ASTThrowStatement;Lnet/sourceforge/pmd/lang/ast/Node;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="310"/><counter type="BRANCH" missed="13" covered="53"/><counter type="LINE" missed="4" covered="66"/><counter type="COMPLEXITY" missed="13" covered="26"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/PositionalIteratorRule"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVariableName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectNames" desc="(Ljava/lang/String;Ljava/util/List;Lnet/sourceforge/pmd/lang/ast/Node;)V" line="45"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNameAsChild" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="58"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/AvoidDeeplyNestedIfStmtsRule"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="35"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/CompareObjectsWithEqualsRule"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasName" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="20"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllocation" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEqualityExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="4" covered="138"/><counter type="BRANCH" missed="9" covered="27"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfQualifiedName" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="184"/><counter type="BRANCH" missed="10" covered="40"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="10" covered="20"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/GodClassRule"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateTcc" desc="()D" line="123"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateTotalMethodPairs" desc="()D" line="140"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineMethodPairs" desc="()I" line="153"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="185"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForeignGetterSetterCall" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="206"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMethodCall" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="212"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForeignAttributeOrMethod" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="221"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameImage" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Ljava/lang/String;" line="238"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableName" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Ljava/lang/String;" line="249"><counter type="INSTRUCTION" missed="6" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodOrAttributeName" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Ljava/lang/String;" line="267"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findVariableDeclaration" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/symboltable/Scope;)Lnet/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration;" line="283"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAttributeAccess" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="300"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="305"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="319"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalAndExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="325"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="331"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="337"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="343"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;" line="349"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="355"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="361"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="595"/><counter type="BRANCH" missed="8" covered="62"/><counter type="LINE" missed="1" covered="120"/><counter type="COMPLEXITY" missed="8" covered="50"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/CloseResourceRule"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSimpleType" desc="(Ljava/lang/String;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="112"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForResources" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNullInitializer" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;)Z" line="147"><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureClosed" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)V" line="163"><counter type="INSTRUCTION" missed="30" covered="335"/><counter type="BRANCH" missed="16" covered="62"/><counter type="LINE" missed="6" covered="81"/><counter type="COMPLEXITY" missed="13" covered="27"/><counter type="METHOD" missed="0" covered="1"/></method><method name="variableIsPassedToMethod" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/String;)Z" line="323"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findIfStatement" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlock;Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;" line="338"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullCheckIfCondition" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlock;Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/String;)Z" line="360"><counter type="INSTRUCTION" missed="1" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="730"/><counter type="BRANCH" missed="24" covered="114"/><counter type="LINE" missed="9" covered="150"/><counter type="COMPLEXITY" missed="21" covered="60"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/UnnecessaryLocalBeforeReturnRule"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="7" covered="90"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInitDataModifiedAfterInit" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration;Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;)Z" line="74"><counter type="INSTRUCTION" missed="10" covered="97"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotAnnotated" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration;)Z" line="113"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMethodCall" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;)Z" line="125"><counter type="INSTRUCTION" missed="1" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="238"/><counter type="BRANCH" missed="9" covered="47"/><counter type="LINE" missed="2" covered="48"/><counter type="COMPLEXITY" missed="7" covered="27"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConfusingTernaryRule"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="93"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUnaryNot" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEquals" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConditionalWithAllMatches" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="109"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParenthesisAroundMatch" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="129"><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="194"/><counter type="BRANCH" missed="9" covered="47"/><counter type="LINE" missed="2" covered="38"/><counter type="COMPLEXITY" missed="9" covered="28"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$ConstructorHolder"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;)V" line="463"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getASTConstructorDeclaration" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;" line="468"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalledConstructor" desc="()Lnet/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$ConstructorInvocation;" line="472"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getASTExplicitConstructorInvocation" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTExplicitConstructorInvocation;" line="479"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initCI" desc="()V" line="490"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDangerous" desc="()Z" line="500"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDangerous" desc="(Z)V" line="504"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$MethodHolderComparator"><method name="&lt;init&gt;" desc="()V" line="517"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lnet/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$MethodHolder;Lnet/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$MethodHolder;)I" line="520"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ExcessiveLengthRule"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/AccessorMethodGenerationRule"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyzeScope" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/AbstractJavaScope;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyzeMember" desc="(Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaAccessNode;Ljava/util/List;Lnet/sourceforge/pmd/lang/java/symboltable/ClassScope;Ljava/lang/Object;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/IdempotentOperationsRule"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="17" covered="198"/><counter type="BRANCH" missed="9" covered="33"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="201"/><counter type="BRANCH" missed="9" covered="33"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="9" covered="14"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$MethodHolder"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;)V" line="432"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCalledMethod" desc="(Ljava/lang/String;)V" line="437"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalled" desc="()Ljava/lang/String;" line="441"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getASTMethodDeclarator" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;" line="445"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDangerous" desc="()Z" line="449"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDangerous" desc="()V" line="453"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/SingletonClassReturningNewInstanceRule"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="6" covered="120"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnVariableName" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;)Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameFromPrimaryPrefix" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;)Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="174"/><counter type="BRANCH" missed="8" covered="24"/><counter type="LINE" missed="2" covered="44"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$EvalPackage"><method name="&lt;init&gt;" desc="()V" line="543"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="546"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$NullEvalPackage"><method name="&lt;init&gt;" desc="()V" line="557"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/AvoidReassigningParametersRule"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="20"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookForViolation" desc="(Ljava/util/Map;Ljava/lang/Object;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/NonThreadSafeSingletonRule"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="10" covered="138"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="4" covered="28"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="217"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="4" covered="44"/><counter type="COMPLEXITY" missed="7" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/SingleMethodSingletonRule"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareNodes" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/ast/Node;)I" line="509"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentEvalPackage" desc="()Lnet/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$EvalPackage;" line="567"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putEvalPackage" desc="(Lnet/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$EvalPackage;)V" line="574"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeCurrentEvalPackage" desc="()V" line="578"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEvalPackages" desc="()V" line="582"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassDec" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="590"><counter type="INSTRUCTION" missed="1" covered="167"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateDangerOfMethods" desc="(Ljava/util/Map;)Z" line="657"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateDangerOfConstructors1" desc="(Ljava/util/Map;Ljava/util/Set;)V" line="693"><counter type="INSTRUCTION" missed="1" covered="85"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateDangerOfConstructors2" desc="(Ljava/util/Map;)Z" line="732"><counter type="INSTRUCTION" missed="47" covered="20"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="12" covered="5"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="760"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="767"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="776"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="803"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="833"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCalledMethodsOfNode" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/util/List;Ljava/lang/String;)V" line="853"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCalledMethodsOfNodeImpl" desc="(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V" line="859"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMethod" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/String;)Lnet/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule$MethodInvocation;" line="875"><counter type="INSTRUCTION" missed="3" covered="61"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameFromPrefix" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;)Ljava/lang/String;" line="911"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodDeclaratorParameterTypes" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Ljava/util/List;" line="923"><counter type="INSTRUCTION" missed="4" covered="51"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentTypes" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArguments;)Ljava/util/List;" line="941"><counter type="INSTRUCTION" missed="5" covered="100"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="63" covered="834"/><counter type="BRANCH" missed="35" covered="131"/><counter type="LINE" missed="18" covered="187"/><counter type="COMPLEXITY" missed="29" covered="76"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/design/FieldDeclarationsShouldBeAtStartOfClassRule"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipAnnotations" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="87"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="133"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SingletonClassReturningNewInstanceRule.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="2"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="2"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="1" cb="1"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="2"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="1" cb="1"/><line nr="65" mi="0" ci="10" mb="0" cb="2"/><line nr="66" mi="0" ci="4" mb="0" cb="2"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="1" cb="1"/><line nr="70" mi="0" ci="10" mb="1" cb="1"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="2" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="9" mb="1" cb="3"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="174"/><counter type="BRANCH" missed="8" covered="24"/><counter type="LINE" missed="2" covered="44"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnsynchronizedStaticDateFormatterRule.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="21" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="4"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="2"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="2"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="2"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="1" cb="3"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseCollectionIsEmptyRule.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="6" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="15" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="15" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="4"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="4"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="2"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="2"/><line nr="91" mi="0" ci="8" mb="0" cb="2"/><line nr="92" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="204"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConfusingTernaryRule.java"><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="2" cb="2"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="18" mb="1" cb="5"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="1" cb="1"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="16" mb="0" cb="8"/><line nr="99" mi="0" ci="12" mb="1" cb="3"/><line nr="104" mi="0" ci="12" mb="0" cb="4"/><line nr="109" mi="0" ci="6" mb="0" cb="4"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="1" cb="1"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="4"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="2" cb="2"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="1" cb="3"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="194"/><counter type="BRANCH" missed="9" covered="47"/><counter type="LINE" missed="2" covered="38"/><counter type="COMPLEXITY" missed="9" covered="28"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleMethodSingletonRule.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="2"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="2"/><line nr="30" mi="0" ci="6" mb="0" cb="2"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IdempotentOperationsRule.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="41" mb="3" cb="11"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="2"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="2" cb="2"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="2"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="1" cb="5"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="1" cb="1"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="2" ci="6" mb="0" cb="2"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="1" cb="1"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="201"/><counter type="BRANCH" missed="9" covered="33"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="9" covered="14"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AccessorClassGenerationRule.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="1" cb="1"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="1" cb="1"/><line nr="80" mi="0" ci="6" mb="0" cb="2"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="1" cb="1"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="112"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidReassigningParametersRule.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="2"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="10" mb="0" cb="2"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="25" mb="2" cb="12"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PositionalIteratorRule.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="6" ci="0" mb="2" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="9" ci="0" mb="4" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="7" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="10" ci="0" mb="2" cb="0"/><line nr="26" mi="5" ci="0" mb="2" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="2" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="2" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="2" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="13" ci="0" mb="6" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="70" mi="5" ci="0" mb="2" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SingularFieldRule.java"><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="13" mb="0" cb="8"/><line nr="54" mi="0" ci="12" mb="0" cb="2"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="4"/><line nr="65" mi="0" ci="4" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="4"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="2"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="2"/><line nr="85" mi="0" ci="6" mb="1" cb="3"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="4"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="1" cb="1"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="2"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="10" mb="0" cb="4"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="4"/><line nr="143" mi="0" ci="11" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="1" ci="14" mb="2" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="281"/><counter type="BRANCH" missed="5" covered="57"/><counter type="LINE" missed="3" covered="66"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AccessorMethodGenerationRule.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="13" mb="0" cb="2"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="12" mb="0" cb="2"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="2"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="2"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExcessiveNodeCountRule.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="2"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssignmentToNonFinalStaticRule.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="2"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="4"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="2"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="1" cb="1"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericClassCounterRule.java"><line nr="51" mi="14" ci="0" mb="0" cb="0"/><line nr="54" mi="10" ci="0" mb="0" cb="0"/><line nr="57" mi="14" ci="0" mb="0" cb="0"/><line nr="61" mi="11" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="11" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="9" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="11" ci="0" mb="2" cb="0"/><line nr="125" mi="5" ci="0" mb="2" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="11" ci="0" mb="2" cb="0"/><line nr="141" mi="5" ci="0" mb="2" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="11" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="2" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="15" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="7" ci="0" mb="2" cb="0"/><line nr="176" mi="11" ci="0" mb="2" cb="0"/><line nr="177" mi="10" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="341" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="63" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SwitchDensityRule.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="1" cb="1"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="1" cb="1"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="1" cb="1"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="1" cb="1"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="106"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="6" covered="31"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AvoidDeeplyNestedIfStmtsRule.java"><line nr="16" mi="0" ci="14" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="2"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NonThreadSafeSingletonRule.java"><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="1" cb="3"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="1" cb="5"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="1" cb="3"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="2"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="1" cb="1"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="20" mb="2" cb="4"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="1" cb="1"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="217"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="4" covered="44"/><counter type="COMPLEXITY" missed="7" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PreserveStackTraceRule.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="2"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="1" cb="3"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="1" cb="1"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="2" cb="4"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="1" cb="1"/><line nr="68" mi="0" ci="19" mb="1" cb="5"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="2"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="1" cb="1"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="17" mb="1" cb="3"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="2"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="1" cb="3"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="1" cb="1"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="2" cb="2"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="2"/><line nr="140" mi="0" ci="5" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="2"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="310"/><counter type="BRANCH" missed="13" covered="53"/><counter type="LINE" missed="4" covered="66"/><counter type="COMPLEXITY" missed="13" covered="26"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompareObjectsWithEqualsRule.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="12" mb="0" cb="4"/><line nr="31" mi="0" ci="17" mb="0" cb="6"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="1" cb="3"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="4"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="4"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="1" cb="3"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="1" cb="1"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="2" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="2" cb="2"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="1" cb="3"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="13" mb="1" cb="5"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="14" mb="1" cb="3"/><counter type="INSTRUCTION" missed="4" covered="184"/><counter type="BRANCH" missed="10" covered="40"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="10" covered="20"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExcessiveLengthRule.java"><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="2"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CloseResourceRule.java"><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="22" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="1" cb="3"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="4"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="1" cb="3"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="1" cb="3"/><line nr="88" mi="0" ci="19" mb="0" cb="2"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="10" mb="0" cb="2"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="1" cb="1"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="32" mb="2" cb="12"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="0" cb="2"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="2"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="4"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="10" mb="0" cb="2"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="9" mb="1" cb="3"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="9" mb="0" cb="2"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="2"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="2"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="8" mb="1" cb="3"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="10" mb="0" cb="2"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="1" cb="3"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="1" cb="1"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="15" mb="0" cb="6"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="2"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="10" mb="0" cb="2"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="1" cb="1"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="2" cb="2"/><line nr="241" mi="0" ci="3" mb="1" cb="1"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="8" mb="0" cb="4"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="3" ci="1" mb="2" cb="0"/><line nr="254" mi="13" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="2" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="2" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="10" mb="0" cb="2"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="2"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="2"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="2"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="2"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="10" mb="0" cb="2"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="7" mb="2" cb="2"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="2"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="10" mb="0" cb="2"/><line nr="326" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="1" cb="3"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="334" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="6" mb="1" cb="3"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="2"/><line nr="364" mi="0" ci="15" mb="0" cb="0"/><line nr="367" mi="0" ci="7" mb="0" cb="2"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="372" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="730"/><counter type="BRANCH" missed="24" covered="114"/><counter type="LINE" missed="9" covered="150"/><counter type="COMPLEXITY" missed="21" covered="60"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FieldDeclarationsShouldBeAtStartOfClassRule.java"><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="1" cb="1"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="4"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="1" cb="7"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="4"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="1" cb="1"/><line nr="89" mi="0" ci="5" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="133"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseUtilityClassRule.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="2"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="10" mb="0" cb="6"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="2"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="1" cb="3"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="4"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="1" cb="3"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="4"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="1" cb="3"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="174"/><counter type="BRANCH" missed="3" covered="47"/><counter type="LINE" missed="1" covered="50"/><counter type="COMPLEXITY" missed="3" covered="26"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConstructorCallsOverridableMethodRule.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="9" mb="0" cb="4"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="9" mb="0" cb="2"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="2"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="6" mb="0" cb="4"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="1" cb="1"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="2"/><line nr="257" mi="0" ci="3" mb="1" cb="1"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="2"/><line nr="278" mi="0" ci="2" mb="1" cb="1"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="2" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="10" ci="0" mb="2" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="2" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="2" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="2"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="2"/><line nr="311" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="12" mb="0" cb="2"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="2"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="2"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="5" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="2"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="2"/><line nr="342" mi="0" ci="3" mb="0" cb="2"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="9" mb="0" cb="2"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="2"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="5" mb="0" cb="2"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="11" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="3" ci="0" mb="0" cb="0"/><line nr="375" mi="3" ci="0" mb="0" cb="0"/><line nr="376" mi="11" ci="0" mb="2" cb="0"/><line nr="377" mi="10" ci="0" mb="0" cb="0"/><line nr="378" mi="1" ci="0" mb="0" cb="0"/><line nr="379" mi="3" ci="0" mb="0" cb="0"/><line nr="380" mi="13" ci="0" mb="0" cb="0"/><line nr="381" mi="3" ci="0" mb="0" cb="0"/><line nr="382" mi="11" ci="0" mb="2" cb="0"/><line nr="383" mi="10" ci="0" mb="0" cb="0"/><line nr="384" mi="1" ci="0" mb="0" cb="0"/><line nr="385" mi="3" ci="0" mb="0" cb="0"/><line nr="386" mi="13" ci="0" mb="0" cb="0"/><line nr="387" mi="13" ci="0" mb="0" cb="0"/><line nr="388" mi="13" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="0" cb="0"/><line nr="390" mi="1" ci="0" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="1" cb="1"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="423" mi="3" ci="0" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="434" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="3" mb="0" cb="0"/><line nr="454" mi="0" ci="1" mb="0" cb="0"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="465" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="2"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="479" mi="0" ci="2" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="1" cb="1"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="483" mi="0" ci="3" mb="0" cb="2"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="486" mi="0" ci="2" mb="0" cb="0"/><line nr="490" mi="0" ci="5" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="2"/><line nr="492" mi="0" ci="5" mb="0" cb="0"/><line nr="493" mi="0" ci="6" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="0" cb="0"/><line nr="497" mi="0" ci="1" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="0"/><line nr="510" mi="0" ci="3" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="2"/><line nr="512" mi="0" ci="6" mb="0" cb="0"/><line nr="514" mi="0" ci="4" mb="0" cb="0"/><line nr="517" mi="0" ci="3" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="6" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="0" ci="2" mb="0" cb="0"/><line nr="547" mi="0" ci="3" mb="0" cb="0"/><line nr="548" mi="0" ci="5" mb="0" cb="0"/><line nr="549" mi="0" ci="9" mb="0" cb="0"/><line nr="550" mi="0" ci="5" mb="0" cb="0"/><line nr="551" mi="0" ci="9" mb="0" cb="0"/><line nr="552" mi="0" ci="1" mb="0" cb="0"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="557" mi="0" ci="2" mb="0" cb="0"/><line nr="558" mi="0" ci="3" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="0"/><line nr="560" mi="0" ci="3" mb="0" cb="0"/><line nr="561" mi="0" ci="3" mb="0" cb="0"/><line nr="562" mi="0" ci="3" mb="0" cb="0"/><line nr="563" mi="0" ci="1" mb="0" cb="0"/><line nr="567" mi="0" ci="10" mb="0" cb="0"/><line nr="574" mi="0" ci="5" mb="0" cb="0"/><line nr="575" mi="0" ci="1" mb="0" cb="0"/><line nr="578" mi="0" ci="9" mb="0" cb="0"/><line nr="579" mi="0" ci="1" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="1" mb="0" cb="0"/><line nr="590" mi="0" ci="3" mb="0" cb="0"/><line nr="591" mi="0" ci="3" mb="0" cb="2"/><line nr="592" mi="0" ci="7" mb="0" cb="0"/><line nr="594" mi="0" ci="3" mb="0" cb="0"/><line nr="597" mi="0" ci="5" mb="0" cb="0"/><line nr="600" mi="0" ci="4" mb="0" cb="2"/><line nr="602" mi="0" ci="7" mb="0" cb="2"/><line nr="604" mi="0" ci="9" mb="0" cb="0"/><line nr="605" mi="1" ci="6" mb="1" cb="1"/><line nr="608" mi="0" ci="12" mb="0" cb="2"/><line nr="610" mi="0" ci="13" mb="0" cb="2"/><line nr="611" mi="0" ci="3" mb="0" cb="2"/><line nr="612" mi="0" ci="4" mb="0" cb="0"/><line nr="613" mi="0" ci="4" mb="0" cb="0"/><line nr="614" mi="0" ci="4" mb="0" cb="0"/><line nr="615" mi="0" ci="14" mb="1" cb="5"/><line nr="617" mi="0" ci="16" mb="0" cb="0"/><line nr="620" mi="0" ci="1" mb="0" cb="0"/><line nr="621" mi="0" ci="1" mb="0" cb="0"/><line nr="623" mi="0" ci="13" mb="0" cb="2"/><line nr="624" mi="0" ci="3" mb="1" cb="1"/><line nr="626" mi="0" ci="4" mb="0" cb="0"/><line nr="627" mi="0" ci="12" mb="0" cb="2"/><line nr="628" mi="0" ci="4" mb="1" cb="1"/><line nr="630" mi="0" ci="6" mb="0" cb="0"/><line nr="632" mi="0" ci="1" mb="0" cb="0"/><line nr="634" mi="0" ci="1" mb="0" cb="0"/><line nr="637" mi="0" ci="2" mb="0" cb="0"/><line nr="638" mi="0" ci="2" mb="0" cb="0"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="0" ci="11" mb="0" cb="2"/><line nr="659" mi="0" ci="4" mb="0" cb="0"/><line nr="660" mi="0" ci="4" mb="0" cb="0"/><line nr="661" mi="0" ci="9" mb="0" cb="4"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="665" mi="0" ci="11" mb="0" cb="2"/><line nr="666" mi="0" ci="3" mb="0" cb="2"/><line nr="667" mi="0" ci="4" mb="0" cb="0"/><line nr="668" mi="0" ci="4" mb="0" cb="0"/><line nr="669" mi="0" ci="4" mb="0" cb="0"/><line nr="671" mi="0" ci="14" mb="2" cb="4"/><line nr="673" mi="0" ci="2" mb="0" cb="0"/><line nr="674" mi="0" ci="3" mb="0" cb="0"/><line nr="675" mi="0" ci="2" mb="0" cb="0"/><line nr="676" mi="0" ci="1" mb="0" cb="0"/><line nr="679" mi="0" ci="1" mb="0" cb="0"/><line nr="680" mi="0" ci="1" mb="0" cb="0"/><line nr="681" mi="0" ci="1" mb="0" cb="0"/><line nr="682" mi="0" ci="2" mb="0" cb="0"/><line nr="693" mi="0" ci="11" mb="0" cb="2"/><line nr="694" mi="0" ci="4" mb="0" cb="0"/><line nr="695" mi="0" ci="3" mb="1" cb="1"/><line nr="697" mi="0" ci="4" mb="0" cb="0"/><line nr="699" mi="0" ci="9" mb="1" cb="3"/><line nr="700" mi="0" ci="4" mb="0" cb="0"/><line nr="701" mi="0" ci="3" mb="0" cb="0"/><line nr="702" mi="0" ci="3" mb="0" cb="0"/><line nr="704" mi="0" ci="10" mb="1" cb="1"/><line nr="705" mi="0" ci="3" mb="1" cb="1"/><line nr="706" mi="0" ci="4" mb="0" cb="0"/><line nr="707" mi="0" ci="4" mb="0" cb="0"/><line nr="708" mi="0" ci="4" mb="0" cb="0"/><line nr="709" mi="0" ci="12" mb="3" cb="3"/><line nr="711" mi="0" ci="3" mb="0" cb="0"/><line nr="713" mi="0" ci="1" mb="0" cb="0"/><line nr="716" mi="1" ci="0" mb="0" cb="0"/><line nr="717" mi="0" ci="1" mb="0" cb="0"/><line nr="719" mi="0" ci="1" mb="0" cb="0"/><line nr="720" mi="0" ci="1" mb="0" cb="0"/><line nr="732" mi="0" ci="2" mb="0" cb="0"/><line nr="734" mi="0" ci="11" mb="0" cb="2"/><line nr="735" mi="0" ci="3" mb="0" cb="0"/><line nr="736" mi="3" ci="2" mb="3" cb="1"/><line nr="737" mi="1" ci="0" mb="0" cb="0"/><line nr="741" mi="3" ci="0" mb="0" cb="0"/><line nr="742" mi="10" ci="0" mb="4" cb="0"/><line nr="743" mi="4" ci="0" mb="0" cb="0"/><line nr="744" mi="3" ci="0" mb="2" cb="0"/><line nr="745" mi="4" ci="0" mb="0" cb="0"/><line nr="746" mi="4" ci="0" mb="0" cb="0"/><line nr="747" mi="8" ci="0" mb="4" cb="0"/><line nr="748" mi="3" ci="0" mb="0" cb="0"/><line nr="749" mi="2" ci="0" mb="0" cb="0"/><line nr="753" mi="1" ci="0" mb="0" cb="0"/><line nr="754" mi="1" ci="0" mb="0" cb="0"/><line nr="755" mi="0" ci="2" mb="0" cb="0"/><line nr="760" mi="0" ci="2" mb="0" cb="0"/><line nr="761" mi="0" ci="5" mb="0" cb="0"/><line nr="767" mi="0" ci="2" mb="0" cb="0"/><line nr="776" mi="0" ci="3" mb="0" cb="2"/><line nr="777" mi="0" ci="5" mb="0" cb="0"/><line nr="779" mi="0" ci="3" mb="0" cb="0"/><line nr="780" mi="0" ci="5" mb="0" cb="0"/><line nr="781" mi="0" ci="2" mb="0" cb="0"/><line nr="782" mi="0" ci="2" mb="0" cb="0"/><line nr="803" mi="0" ci="4" mb="0" cb="2"/><line nr="804" mi="0" ci="4" mb="0" cb="0"/><line nr="805" mi="0" ci="5" mb="0" cb="0"/><line nr="806" mi="0" ci="6" mb="0" cb="0"/><line nr="807" mi="0" ci="3" mb="0" cb="2"/><line nr="809" mi="0" ci="6" mb="0" cb="0"/><line nr="813" mi="0" ci="3" mb="0" cb="0"/><line nr="814" mi="0" ci="5" mb="0" cb="4"/><line nr="815" mi="0" ci="7" mb="0" cb="0"/><line nr="817" mi="0" ci="1" mb="0" cb="0"/><line nr="820" mi="0" ci="7" mb="0" cb="0"/><line nr="823" mi="0" ci="5" mb="0" cb="0"/><line nr="833" mi="0" ci="4" mb="0" cb="2"/><line nr="834" mi="0" ci="4" mb="0" cb="0"/><line nr="835" mi="0" ci="5" mb="0" cb="0"/><line nr="836" mi="0" ci="12" mb="0" cb="8"/><line nr="837" mi="0" ci="2" mb="0" cb="0"/><line nr="838" mi="0" ci="5" mb="0" cb="0"/><line nr="839" mi="0" ci="4" mb="0" cb="0"/><line nr="841" mi="0" ci="4" mb="0" cb="0"/><line nr="842" mi="0" ci="6" mb="0" cb="0"/><line nr="843" mi="0" ci="7" mb="0" cb="0"/><line nr="845" mi="0" ci="5" mb="0" cb="0"/><line nr="853" mi="0" ci="4" mb="0" cb="0"/><line nr="854" mi="2" ci="8" mb="1" cb="1"/><line nr="855" mi="0" ci="4" mb="0" cb="0"/><line nr="856" mi="0" ci="1" mb="0" cb="0"/><line nr="859" mi="0" ci="10" mb="0" cb="2"/><line nr="860" mi="0" ci="4" mb="0" cb="0"/><line nr="861" mi="0" ci="2" mb="0" cb="2"/><line nr="863" mi="0" ci="4" mb="0" cb="0"/><line nr="865" mi="0" ci="1" mb="0" cb="0"/><line nr="866" mi="0" ci="1" mb="0" cb="0"/><line nr="875" mi="0" ci="15" mb="1" cb="5"/><line nr="878" mi="0" ci="2" mb="0" cb="0"/><line nr="880" mi="0" ci="3" mb="0" cb="0"/><line nr="881" mi="0" ci="2" mb="0" cb="0"/><line nr="885" mi="0" ci="2" mb="0" cb="2"/><line nr="887" mi="0" ci="7" mb="1" cb="3"/><line nr="890" mi="0" ci="3" mb="0" cb="0"/><line nr="891" mi="0" ci="3" mb="0" cb="2"/><line nr="892" mi="0" ci="10" mb="0" cb="2"/><line nr="893" mi="0" ci="4" mb="1" cb="1"/><line nr="894" mi="2" ci="0" mb="0" cb="0"/><line nr="895" mi="1" ci="0" mb="0" cb="0"/><line nr="897" mi="0" ci="2" mb="0" cb="0"/><line nr="899" mi="0" ci="2" mb="0" cb="0"/><line nr="904" mi="0" ci="6" mb="0" cb="2"/><line nr="911" mi="0" ci="2" mb="0" cb="0"/><line nr="913" mi="0" ci="4" mb="0" cb="2"/><line nr="914" mi="0" ci="4" mb="0" cb="0"/><line nr="915" mi="0" ci="3" mb="0" cb="2"/><line nr="916" mi="0" ci="4" mb="0" cb="0"/><line nr="919" mi="0" ci="2" mb="0" cb="0"/><line nr="923" mi="0" ci="4" mb="0" cb="0"/><line nr="924" mi="0" ci="4" mb="0" cb="0"/><line nr="925" mi="0" ci="2" mb="1" cb="1"/><line nr="926" mi="0" ci="10" mb="0" cb="2"/><line nr="927" mi="0" ci="5" mb="0" cb="0"/><line nr="928" mi="0" ci="5" mb="0" cb="2"/><line nr="929" mi="0" ci="8" mb="0" cb="0"/><line nr="930" mi="0" ci="5" mb="1" cb="1"/><line nr="931" mi="0" ci="5" mb="0" cb="0"/><line nr="933" mi="4" ci="0" mb="0" cb="0"/><line nr="935" mi="0" ci="1" mb="0" cb="0"/><line nr="937" mi="0" ci="2" mb="0" cb="0"/><line nr="941" mi="0" ci="4" mb="0" cb="0"/><line nr="942" mi="0" ci="5" mb="0" cb="0"/><line nr="943" mi="0" ci="2" mb="0" cb="2"/><line nr="944" mi="0" ci="8" mb="0" cb="2"/><line nr="945" mi="0" ci="4" mb="0" cb="0"/><line nr="946" mi="0" ci="5" mb="0" cb="0"/><line nr="947" mi="0" ci="2" mb="0" cb="0"/><line nr="948" mi="0" ci="5" mb="1" cb="3"/><line nr="949" mi="0" ci="5" mb="0" cb="2"/><line nr="950" mi="0" ci="5" mb="0" cb="0"/><line nr="951" mi="0" ci="3" mb="0" cb="2"/><line nr="952" mi="0" ci="3" mb="0" cb="0"/><line nr="953" mi="0" ci="3" mb="1" cb="1"/><line nr="954" mi="3" ci="0" mb="0" cb="0"/><line nr="955" mi="0" ci="3" mb="0" cb="2"/><line nr="956" mi="0" ci="3" mb="0" cb="0"/><line nr="957" mi="0" ci="3" mb="0" cb="2"/><line nr="958" mi="0" ci="3" mb="0" cb="0"/><line nr="959" mi="0" ci="8" mb="0" cb="4"/><line nr="960" mi="0" ci="3" mb="0" cb="0"/><line nr="961" mi="0" ci="3" mb="0" cb="2"/><line nr="962" mi="0" ci="3" mb="0" cb="0"/><line nr="963" mi="0" ci="3" mb="1" cb="1"/><line nr="964" mi="2" ci="0" mb="0" cb="0"/><line nr="966" mi="0" ci="6" mb="0" cb="2"/><line nr="968" mi="0" ci="2" mb="0" cb="0"/><line nr="971" mi="0" ci="4" mb="0" cb="0"/><line nr="974" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="243" covered="1324"/><counter type="BRANCH" missed="52" covered="182"/><counter type="LINE" missed="53" covered="329"/><counter type="COMPLEXITY" missed="43" covered="131"/><counter type="METHOD" missed="3" covered="54"/><counter type="CLASS" missed="0" covered="9"/></sourcefile><sourcefile name="SimplifyBooleanReturnsRule.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="2"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="1" cb="1"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="4"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="11" mb="0" cb="6"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="2" cb="2"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="1" cb="3"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="2" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="2" cb="0"/><line nr="65" mi="5" ci="0" mb="2" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="13" mb="0" cb="4"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="4" ci="4" mb="3" cb="1"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="16" mb="2" cb="2"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="6" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="2" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="2"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="18" mb="1" cb="5"/><line nr="187" mi="0" ci="23" mb="0" cb="6"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="2"/><line nr="198" mi="0" ci="3" mb="1" cb="1"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="13" mb="0" cb="4"/><line nr="211" mi="0" ci="4" mb="0" cb="2"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="2"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="2" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="2" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="2" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="249" mi="6" ci="0" mb="2" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="6" ci="0" mb="2" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="7" ci="0" mb="2" cb="0"/><line nr="256" mi="9" ci="0" mb="2" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="8" mb="2" cb="2"/><counter type="INSTRUCTION" missed="120" covered="327"/><counter type="BRANCH" missed="37" covered="57"/><counter type="LINE" missed="28" covered="55"/><counter type="COMPLEXITY" missed="27" covered="33"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GodClassRule.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="12" mb="1" cb="5"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="27" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="9" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="7" mb="0" cb="2"/><line nr="159" mi="0" ci="9" mb="0" cb="2"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="2"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="12" mb="0" cb="6"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="2"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="23" mb="1" cb="3"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="2"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="10" mb="1" cb="5"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="4"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="15" mb="0" cb="4"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="2"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="2"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="1" cb="1"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="1" cb="1"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="1" cb="1"/><line nr="275" mi="0" ci="7" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="13" mb="0" cb="2"/><line nr="286" mi="0" ci="5" mb="0" cb="2"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="9" mb="1" cb="5"/><line nr="293" mi="0" ci="6" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="0" cb="0"/><line nr="307" mi="0" ci="7" mb="0" cb="0"/><line nr="308" mi="0" ci="9" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="6" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="6" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="349" mi="0" ci="6" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="1" cb="1"/><line nr="362" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="595"/><counter type="BRANCH" missed="8" covered="62"/><counter type="LINE" missed="1" covered="120"/><counter type="COMPLEXITY" missed="8" covered="50"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImmutableFieldRule.java"><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="9" ci="22" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="2"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="8"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="1" cb="5"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="4"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="2"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="1" cb="1"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="8"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="6"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="20" mb="2" cb="6"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="1" cb="3"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="272"/><counter type="BRANCH" missed="5" covered="57"/><counter type="LINE" missed="0" covered="54"/><counter type="COMPLEXITY" missed="7" covered="35"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UnnecessaryLocalBeforeReturnRule.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="9" mb="0" cb="6"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="2"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="16" mb="0" cb="6"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="4"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="1" cb="1"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="2"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="1" cb="1"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="0" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="2"/><line nr="86" mi="0" ci="8" mb="0" cb="2"/><line nr="88" mi="0" ci="12" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="10" ci="20" mb="6" cb="6"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="2"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="2"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="1" cb="1"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="238"/><counter type="BRANCH" missed="9" covered="47"/><counter type="LINE" missed="2" covered="48"/><counter type="COMPLEXITY" missed="7" covered="27"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1011" covered="6384"/><counter type="BRANCH" missed="263" covered="983"/><counter type="LINE" missed="217" covered="1373"/><counter type="COMPLEXITY" missed="235" covered="615"/><counter type="METHOD" missed="26" covered="201"/><counter type="CLASS" missed="2" covered="36"/></package><package name="net/sourceforge/pmd/lang/java/rule/controversial"><class name="net/sourceforge/pmd/lang/java/rule/controversial/NullAssignmentRule"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTNullLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAssignmentToFinalField" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpression;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBadTernary" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalExpression;)Z" line="58"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/controversial/SuspiciousOctalEscapeRule"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="13"><counter type="INSTRUCTION" missed="8" covered="131"/><counter type="BRANCH" missed="12" covered="22"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="11" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOctal" desc="(C)Z" line="75"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDecimal" desc="(C)Z" line="79"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="153"/><counter type="BRANCH" missed="14" covered="28"/><counter type="LINE" missed="2" covered="34"/><counter type="COMPLEXITY" missed="13" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/controversial/DaaRuleViolation"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/Rule;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V" line="25"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableName" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/controversial/AssignmentInOperandRule"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowsAllAssignments" desc="()Z" line="64"><counter type="INSTRUCTION" missed="20" covered="8"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dysfunctionReason" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="138"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/controversial/DataflowAnomalyAnalysisRule$Usage"><method name="&lt;init&gt;" desc="(ILnet/sourceforge/pmd/lang/dfa/DataFlowNode;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/controversial/OnlyOneReturnRule"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterLambdaExpressions" desc="(Ljava/util/List;)Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/controversial/DataflowAnomalyAnalysisRule"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lnet/sourceforge/pmd/lang/dfa/pathfinder/CurrentPath;)V" line="85"><counter type="INSTRUCTION" missed="1" covered="60"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkVariableAccess" desc="(Lnet/sourceforge/pmd/lang/dfa/DataFlowNode;Lnet/sourceforge/pmd/lang/dfa/VariableAccess;Lnet/sourceforge/pmd/lang/java/rule/controversial/DataflowAnomalyAnalysisRule$Usage;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDaaViolation" desc="(Ljava/lang/Object;Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/String;Ljava/lang/String;II)V" line="135"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNumberOfViolationsReached" desc="()Z" line="155"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="violationAlreadyExists" desc="(Ljava/lang/String;Ljava/lang/String;II)Z" line="169"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="328"/><counter type="BRANCH" missed="8" covered="34"/><counter type="LINE" missed="1" covered="58"/><counter type="COMPLEXITY" missed="8" covered="22"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/controversial/DontImportSunRule"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="12"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OnlyOneReturnRule.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="2"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="0" ci="6" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssignmentInOperandRule.java"><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="59" mb="1" cb="19"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="20" ci="8" mb="7" cb="1"/><line nr="73" mi="2" ci="5" mb="1" cb="1"/><counter type="INSTRUCTION" missed="22" covered="138"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DataflowAnomalyAnalysisRule.java"><line nr="37" mi="0" ci="13" mb="0" cb="0"/><line nr="42" mi="0" ci="14" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="16" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="0" ci="11" mb="0" cb="2"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="4"/><line nr="123" mi="0" ci="11" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="4"/><line nr="125" mi="0" ci="11" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="4"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="2" cb="4"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="1" cb="1"/><line nr="139" mi="0" ci="24" mb="0" cb="0"/><line nr="141" mi="0" ci="12" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="2" ci="7" mb="1" cb="1"/><line nr="169" mi="0" ci="11" mb="0" cb="2"/><line nr="170" mi="0" ci="18" mb="2" cb="6"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="337"/><counter type="BRANCH" missed="8" covered="34"/><counter type="LINE" missed="2" covered="62"/><counter type="COMPLEXITY" missed="9" covered="23"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DontImportSunRule.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="4"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SuspiciousOctalEscapeRule.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="2"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="9" mb="1" cb="3"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="2"/><line nr="26" mi="0" ci="4" mb="1" cb="1"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="1" cb="1"/><line nr="29" mi="0" ci="4" mb="1" cb="1"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="12" mb="3" cb="5"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="1" cb="1"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="1" cb="1"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="1" cb="1"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="2" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="4"/><line nr="79" mi="1" ci="9" mb="2" cb="2"/><counter type="INSTRUCTION" missed="9" covered="153"/><counter type="BRANCH" missed="14" covered="28"/><counter type="LINE" missed="2" covered="34"/><counter type="COMPLEXITY" missed="13" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DaaRuleViolation.java"><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullAssignmentRule.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="2"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="2"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="2" cb="2"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="2"/><line nr="37" mi="0" ci="7" mb="1" cb="1"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="4"/><line nr="42" mi="0" ci="7" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="16" mb="2" cb="4"/><line nr="58" mi="0" ci="12" mb="1" cb="3"/><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="50" covered="861"/><counter type="BRANCH" missed="37" covered="123"/><counter type="LINE" missed="4" covered="165"/><counter type="COMPLEXITY" missed="34" covered="79"/><counter type="METHOD" missed="1" covered="32"/><counter type="CLASS" missed="0" covered="8"/></package><package name="net/sourceforge/pmd/lang/java/rule/migrating"><class name="net/sourceforge/pmd/lang/java/rule/migrating/JUnitUseExpectedRule"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBodyDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="1" covered="99"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCatch" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/java/ast/ASTCatchStatement;" line="108"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="200"/><counter type="BRANCH" missed="3" covered="35"/><counter type="LINE" missed="1" covered="46"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/migrating/UnnecessaryCastRule"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="166" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="JUnitUseExpectedRule.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="2"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="4"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="2"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="1" cb="1"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="13" mb="1" cb="5"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="1" cb="3"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="200"/><counter type="BRANCH" missed="3" covered="35"/><counter type="LINE" missed="1" covered="46"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryCastRule.java"><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="4" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="2" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="10" ci="0" mb="2" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="166" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="167" covered="200"/><counter type="BRANCH" missed="13" covered="35"/><counter type="LINE" missed="43" covered="46"/><counter type="COMPLEXITY" missed="13" covered="20"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="1" covered="1"/></package><package name="net/sourceforge/pmd/lang/java/rule/unusedcode"><class name="net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedPrivateMethodRule"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findUnique" desc="(Ljava/util/Map;)Ljava/util/Set;" line="63"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calledFromOutsideItself" desc="(Ljava/util/List;Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)Z" line="76"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="privateAndNotExcluded" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="210"/><counter type="BRANCH" missed="0" covered="36"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="0" covered="23"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedLocalVariableRule"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="actuallyUsed" desc="(Ljava/util/List;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedPrivateFieldRule"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usedInOuterEnum" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)Z" line="51"><counter type="INSTRUCTION" missed="1" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usedInOuterClass" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usedInOuter" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;Lnet/sourceforge/pmd/lang/java/ast/JavaNode;)Z" line="76"><counter type="INSTRUCTION" missed="2" covered="102"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="actuallyUsed" desc="(Ljava/util/List;)Z" line="109"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOK" desc="(Ljava/lang/String;)Z" line="120"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="270"/><counter type="BRANCH" missed="4" covered="44"/><counter type="LINE" missed="2" covered="53"/><counter type="COMPLEXITY" missed="4" covered="27"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedFormalParameterRule"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSerializationMethod" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;)Z" line="53"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwsOneException" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Class;)Z" line="70"><counter type="INSTRUCTION" missed="6" covered="28"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="actuallyUsed" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration;Ljava/util/List;)Z" line="100"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOverrideAnnotation" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;)Z" line="116"><counter type="INSTRUCTION" missed="5" covered="44"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="273"/><counter type="BRANCH" missed="15" covered="49"/><counter type="LINE" missed="1" covered="50"/><counter type="COMPLEXITY" missed="13" covered="28"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedModifierRule"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="20"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="14" covered="47"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="219"/><counter type="BRANCH" missed="9" covered="59"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="7" covered="35"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UnusedModifierRule.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="2"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="2"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="8" ci="6" mb="5" cb="1"/><line nr="43" mi="0" ci="5" mb="2" cb="2"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="1" cb="1"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="4"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="14" mb="0" cb="6"/><line nr="70" mi="0" ci="8" mb="0" cb="6"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="4"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="8"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="4"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="9" mb="0" cb="6"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="1" cb="3"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="0" cb="6"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="219"/><counter type="BRANCH" missed="9" covered="59"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="7" covered="35"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedFormalParameterRule.java"><line nr="30" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="4"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="14" mb="1" cb="7"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="17" mb="0" cb="8"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="16" mb="2" cb="4"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="1" cb="3"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="6" ci="10" mb="4" cb="2"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="2" cb="2"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="2"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="2"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="21" mb="0" cb="2"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="10" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="10" mb="1" cb="3"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="4" ci="6" mb="4" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="273"/><counter type="BRANCH" missed="15" covered="49"/><counter type="LINE" missed="1" covered="50"/><counter type="COMPLEXITY" missed="13" covered="28"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedLocalVariableRule.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="2"/><line nr="24" mi="0" ci="5" mb="0" cb="2"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="4"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="2"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedPrivateFieldRule.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="11" mb="0" cb="2"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="14" mb="0" cb="8"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="2"/><line nr="42" mi="0" ci="10" mb="0" cb="4"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="2"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="1" cb="1"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="1" cb="1"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="2"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="19" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="2"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="10" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="16" mb="2" cb="4"/><counter type="INSTRUCTION" missed="3" covered="270"/><counter type="BRANCH" missed="4" covered="44"/><counter type="LINE" missed="2" covered="53"/><counter type="COMPLEXITY" missed="4" covered="27"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedPrivateMethodRule.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="2"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="12" mb="0" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="16" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="15" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="2"/><line nr="66" mi="0" ci="14" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="2"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="4"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="25" mb="0" cb="10"/><counter type="INSTRUCTION" missed="0" covered="210"/><counter type="BRANCH" missed="0" covered="36"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="0" covered="23"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="28" covered="1038"/><counter type="BRANCH" missed="28" covered="200"/><counter type="LINE" missed="4" covered="200"/><counter type="COMPLEXITY" missed="24" covered="122"/><counter type="METHOD" missed="0" covered="32"/><counter type="CLASS" missed="0" covered="5"/></package><package name="net/sourceforge/pmd/lang/java/typeresolution/rules"><class name="net/sourceforge/pmd/lang/java/typeresolution/rules/LooseCoupling"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodHasOverride" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/typeresolution/rules/CloneMethodMustImplementCloneable"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extendsOrImplementsCloneable" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;)Z" line="43"><counter type="INSTRUCTION" missed="7" covered="71"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="25" covered="116"/><counter type="BRANCH" missed="20" covered="20"/><counter type="LINE" missed="6" covered="24"/><counter type="COMPLEXITY" missed="16" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineTopLevelCloneableClasses" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;)Ljava/util/Set;" line="147"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCloneMethod" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;)Z" line="159"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="256"/><counter type="BRANCH" missed="26" covered="46"/><counter type="LINE" missed="8" covered="59"/><counter type="COMPLEXITY" missed="22" covered="20"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/typeresolution/rules/SignatureDeclareThrowsException"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="8" covered="76"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJUnitTest" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;)Z" line="78"><counter type="INSTRUCTION" missed="6" covered="47"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJUnitTest" desc="(Ljava/lang/Class;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="104"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowedMethod" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;)Z" line="123"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkExceptions" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateExceptions" desc="(Ljava/util/List;Ljava/lang/Object;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasDeclaredExceptionInSignature" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;)Z" line="170"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParentSignatureDeclaration" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;)Z" line="178"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="269"/><counter type="BRANCH" missed="14" covered="44"/><counter type="LINE" missed="4" covered="56"/><counter type="COMPLEXITY" missed="14" covered="28"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LooseCoupling.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="2"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="11" mb="0" cb="8"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="2" cb="4"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="2" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="1" cb="1"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CloneMethodMustImplementCloneable.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="1" cb="1"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="8" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="1" cb="1"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="1" cb="1"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="1" cb="3"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="1" cb="1"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="1" cb="5"/><line nr="95" mi="0" ci="6" mb="1" cb="1"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="1" cb="1"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="16" mb="4" cb="4"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="10" ci="0" mb="6" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="2" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="1" cb="1"/><line nr="120" mi="0" ci="5" mb="1" cb="1"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="1" cb="1"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="2"/><line nr="151" mi="0" ci="7" mb="1" cb="3"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="2"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="256"/><counter type="BRANCH" missed="26" covered="46"/><counter type="LINE" missed="8" covered="59"/><counter type="COMPLEXITY" missed="22" covered="20"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SignatureDeclareThrowsException.java"><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="1" cb="3"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="1" cb="1"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="1" cb="3"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="1" cb="1"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="1" cb="1"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="2" cb="2"/><line nr="87" mi="2" ci="15" mb="0" cb="2"/><line nr="88" mi="0" ci="4" mb="1" cb="1"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="4"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="14" mb="1" cb="3"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="10" mb="0" cb="2"/><line nr="156" mi="0" ci="4" mb="1" cb="1"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="1" ci="11" mb="2" cb="2"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="1" ci="9" mb="1" cb="3"/><counter type="INSTRUCTION" missed="16" covered="269"/><counter type="BRANCH" missed="14" covered="44"/><counter type="LINE" missed="4" covered="56"/><counter type="COMPLEXITY" missed="14" covered="28"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="48" covered="603"/><counter type="BRANCH" missed="45" covered="107"/><counter type="LINE" missed="12" covered="132"/><counter type="COMPLEXITY" missed="41" covered="57"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="3"/></package><package name="net/sourceforge/pmd/lang/java/rule/codesize"><class name="net/sourceforge/pmd/lang/java/rule/codesize/TooManyFieldsRule"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bumpCounterFor" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="145"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/ExcessivePublicCountRule"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTallyOnAccessType" desc="(Lnet/sourceforge/pmd/lang/java/ast/AccessNode;)Ljava/lang/Integer;" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/NcssMethodCountRule"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getViolationParameters" desc="(Lnet/sourceforge/pmd/stat/DataPoint;)[Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/NcssTypeCountRule"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExplicitConstructorInvocation;Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTInitializer;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getViolationParameters" desc="(Lnet/sourceforge/pmd/stat/DataPoint;)[Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/StdCyclomaticComplexityRule"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="104"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTDoStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="118"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="148"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="155"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="164"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="186"><counter type="INSTRUCTION" missed="2" covered="100"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="219"><counter type="INSTRUCTION" missed="32" covered="30"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="235"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="486"/><counter type="BRANCH" missed="7" covered="37"/><counter type="LINE" missed="1" covered="94"/><counter type="COMPLEXITY" missed="7" covered="29"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/ModifiedCyclomaticComplexityRule"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/ExcessiveClassLengthRule"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/StdCyclomaticComplexityRule$Entry"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bumpDecisionPoints" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bumpDecisionPoints" desc="(I)V" line="69"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComplexityAverage" desc="()I" line="73"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/ExcessiveParameterListRule"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/NPathComplexityRule"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complexityMultipleOf" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;ILjava/lang/Object;)I" line="43"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complexitySumOf" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;ILjava/lang/Object;)I" line="56"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="5" covered="79"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="122"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTDoStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="144"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="156"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTryStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="208"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="216"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumExpressionComplexity" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExpression;)I" line="237"><counter type="INSTRUCTION" missed="2" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getViolationParameters" desc="(Lnet/sourceforge/pmd/stat/DataPoint;)[Ljava/lang/Object;" line="261"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="418"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="3" covered="86"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/CyclomaticComplexityRule"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTDoStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/NcssConstructorCountRule"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExplicitConstructorInvocation;Ljava/lang/Object;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getViolationParameters" desc="(Lnet/sourceforge/pmd/stat/DataPoint;)[Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/ExcessiveMethodLengthRule"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/codesize/AbstractNcssCountRule"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countNodeChildren" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;)Ljava/lang/Integer;" line="81"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTDoStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBreakStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="119"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="124"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTContinueStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="129"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFinallyStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="139"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="144"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSynchronizedStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="149"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTThrowStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="154"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="161"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLabeledStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="170"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="177"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;" line="192"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="178"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="2" covered="43"/><counter type="COMPLEXITY" missed="2" covered="23"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TooManyFieldsRule.java"><line nr="26" mi="0" ci="14" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="2"/><line nr="46" mi="0" ci="6" mb="0" cb="4"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="2" cb="2"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="12" mb="0" cb="2"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="2"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="145"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExcessiveMethodLengthRule.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NcssMethodCountRule.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExcessiveClassLengthRule.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NcssConstructorCountRule.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExcessivePublicCountRule.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="4"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractNcssCountRule.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="2"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="2"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="12" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="178"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="2" covered="43"/><counter type="COMPLEXITY" missed="2" covered="23"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StdCyclomaticComplexityRule.java"><line nr="41" mi="0" ci="13" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="18" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="1" cb="1"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="2"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="2"/><line nr="172" mi="0" ci="10" mb="0" cb="4"/><line nr="174" mi="0" ci="32" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="1" cb="1"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="2"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="1" cb="1"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="8" mb="0" cb="4"/><line nr="209" mi="2" ci="23" mb="1" cb="1"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="10" mb="2" cb="2"/><line nr="224" mi="32" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="8" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="2"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="2"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="8" mb="0" cb="4"/><line nr="247" mi="0" ci="21" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="527"/><counter type="BRANCH" missed="7" covered="39"/><counter type="LINE" missed="1" covered="103"/><counter type="COMPLEXITY" missed="7" covered="34"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ExcessiveParameterListRule.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NcssTypeCountRule.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NPathComplexityRule.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="2"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="17" mb="3" cb="7"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="10" mb="0" cb="2"/><line nr="111" mi="0" ci="9" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="9" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="2"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="2"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="1" cb="1"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="1" cb="1"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="10" mb="0" cb="2"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="10" mb="0" cb="2"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="418"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="3" covered="86"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CyclomaticComplexityRule.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="1" cb="1"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModifiedCyclomaticComplexityRule.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="53" covered="1599"/><counter type="BRANCH" missed="15" covered="111"/><counter type="LINE" missed="6" covered="338"/><counter type="COMPLEXITY" missed="17" covered="134"/><counter type="METHOD" missed="2" covered="86"/><counter type="CLASS" missed="0" covered="14"/></package><package name="net/sourceforge/pmd/lang/java/rule"><class name="net/sourceforge/pmd/lang/java/rule/AbstractJavaRule"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAll" desc="(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclaringType" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isQualifiedName" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importsPackage" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/String;)Z" line="55"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSuppressed" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExtendsList;Ljava/lang/Object;)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImplementsList;Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeParameters;Ljava/lang/Object;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberSelector;Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeBound;Ljava/lang/Object;)Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBody;Ljava/lang/Object;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBodyDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumBody;Ljava/lang/Object;)Ljava/lang/Object;" line="115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumConstant;Ljava/lang/Object;)Ljava/lang/Object;" line="119"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReferenceType;Ljava/lang/Object;)Ljava/lang/Object;" line="123"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeArguments;Ljava/lang/Object;)Ljava/lang/Object;" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeArgument;Ljava/lang/Object;)Ljava/lang/Object;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWildcardBounds;Ljava/lang/Object;)Ljava/lang/Object;" line="139"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="143"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTNormalAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="147"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMarkerAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="151"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSingleMemberAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberValuePairs;Ljava/lang/Object;)Ljava/lang/Object;" line="159"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberValuePair;Ljava/lang/Object;)Ljava/lang/Object;" line="163"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberValue;Ljava/lang/Object;)Ljava/lang/Object;" line="167"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberValueArrayInitializer;Ljava/lang/Object;)Ljava/lang/Object;" line="171"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="175"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeBody;Ljava/lang/Object;)Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeMemberDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="183"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="187"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTDefaultValue;Ljava/lang/Object;)Ljava/lang/Object;" line="191"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTRUNSIGNEDSHIFT;Ljava/lang/Object;)Ljava/lang/Object;" line="195"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTRSIGNEDSHIFT;Ljava/lang/Object;)Ljava/lang/Object;" line="199"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="203"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="207"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAssertStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="211"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPackageDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="215"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="219"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="227"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="231"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="235"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableInitializer;Ljava/lang/Object;)Ljava/lang/Object;" line="239"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArrayInitializer;Ljava/lang/Object;)Ljava/lang/Object;" line="243"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="247"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="251"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameters;Ljava/lang/Object;)Ljava/lang/Object;" line="255"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="259"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="263"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExplicitConstructorInvocation;Ljava/lang/Object;)Ljava/lang/Object;" line="267"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTInitializer;Ljava/lang/Object;)Ljava/lang/Object;" line="271"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTType;Ljava/lang/Object;)Ljava/lang/Object;" line="275"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimitiveType;Ljava/lang/Object;)Ljava/lang/Object;" line="279"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTResultType;Ljava/lang/Object;)Ljava/lang/Object;" line="283"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;" line="287"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTNameList;Ljava/lang/Object;)Ljava/lang/Object;" line="291"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="295"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAssignmentOperator;Ljava/lang/Object;)Ljava/lang/Object;" line="299"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="303"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="307"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalAndExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="311"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTInclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="315"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="319"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAndExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="323"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEqualityExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="327"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTInstanceOfExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="331"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTRelationalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="335"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTShiftExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="339"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAdditiveExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="343"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMultiplicativeExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="347"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTUnaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="351"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPreIncrementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="355"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPreDecrementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="359"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTUnaryExpressionNotPlusMinus;Ljava/lang/Object;)Ljava/lang/Object;" line="363"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPostfixExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="367"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCastExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="371"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="375"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;" line="379"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix;Ljava/lang/Object;)Ljava/lang/Object;" line="383"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="387"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBooleanLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="391"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTNullLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="395"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArguments;Ljava/lang/Object;)Ljava/lang/Object;" line="399"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArgumentList;Ljava/lang/Object;)Ljava/lang/Object;" line="403"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="407"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArrayDimsAndInits;Ljava/lang/Object;)Ljava/lang/Object;" line="411"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="415"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLabeledStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="419"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlock;Ljava/lang/Object;)Ljava/lang/Object;" line="423"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlockStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="427"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="431"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEmptyStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="435"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="439"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="443"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;" line="447"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="451"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="455"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTDoStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="459"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="463"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForInit;Ljava/lang/Object;)Ljava/lang/Object;" line="467"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpressionList;Ljava/lang/Object;)Ljava/lang/Object;" line="471"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForUpdate;Ljava/lang/Object;)Ljava/lang/Object;" line="475"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBreakStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="479"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTContinueStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="483"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="487"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTThrowStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="491"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSynchronizedStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="495"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTryStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="499"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFinallyStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="503"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="507"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTResourceSpecification;Ljava/lang/Object;)Ljava/lang/Object;" line="511"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTResources;Ljava/lang/Object;)Ljava/lang/Object;" line="515"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTResource;Ljava/lang/Object;)Ljava/lang/Object;" line="519"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLambdaExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="523"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodReference;Ljava/lang/Object;)Ljava/lang/Object;" line="527"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="609"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="12" covered="126"/><counter type="COMPLEXITY" missed="7" covered="119"/><counter type="METHOD" missed="4" covered="117"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/StringConcatenationRule"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="14"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/JavaRuleViolation"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/Rule;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/String;II)V" line="42"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/Rule;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSupressed" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/Rule;)Z" line="80"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClassNameFrom" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suppresses" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/Rule;)Z" line="127"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableNameIfExists" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="245"/><counter type="BRANCH" missed="6" covered="44"/><counter type="LINE" missed="0" covered="56"/><counter type="COMPLEXITY" missed="6" covered="25"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/AbstractInefficientZeroCheck"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComparisonTargets" desc="()Ljava/util/Map;" line="41"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNodeAndReport" desc="(Ljava/lang/Object;Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/ast/Node;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompare" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="107"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLiteralLeftHand" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLiteralRightHand" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLiteral" desc="(Lnet/sourceforge/pmd/lang/ast/Node;I)Z" line="124"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstChildOrThis" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="131"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkComparison" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/ast/Node;I)Z" line="149"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="246"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="3" covered="22"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/JavaRuleViolationFactory"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRuleViolation" desc="(Lnet/sourceforge/pmd/Rule;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/String;)Lnet/sourceforge/pmd/RuleViolation;" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRuleViolation" desc="(Lnet/sourceforge/pmd/Rule;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/String;II)Lnet/sourceforge/pmd/RuleViolation;" line="28"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/SymbolTableTestRule"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="16"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/UselessAssignment"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lnet/sourceforge/pmd/lang/dfa/pathfinder/CurrentPath;)V" line="61"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/AbstractLombokAwareRule"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="1" covered="29"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasClassLombokAnnotation" desc="()Z" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasLombokAnnotation" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="76"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="151"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/AbstractPoorMethodCall"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotedMethod" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;)Z" line="63"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/UselessAssignment$Usage"><method name="&lt;init&gt;" desc="(ILnet/sourceforge/pmd/lang/dfa/DataFlowNode;)V" line="50"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/GenericLiteralCheckerRule"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()V" line="33"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/rule/JavaRuleChainVisitor$1"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/rule/JavaRuleChainVisitor;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/JavaRuleChainVisitor"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexNodes" desc="(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/Rule;Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/RuleContext;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/AbstractStatisticalJavaRule"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDataPoint" desc="(Lnet/sourceforge/pmd/stat/DataPoint;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getViolationParameters" desc="(Lnet/sourceforge/pmd/stat/DataPoint;)[Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractLombokAwareRule.java"><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="1" ci="16" mb="3" cb="5"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="1" cb="1"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="1" cb="1"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="1" cb="1"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="151"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractStatisticalJavaRule.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SymbolTableTestRule.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="12" ci="0" mb="2" cb="0"/><line nr="17" mi="11" ci="0" mb="2" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="14" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringConcatenationRule.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="15" mi="7" ci="0" mb="2" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="2" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="2" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractInefficientZeroCheck.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="1" cb="5"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="2"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="16" mb="1" cb="7"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="16" mb="1" cb="3"/><counter type="INSTRUCTION" missed="0" covered="246"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="3" covered="22"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaRuleChainVisitor.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="11" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="10" mb="0" cb="2"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="2"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractPoorMethodCall.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="16" mb="0" cb="2"/><line nr="71" mi="0" ci="5" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="11" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="2"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericLiteralCheckerRule.java"><line nr="26" mi="9" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="2" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="4" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="10" ci="0" mb="6" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JavaRuleViolationFactory.java"><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UselessAssignment.java"><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="11" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="16" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="2" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="2" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="9" ci="0" mb="2" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="79" mi="8" ci="0" mb="4" cb="0"/><line nr="81" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="JavaRuleViolation.java"><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="1" cb="1"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="2" ci="7" mb="1" cb="1"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="1" cb="3"/><line nr="83" mi="0" ci="10" mb="0" cb="4"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="4"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="2"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="2"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="10" mb="1" cb="1"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="0" ci="5" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="1" cb="1"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="12" mb="0" cb="4"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="2"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="245"/><counter type="BRANCH" missed="6" covered="44"/><counter type="LINE" missed="0" covered="56"/><counter type="COMPLEXITY" missed="6" covered="25"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractJavaRule.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="9" mb="0" cb="2"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="2" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="2"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="10" ci="0" mb="2" cb="0"/><line nr="57" mi="5" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="5" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="407" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><line nr="419" mi="5" ci="0" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="5" mb="0" cb="0"/><line nr="431" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="5" mb="0" cb="0"/><line nr="439" mi="0" ci="5" mb="0" cb="0"/><line nr="443" mi="0" ci="5" mb="0" cb="0"/><line nr="447" mi="0" ci="5" mb="0" cb="0"/><line nr="451" mi="0" ci="5" mb="0" cb="0"/><line nr="455" mi="0" ci="5" mb="0" cb="0"/><line nr="459" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="5" mb="0" cb="0"/><line nr="467" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="475" mi="0" ci="5" mb="0" cb="0"/><line nr="479" mi="0" ci="5" mb="0" cb="0"/><line nr="483" mi="0" ci="5" mb="0" cb="0"/><line nr="487" mi="0" ci="5" mb="0" cb="0"/><line nr="491" mi="0" ci="5" mb="0" cb="0"/><line nr="495" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="503" mi="0" ci="5" mb="0" cb="0"/><line nr="507" mi="0" ci="5" mb="0" cb="0"/><line nr="511" mi="0" ci="5" mb="0" cb="0"/><line nr="515" mi="0" ci="5" mb="0" cb="0"/><line nr="519" mi="0" ci="5" mb="0" cb="0"/><line nr="523" mi="0" ci="5" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="609"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="12" covered="126"/><counter type="COMPLEXITY" missed="7" covered="119"/><counter type="METHOD" missed="4" covered="117"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="302" covered="1471"/><counter type="BRANCH" missed="56" covered="110"/><counter type="LINE" missed="70" covered="315"/><counter type="COMPLEXITY" missed="53" covered="204"/><counter type="METHOD" missed="17" covered="157"/><counter type="CLASS" missed="5" covered="9"/></package><package name="net/sourceforge/pmd/lang/java/rule/coupling"><class name="net/sourceforge/pmd/lang/java/rule/coupling/LoosePackageCouplingRule"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPackageDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRestrictedPackages" desc="()Ljava/util/List;" line="112"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isContainingPackage" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowedClass" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;)Z" line="122"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checksNothing" desc="()Z" line="134"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dysfunctionReason" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="214"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/coupling/LawOfDemeterRule"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addViolations" desc="(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/coupling/LooseCouplingRule"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodHasOverride" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/coupling/CouplingBetweenObjectsRule"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTResultType;Ljava/lang/Object;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleASTTypeChildren" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkVariableType" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/String;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterTypes" desc="(Ljava/lang/String;)Z" line="155"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterPrimitivesAndWrappers" desc="(Ljava/lang/String;)Z" line="163"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="283"/><counter type="BRANCH" missed="2" covered="54"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="2" covered="38"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/coupling/ExcessiveImportsRule"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="35"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/coupling/LawOfDemeterRule$Assignment"><method name="&lt;init&gt;" desc="(IZZZ)V" line="419"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="428"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Lnet/sourceforge/pmd/lang/java/rule/coupling/LawOfDemeterRule$Assignment;)I" line="433"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="21"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/coupling/LawOfDemeterRule$MethodCall"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Lnet/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMethodCalls" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Ljava/util/List;" line="131"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotAConstructorCall" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="150"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotLiteral" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="154"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotBuilder" desc="()Z" line="162"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findSuffixesWithoutArguments" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Ljava/util/List;" line="169"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasRealPrefix" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="182"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuffixesWithArguments" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="187"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;)V" line="201"><counter type="INSTRUCTION" missed="7" covered="59"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix;)V" line="228"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkViolation" desc="()V" line="233"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineType" desc="()V" line="255"><counter type="INSTRUCTION" missed="0" covered="108"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findInLocalScope" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/symboltable/Scope;)Lnet/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration;" line="289"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineTypeOfVariable" desc="(Ljava/lang/String;Ljava/util/Set;)Lnet/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration;" line="300"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineLastAssignment" desc="()Lnet/sourceforge/pmd/lang/java/rule/coupling/LawOfDemeterRule$Assignment;" line="311"><counter type="INSTRUCTION" missed="0" covered="154"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIterator" desc="()Z" line="363"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFactory" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator;)Z" line="371"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForLoop" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator;)Z" line="382"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;" line="386"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isViolation" desc="()Z" line="390"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getViolationReason" desc="()Ljava/lang/String;" line="394"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="399"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="695"/><counter type="BRANCH" missed="10" covered="118"/><counter type="LINE" missed="4" covered="157"/><counter type="COMPLEXITY" missed="11" covered="76"/><counter type="METHOD" missed="1" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CouplingBetweenObjectsRule.java"><line nr="39" mi="0" ci="14" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="2"/><line nr="55" mi="0" ci="15" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="1" cb="1"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="2"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="2"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="14" mb="0" cb="6"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="18" mb="1" cb="7"/><line nr="163" mi="0" ci="44" mb="0" cb="20"/><counter type="INSTRUCTION" missed="0" covered="283"/><counter type="BRANCH" missed="2" covered="54"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="2" covered="38"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LawOfDemeterRule.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="2"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="19" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="6"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="2"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="2"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="1" cb="1"/><line nr="156" mi="0" ci="8" mb="0" cb="2"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="22" mb="3" cb="5"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="1" cb="1"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="10" mb="0" cb="2"/><line nr="173" mi="0" ci="3" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="4"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="10" mb="0" cb="2"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="2"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="8" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="1" cb="1"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="1" cb="1"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="2"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="11" mb="0" cb="8"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="2"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="2"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="2"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="11" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="2"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="11" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="2"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="12" mb="1" cb="5"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="2"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="2"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="10" mb="0" cb="4"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="8" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="4"/><line nr="293" mi="0" ci="6" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="10" mb="0" cb="2"/><line nr="302" mi="0" ci="5" mb="0" cb="2"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="9" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="10" mb="0" cb="2"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="2"/><line nr="322" mi="0" ci="8" mb="0" cb="2"/><line nr="323" mi="0" ci="11" mb="0" cb="4"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="11" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="10" mb="0" cb="2"/><line nr="334" mi="0" ci="10" mb="0" cb="4"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="1" cb="1"/><line nr="340" mi="0" ci="5" mb="0" cb="0"/><line nr="341" mi="0" ci="7" mb="0" cb="4"/><line nr="343" mi="0" ci="9" mb="0" cb="2"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="11" mb="0" cb="0"/><line nr="351" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="2"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="357" mi="0" ci="5" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="15" mb="1" cb="7"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="10" mb="0" cb="2"/><line nr="374" mi="0" ci="6" mb="0" cb="2"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="1" mb="0" cb="0"/><line nr="378" mi="0" ci="1" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="399" mi="56" ci="0" mb="0" cb="0"/><line nr="413" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="2" mb="0" cb="0"/><line nr="420" mi="0" ci="3" mb="0" cb="0"/><line nr="421" mi="0" ci="3" mb="0" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="424" mi="0" ci="1" mb="0" cb="0"/><line nr="428" mi="25" ci="0" mb="0" cb="0"/><line nr="433" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="778"/><counter type="BRANCH" missed="10" covered="124"/><counter type="LINE" missed="5" covered="177"/><counter type="COMPLEXITY" missed="12" covered="84"/><counter type="METHOD" missed="2" covered="27"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="LooseCouplingRule.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="13" mb="0" cb="8"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="10" mb="1" cb="5"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="1" cb="3"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LoosePackageCouplingRule.java"><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="2"/><line nr="90" mi="0" ci="11" mb="1" cb="3"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="15" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="15" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="23" mb="1" cb="7"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="19" mb="0" cb="2"/><line nr="124" mi="0" ci="4" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="1" ci="15" mb="2" cb="2"/><line nr="143" mi="1" ci="6" mb="1" cb="1"/><counter type="INSTRUCTION" missed="2" covered="214"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExcessiveImportsRule.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="92" covered="1362"/><counter type="BRANCH" missed="19" covered="223"/><counter type="LINE" missed="5" covered="283"/><counter type="COMPLEXITY" missed="21" covered="156"/><counter type="METHOD" missed="2" covered="54"/><counter type="CLASS" missed="0" covered="7"/></package><package name="net/sourceforge/pmd/lang/java/typeresolution/visitors"><class name="net/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor$PMDFieldVisitor"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotation" desc="(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;" line="200"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAttribute" desc="(Lorg/objectweb/asm/Attribute;)V" line="206"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitEnd" desc="()V" line="210"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor$PMDAnnotationVisitor"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotation" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/AnnotationVisitor;" line="223"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitEnum" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="229"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitArray" desc="(Ljava/lang/String;)Lorg/objectweb/asm/AnnotationVisitor;" line="234"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitEnd" desc="()V" line="239"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="243"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor$PMDSignatureVisitor"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor;)V" line="253"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFormalTypeParameter" desc="(Ljava/lang/String;)V" line="259"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassBound" desc="()Lorg/objectweb/asm/signature/SignatureVisitor;" line="263"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitInterfaceBound" desc="()Lorg/objectweb/asm/signature/SignatureVisitor;" line="268"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitSuperclass" desc="()Lorg/objectweb/asm/signature/SignatureVisitor;" line="273"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitInterface" desc="()Lorg/objectweb/asm/signature/SignatureVisitor;" line="278"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitParameterType" desc="()Lorg/objectweb/asm/signature/SignatureVisitor;" line="283"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReturnType" desc="()Lorg/objectweb/asm/signature/SignatureVisitor;" line="288"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitExceptionType" desc="()Lorg/objectweb/asm/signature/SignatureVisitor;" line="293"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitBaseType" desc="(C)V" line="298"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTypeVariable" desc="(Ljava/lang/String;)V" line="302"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArrayType" desc="()Lorg/objectweb/asm/signature/SignatureVisitor;" line="306"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassType" desc="(Ljava/lang/String;)V" line="311"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitInnerClassType" desc="(Ljava/lang/String;)V" line="316"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitTypeArgument" desc="()V" line="321"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTypeArgument" desc="(C)Lorg/objectweb/asm/signature/SignatureVisitor;" line="325"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitEnd" desc="()V" line="330"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="32"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor$PMDMethodVisitor"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor;)V" line="337"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitParameterAnnotation" desc="(ILjava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;" line="343"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAnnotation" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/AnnotationVisitor;" line="348"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitTypeInsn" desc="(ILjava/lang/String;)V" line="354"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFieldInsn" desc="(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="363"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitMethodInsn" desc="(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" line="369"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLdcInsn" desc="(Ljava/lang/Object;)V" line="382"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitMultiANewArrayInsn" desc="(Ljava/lang/String;I)V" line="391"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitLocalVariable" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;I)V" line="396"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCode" desc="()V" line="401"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFrame" desc="(II[Ljava/lang/Object;I[Ljava/lang/Object;)V" line="405"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitInsn" desc="(I)V" line="409"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIntInsn" desc="(II)V" line="413"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitVarInsn" desc="(II)V" line="417"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitJumpInsn" desc="(ILorg/objectweb/asm/Label;)V" line="421"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLabel" desc="(Lorg/objectweb/asm/Label;)V" line="425"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIincInsn" desc="(II)V" line="429"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTableSwitchInsn" desc="(IILorg/objectweb/asm/Label;[Lorg/objectweb/asm/Label;)V" line="433"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitLookupSwitchInsn" desc="(Lorg/objectweb/asm/Label;[I[Lorg/objectweb/asm/Label;)V" line="437"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTryCatchBlock" desc="(Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;Ljava/lang/String;)V" line="441"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLineNumber" desc="(ILorg/objectweb/asm/Label;)V" line="446"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitMaxs" desc="(II)V" line="450"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotationDefault" desc="()Lorg/objectweb/asm/AnnotationVisitor;" line="454"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAnnotation" desc="(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;" line="459"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitEnd" desc="()V" line="465"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAttribute" desc="(Lorg/objectweb/asm/Attribute;)V" line="469"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="96"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="9" covered="36"/><counter type="COMPLEXITY" missed="6" covered="23"/><counter type="METHOD" missed="6" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackages" desc="()Ljava/util/Map;" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInnerClasses" desc="()Ljava/util/List;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseClassName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseClassName" desc="([Ljava/lang/String;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractSignature" desc="(Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotation" desc="(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;" line="100"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitField" desc="(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/objectweb/asm/FieldVisitor;" line="106"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitMethod" desc="(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/objectweb/asm/MethodVisitor;" line="119"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSource" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitInnerClass" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V" line="133"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitOuterClass" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="149"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitEnd" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMethodDesc" desc="(Ljava/lang/String;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTypes" desc="(Ljava/lang/String;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addType" desc="(Lorg/objectweb/asm/Type;)V" line="168"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAttribute" desc="(Lorg/objectweb/asm/Attribute;)V" line="183"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="277"/><counter type="BRANCH" missed="1" covered="30"/><counter type="LINE" missed="2" covered="71"/><counter type="COMPLEXITY" missed="2" covered="32"/><counter type="METHOD" missed="1" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PMDASMVisitor.java"><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="2"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="16" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="2"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="2"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="16" mb="0" cb="2"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="3"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="1" cb="1"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="1" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="0" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="5" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="5" ci="0" mb="0" cb="0"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="2"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="357" mi="0" ci="5" mb="0" cb="0"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="5" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="2"/><line nr="383" mi="0" ci="6" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="2"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="391" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="1" ci="0" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="1" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="429" mi="0" ci="1" mb="0" cb="0"/><line nr="433" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="0" ci="5" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="450" mi="0" ci="1" mb="0" cb="0"/><line nr="454" mi="4" ci="0" mb="0" cb="0"/><line nr="459" mi="0" ci="5" mb="0" cb="0"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="1" mb="0" cb="0"/><line nr="469" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="441"/><counter type="BRANCH" missed="2" covered="37"/><counter type="LINE" missed="20" covered="138"/><counter type="COMPLEXITY" missed="15" covered="76"/><counter type="METHOD" missed="13" covered="58"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="59" covered="441"/><counter type="BRANCH" missed="2" covered="37"/><counter type="LINE" missed="20" covered="138"/><counter type="COMPLEXITY" missed="15" covered="76"/><counter type="METHOD" missed="13" covered="58"/><counter type="CLASS" missed="0" covered="5"/></package><package name="net/sourceforge/pmd/lang/java/rule/optimizations"><class name="net/sourceforge/pmd/lang/java/rule/optimizations/AvoidInstantiatingObjectsInLoopsRule"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fourthParentNotThrow" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;)Z" line="26"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fourthParentNotReturn" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insideLoop" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;)Z" line="34"><counter type="INSTRUCTION" missed="4" covered="43"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="86"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/optimizations/RedundantFieldInitializerRule"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="0" covered="206"/><counter type="BRANCH" missed="7" covered="39"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="7" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRef" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator;)Z" line="140"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addViolation" desc="(Ljava/lang/Object;Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator;)V" line="151"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseInteger" desc="(Ljava/lang/String;)Ljava/lang/Number;" line="155"><counter type="INSTRUCTION" missed="9" covered="82"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="320"/><counter type="BRANCH" missed="10" covered="54"/><counter type="LINE" missed="3" covered="63"/><counter type="COMPLEXITY" missed="10" covered="27"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/optimizations/PrematureDeclarationRule"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="1" covered="55"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLambda" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlockStatement;)Z" line="72"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAsParentBetween" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Class;Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="89"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasExit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlockStatement;)Z" line="111"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasReferencesIn" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlockStatement;Ljava/lang/String;)Z" line="146"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="168"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="varNameIn" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;)Ljava/lang/String;" line="181"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaNode;Lnet/sourceforge/pmd/lang/ast/Node;)I" line="196"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blocksAfter" desc="(Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaNode;Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaNode;)Ljava/util/List;" line="219"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="233"/><counter type="BRANCH" missed="4" covered="34"/><counter type="LINE" missed="2" covered="53"/><counter type="COMPLEXITY" missed="4" covered="25"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/optimizations/MethodArgumentCouldBeFinalRule"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookForViolation" desc="(Lnet/sourceforge/pmd/lang/symboltable/Scope;Ljava/lang/Object;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/optimizations/UnnecessaryWrapperObjectCreationRule"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;" line="28"><counter type="INSTRUCTION" missed="5" covered="87"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="159"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/optimizations/AbstractOptimizationRule"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assigned" desc="(Ljava/util/List;)Z" line="29"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/optimizations/UseStringBufferForStringAppendsRule"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="0" covered="150"/><counter type="BRANCH" missed="7" covered="37"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="7" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="153"/><counter type="BRANCH" missed="7" covered="37"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="7" covered="17"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/optimizations/LocalVariableCouldBeFinalRule"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UseStringBufferForStringAppendsRule.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="4"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="11" mb="0" cb="2"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="2"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="4"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="1" cb="3"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="2"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="12" mb="1" cb="5"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="2" cb="2"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="1" cb="3"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="1" cb="3"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="153"/><counter type="BRANCH" missed="7" covered="37"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="7" covered="17"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RedundantFieldInitializerRule.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="12" mb="0" cb="2"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="1" cb="1"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="1" cb="1"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="1" cb="3"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="9" mb="1" cb="3"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="2"/><line nr="66" mi="0" ci="9" mb="0" cb="4"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="1" cb="3"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="1" cb="1"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="2"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="1" cb="1"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="1" cb="3"/><line nr="163" mi="0" ci="12" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="4"/><line nr="165" mi="0" ci="12" mb="0" cb="0"/><line nr="166" mi="0" ci="9" mb="0" cb="4"/><line nr="167" mi="0" ci="12" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="1" cb="1"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="320"/><counter type="BRANCH" missed="10" covered="54"/><counter type="LINE" missed="3" covered="63"/><counter type="COMPLEXITY" missed="10" covered="27"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractOptimizationRule.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="2"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="2"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="4"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodArgumentCouldBeFinalRule.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="4"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="11" mb="0" cb="2"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="1" cb="5"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidInstantiatingObjectsInLoopsRule.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="12" mb="0" cb="6"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="11" mb="0" cb="2"/><line nr="30" mi="0" ci="11" mb="0" cb="2"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="2"/><line nr="36" mi="0" ci="9" mb="0" cb="6"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="1" cb="1"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="15" mb="0" cb="6"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="86"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrematureDeclarationRule.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="2"/><line nr="58" mi="0" ci="8" mb="1" cb="3"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="2" ci="6" mb="1" cb="1"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="2"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="2"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="1" cb="3"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="10" mb="0" cb="2"/><line nr="149" mi="0" ci="5" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="13" mb="0" cb="2"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="1" cb="1"/><line nr="199" mi="0" ci="5" mb="0" cb="2"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="2"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="2"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="233"/><counter type="BRANCH" missed="4" covered="34"/><counter type="LINE" missed="2" covered="53"/><counter type="COMPLEXITY" missed="4" covered="25"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryWrapperObjectCreationRule.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="32" mb="0" cb="0"/><line nr="24" mi="0" ci="37" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="4"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="1" cb="1"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="12" mb="1" cb="1"/><line nr="40" mi="0" ci="10" mb="1" cb="5"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="1" cb="1"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="2" cb="4"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="159"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocalVariableCouldBeFinalRule.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="2"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="2"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="2"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="2"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="23" covered="1112"/><counter type="BRANCH" missed="29" covered="195"/><counter type="LINE" missed="7" covered="223"/><counter type="COMPLEXITY" missed="29" covered="117"/><counter type="METHOD" missed="0" covered="34"/><counter type="CLASS" missed="0" covered="8"/></package><package name="net/sourceforge/pmd/lang/java/rule/sunsecure"><class name="net/sourceforge/pmd/lang/java/rule/sunsecure/ArrayIsStoredDirectlyRule"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkAll" desc="(Ljava/lang/Object;[Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameter;Ljava/util/List;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpressionVarName" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="12" covered="38"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForDirectAssignment" desc="(Ljava/lang/Object;Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameter;Ljava/util/List;)Z" line="93"><counter type="INSTRUCTION" missed="3" covered="126"/><counter type="BRANCH" missed="5" covered="27"/><counter type="LINE" missed="3" covered="33"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrays" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameters;)[Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameter;" line="150"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="278"/><counter type="BRANCH" missed="10" covered="48"/><counter type="LINE" missed="5" covered="69"/><counter type="COMPLEXITY" missed="9" covered="28"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/sunsecure/AbstractSunSecureRule"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isField" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/java/ast/ASTTypeDeclaration;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnedVariableName" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;)Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasTernaryNullCheck" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;)Z" line="82"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasTernaryCondition" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;)Z" line="90"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLocalVariable" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="107"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstNameImage" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="175"/><counter type="BRANCH" missed="8" covered="32"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="8" covered="19"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/sunsecure/MethodReturnsInternalArrayRule"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasClone" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;Ljava/lang/String;)Z" line="87"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasArraysCopyOf" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmptyArray" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/java/ast/ASTTypeDeclaration;)Z" line="116"><counter type="INSTRUCTION" missed="3" covered="69"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="300"/><counter type="BRANCH" missed="15" covered="63"/><counter type="LINE" missed="2" covered="62"/><counter type="COMPLEXITY" missed="15" covered="30"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractSunSecureRule.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="1" cb="1"/><line nr="43" mi="0" ci="10" mb="0" cb="2"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="1" cb="3"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="4"/><line nr="66" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="31" mb="3" cb="5"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="1" cb="3"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="1" cb="1"/><line nr="109" mi="0" ci="10" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="1" cb="3"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="4"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="175"/><counter type="BRANCH" missed="8" covered="32"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="8" covered="19"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodReturnsInternalArrayRule.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="2"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="4"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="2"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="2"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="2"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="1" cb="3"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="1" cb="1"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="2"/><line nr="89" mi="0" ci="26" mb="3" cb="7"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="13" mb="2" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="2"/><line nr="106" mi="0" ci="31" mb="2" cb="8"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="1" cb="1"/><line nr="118" mi="0" ci="10" mb="0" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="1" cb="3"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="1" cb="3"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="1" cb="3"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="1" cb="1"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="1" cb="3"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="300"/><counter type="BRANCH" missed="15" covered="63"/><counter type="LINE" missed="2" covered="62"/><counter type="COMPLEXITY" missed="15" covered="30"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayIsStoredDirectlyRule.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="2"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="2"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="16" mb="0" cb="2"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="2" cb="0"/><line nr="81" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="2"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="1" cb="3"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="1" cb="1"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="1" cb="1"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="1" cb="1"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="4"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="1" cb="1"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="1" cb="3"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="0" cb="2"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="278"/><counter type="BRANCH" missed="10" covered="48"/><counter type="LINE" missed="5" covered="69"/><counter type="COMPLEXITY" missed="9" covered="28"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="18" covered="753"/><counter type="BRANCH" missed="33" covered="143"/><counter type="LINE" missed="7" covered="165"/><counter type="COMPLEXITY" missed="32" covered="77"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="3"/></package><package name="net/sourceforge/pmd/lang/java/rule/javabeans"><class name="net/sourceforge/pmd/lang/java/rule/javabeans/BeanMembersShouldSerializeRule"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="imagesOf" desc="(Ljava/util/List;)[Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="161"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimIfPrefix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBeanAccessor" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="266"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BeanMembersShouldSerializeRule.java"><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="2"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="2"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="11" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="12" mb="0" cb="6"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="17" mb="0" cb="0"/><line nr="83" mi="0" ci="26" mb="0" cb="4"/><line nr="85" mi="0" ci="15" mb="0" cb="2"/><line nr="88" mi="0" ci="7" mb="0" cb="6"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="1" cb="3"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="4"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="1" cb="3"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="266"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="266"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></package><package name="net/sourceforge/pmd/lang/java/rule/junit"><class name="net/sourceforge/pmd/lang/java/rule/junit/AbstractJUnitRule"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTestNgClass" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJUnitMethod" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Z" line="81"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJUnit4Method" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;)Z" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJUnit3Method" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;)Z" line="99"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJUnit3Class" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)Z" line="107"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJUnit4Class" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)Z" line="129"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doesNodeContainJUnitAnnotation" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="133"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="14" covered="13"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="237"/><counter type="BRANCH" missed="5" covered="47"/><counter type="LINE" missed="9" covered="59"/><counter type="COMPLEXITY" missed="5" covered="31"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/junit/JUnitTestsShouldIncludeAssertRule"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExpectOrAssert" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/util/Map;)Z" line="53"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleAnnotatedExpectedExceptions" desc="(Lnet/sourceforge/pmd/lang/symboltable/Scope;)Ljava/util/Map;" line="78"><counter type="INSTRUCTION" missed="1" covered="72"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExpectAnnotated" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="104"><counter type="INSTRUCTION" missed="10" covered="49"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAssertOrFailStatement" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpression;)Z" line="124"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExpectStatement" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpression;Ljava/util/Map;)Z" line="140"><counter type="INSTRUCTION" missed="1" covered="71"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="310"/><counter type="BRANCH" missed="16" covered="56"/><counter type="LINE" missed="4" covered="61"/><counter type="COMPLEXITY" missed="14" covered="30"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/junit/JUnitAssertionsShouldIncludeMessageRule$1"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/rule/junit/JUnitAssertionsShouldIncludeMessageRule;Ljava/lang/String;I)V" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isException" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArguments;)Z" line="67"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/junit/TestClassWithoutTestCasesRule"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="15"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInInnerClassOrInterface" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;)Z" line="38"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/junit/JUnitAssertionsShouldIncludeMessageRule$AssertionCall"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/rule/junit/JUnitAssertionsShouldIncludeMessageRule;Ljava/lang/String;I)V" line="21"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Ljava/lang/Object;Lnet/sourceforge/pmd/lang/java/ast/ASTArguments;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isException" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArguments;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/junit/JUnitAssertionsShouldIncludeMessageRule"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="118"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArguments;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="139"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TestClassWithoutTestCasesRule.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="9" mb="2" cb="4"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="1" cb="1"/><line nr="23" mi="0" ci="10" mb="0" cb="2"/><line nr="24" mi="0" ci="9" mb="0" cb="4"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="2"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="9" mb="1" cb="3"/><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JUnitAssertionsShouldIncludeMessageRule.java"><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="4"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="17" mb="1" cb="5"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="2"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="19" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="1" cb="3"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="233"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AbstractJUnitRule.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="6"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="8" mb="1" cb="3"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="1" cb="7"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="1" cb="1"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="13" mb="1" cb="3"/><line nr="107" mi="0" ci="7" mb="0" cb="4"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="2"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="2"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="1" cb="3"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="237"/><counter type="BRANCH" missed="5" covered="47"/><counter type="LINE" missed="9" covered="59"/><counter type="COMPLEXITY" missed="5" covered="31"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JUnitTestsShouldIncludeAssertRule.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="2"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="2"/><line nr="40" mi="0" ci="5" mb="0" cb="2"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="11" mb="0" cb="4"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="2"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="4"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="1" cb="3"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="2"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="8" ci="7" mb="6" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="10" mb="1" cb="1"/><line nr="111" mi="0" ci="5" mb="1" cb="1"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="1" cb="1"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="18" mb="2" cb="8"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="1" cb="1"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="13" mb="1" cb="1"/><line nr="154" mi="0" ci="19" mb="2" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="310"/><counter type="BRANCH" missed="16" covered="56"/><counter type="LINE" missed="4" covered="61"/><counter type="COMPLEXITY" missed="14" covered="30"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="30" covered="846"/><counter type="BRANCH" missed="27" covered="137"/><counter type="LINE" missed="13" covered="169"/><counter type="COMPLEXITY" missed="25" covered="85"/><counter type="METHOD" missed="0" covered="28"/><counter type="CLASS" missed="0" covered="6"/></package><package name="net/sourceforge/pmd/lang/java/rule/regex"><class name="net/sourceforge/pmd/lang/java/rule/regex/RegexHelper"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compilePatternsFromList" desc="(Ljava/util/List;)Ljava/util/List;" line="34"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMatch" desc="(Ljava/util/regex/Pattern;Ljava/lang/String;)Z" line="57"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="RegexHelper.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="4" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="10" ci="0" mb="2" cb="0"/><line nr="37" mi="6" ci="0" mb="4" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="4" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="net/sourceforge/pmd/lang/java/rule/imports"><class name="net/sourceforge/pmd/lang/java/rule/imports/ImportFromSamePackageRule"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="14"><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="25"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/imports/UnusedImportsRule"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitComments" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)V" line="69"><counter type="INSTRUCTION" missed="1" covered="111"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImportWrapper" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/rule/ImportWrapper;" line="141"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="297"/><counter type="BRANCH" missed="2" covered="32"/><counter type="LINE" missed="1" covered="60"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/imports/DontImportJavaLangRule"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="14"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/imports/UnnecessaryFullyQualifiedNameRule"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkImports" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="217"/><counter type="BRANCH" missed="1" covered="37"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAvoidingConflict" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/String;Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;)Z" line="138"><counter type="INSTRUCTION" missed="19" covered="125"/><counter type="BRANCH" missed="12" covered="22"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="399"/><counter type="BRANCH" missed="13" covered="63"/><counter type="LINE" missed="3" covered="72"/><counter type="COMPLEXITY" missed="11" covered="34"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/imports/DuplicateImportsRule"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDisambiguationImport" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/String;Ljava/lang/String;)Z" line="57"><counter type="INSTRUCTION" missed="2" covered="92"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="240"/><counter type="BRANCH" missed="4" covered="32"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DontImportJavaLangRule.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="2"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="2"/><line nr="20" mi="0" ci="28" mb="1" cb="13"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DuplicateImportsRule.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="2"/><line nr="30" mi="0" ci="11" mb="0" cb="2"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="4"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="1" cb="1"/><line nr="67" mi="2" ci="15" mb="1" cb="1"/><line nr="68" mi="0" ci="9" mb="2" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="19" mb="0" cb="4"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="2"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="2"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="240"/><counter type="BRANCH" missed="4" covered="32"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImportFromSamePackageRule.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="1" cb="3"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="4" ci="2" mb="3" cb="1"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="25"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedImportsRule.java"><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="20" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="1" cb="3"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="2"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="1" cb="1"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="16" mb="0" cb="2"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="13" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="16" mb="0" cb="2"/><line nr="87" mi="0" ci="13" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="2"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="2"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="2"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="297"/><counter type="BRANCH" missed="2" covered="32"/><counter type="LINE" missed="1" covered="60"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryFullyQualifiedNameRule.java"><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="4"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="11" mb="0" cb="2"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="81" mi="0" ci="7" mb="1" cb="1"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="4"/><line nr="100" mi="0" ci="11" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="14" mb="0" cb="2"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="28" mb="0" cb="4"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="2"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="2"/><line nr="125" mi="0" ci="15" mb="0" cb="2"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="128" mi="0" ci="19" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="1" cb="5"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="2"/><line nr="143" mi="0" ci="6" mb="0" cb="4"/><line nr="144" mi="8" ci="6" mb="3" cb="1"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="1" cb="1"/><line nr="154" mi="0" ci="3" mb="1" cb="1"/><line nr="155" mi="3" ci="16" mb="1" cb="1"/><line nr="156" mi="0" ci="5" mb="1" cb="1"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="2" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="2"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="16" mb="2" cb="4"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="399"/><counter type="BRANCH" missed="13" covered="63"/><counter type="LINE" missed="3" covered="72"/><counter type="COMPLEXITY" missed="11" covered="34"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="30" covered="1014"/><counter type="BRANCH" missed="24" covered="148"/><counter type="LINE" missed="5" covered="190"/><counter type="COMPLEXITY" missed="21" covered="89"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="5"/></package><package name="net/sourceforge/pmd/lang/java/typeresolution/rules/imports"><class name="net/sourceforge/pmd/lang/java/typeresolution/rules/imports/UnusedImports"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UnusedImports.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="2"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="15" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="2"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="2"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="1" cb="3"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="1" cb="1"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="net/sourceforge/pmd/lang/java/symboltable"><class name="net/sourceforge/pmd/lang/java/symboltable/MethodNameDeclaration"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterCount" desc="()I" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVarargs" desc="()Z" line="24"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodNameDeclaratorNode" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterDisplaySignature" desc="()Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="60"><counter type="INSTRUCTION" missed="10" covered="103"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="5" covered="21"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="121"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="262"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="6" covered="52"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/DeclarationFinderFunction"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyTo" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)Z" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeclaredBefore" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)Z" line="29"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSameName" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)Z" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecl" desc="()Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/SimpleTypedNameDeclaration"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Class;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Class;Lnet/sourceforge/pmd/lang/java/symboltable/SimpleTypedNameDeclaration;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNext" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/SimpleTypedNameDeclaration;)V" line="53"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeImage" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/Class;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="82"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="98"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="internalEqualsNext" desc="(Ljava/lang/Object;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="internalEquals" desc="(Ljava/lang/Object;)Z" line="115"><counter type="INSTRUCTION" missed="13" covered="212"/><counter type="BRANCH" missed="12" covered="80"/><counter type="LINE" missed="6" covered="32"/><counter type="COMPLEXITY" missed="11" covered="36"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="84" covered="329"/><counter type="BRANCH" missed="21" covered="91"/><counter type="LINE" missed="15" covered="67"/><counter type="COMPLEXITY" missed="19" covered="48"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/LocalScope"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableDeclarations" desc="()Ljava/util/Map;" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNameOccurrence" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;)Ljava/util/Set;" line="27"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDeclaration" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)V" line="43"><counter type="INSTRUCTION" missed="19" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findVariableHere" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;)Ljava/util/Set;" line="52"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="91"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsMethodOrConstructorInvocation" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setArgumentCount" desc="(I)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentCount" desc="()I" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMethodOrConstructorInvocation" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMethodReference" desc="()Z" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNameWhichThisQualifies" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameForWhichThisIsAQualifier" desc="()Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfQualifiedName" desc="()Z" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocation" desc="()Lnet/sourceforge/pmd/lang/java/ast/JavaNode;" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOnRightHandSide" desc="()Z" line="77"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOnLeftHandSide" desc="()Z" line="85"><counter type="INSTRUCTION" missed="21" covered="56"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompoundAssignment" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStandAlonePostfix" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="121"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="thirdChildHasDottedName" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="134"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSelfAssignment" desc="()Z" line="148"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAssignmentOperator" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="180"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThisOrSuper" desc="()Z" line="194"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="useThisOrSuper" desc="()Z" line="203"><counter type="INSTRUCTION" missed="22" covered="19"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="216"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="225"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImage" desc="()Ljava/lang/String;" line="230"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="235"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="325"/><counter type="BRANCH" missed="22" covered="68"/><counter type="LINE" missed="7" covered="69"/><counter type="COMPLEXITY" missed="19" covered="49"/><counter type="METHOD" missed="1" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/TypeSet$AbstractResolver"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/PMDASMClassLoader;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveMaybeInner" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;" line="110"><counter type="INSTRUCTION" missed="1" covered="59"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couldResolve" desc="(Ljava/lang/String;)Z" line="154"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="70"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScope" desc="()Lnet/sourceforge/pmd/lang/symboltable/Scope;" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArray" desc="()Z" line="30"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVarargs" desc="()Z" line="40"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExceptionBlockParameter" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLambdaTypelessParameter" desc="()Z" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitiveType" desc="()Z" line="54"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeImage" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReferenceType" desc="()Z" line="70"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccessNodeParent" desc="()Lnet/sourceforge/pmd/lang/java/ast/AccessNode;" line="75"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclaratorId" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeNode" desc="()Lnet/sourceforge/pmd/lang/java/ast/TypeNode;" line="86"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/Class;" line="96"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="105"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="169"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="5" covered="33"/><counter type="COMPLEXITY" missed="7" covered="23"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/TypeSet"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAuxclasspath" desc="()Z" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setASTCompilationUnitPackage" desc="(Ljava/lang/String;)V" line="455"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getASTCompilationUnitPackage" desc="()Ljava/lang/String;" line="459"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addImport" desc="(Ljava/lang/String;)V" line="467"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImportsCount" desc="()I" line="471"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExplicitImports" desc="()Ljava/util/Set;" line="475"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findClass" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="486"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildResolvers" desc="()V" line="504"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="151"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/TypeSet$ExplicitImportResolver"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/PMDASMClassLoader;Ljava/util/Set;)V" line="171"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="190"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couldResolve" desc="(Ljava/lang/String;)Z" line="201"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/TypeSet$CurrentPackageResolver"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/PMDASMClassLoader;Ljava/lang/String;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="227"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couldResolve" desc="(Ljava/lang/String;)Z" line="236"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="qualifyName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="240"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/ClassScope$1"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Ljava/lang/Integer;" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/NameFinder"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForNameChild" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="143"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="218"/><counter type="BRANCH" missed="4" covered="30"/><counter type="LINE" missed="6" covered="40"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/MethodScope"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableDeclarations" desc="()Ljava/util/Map;" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNameOccurrence" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;)Ljava/util/Set;" line="35"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDeclaration" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)V" line="50"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findVariableHere" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;)Ljava/util/Set;" line="57"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="109"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/ScopeAndDeclarationFinder"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addScope" desc="(Lnet/sourceforge/pmd/lang/symboltable/Scope;Lnet/sourceforge/pmd/lang/java/ast/JavaNode;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLocalScope" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMethodScope" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createClassScope" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSourceFileScope" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="158"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="165"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="172"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="180"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBody;Ljava/lang/Object;)Ljava/lang/Object;" line="187"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlock;Ljava/lang/Object;)Ljava/lang/Object;" line="198"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="205"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFinallyStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="212"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="266"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLambdaExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="275"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTryStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="282"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="290"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="297"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="304"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="312"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cont" desc="(Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaNode;)V" line="318"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="372"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="108"/><counter type="COMPLEXITY" missed="0" covered="33"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/AbstractJavaScope"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDeclaration" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForDuplicatedNameDeclaration" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)V" line="26"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="glomNames" desc="(Ljava/util/Set;)Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="30"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/SourceFileScope"><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureImports" desc="(Ljava/util/List;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExplicitImports" desc="()Ljava/util/Set;" line="55"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAuxclasspath" desc="()Z" line="66"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveType" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageName" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDeclaration" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)V" line="88"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassDeclarations" desc="()Ljava/util/Map;" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findClassNameDeclaration" desc="(Ljava/lang/String;)Lnet/sourceforge/pmd/lang/java/symboltable/ClassNameDeclaration;" line="108"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findVariableHere" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;)Ljava/util/Set;" line="114"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQualifiedTypeNames" desc="()Ljava/util/Map;" line="128"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubTypes" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/symboltable/Scope;)Ljava/util/Map;" line="132"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="190"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/ClassScope"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/java/symboltable/ClassNameDeclaration;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/ClassNameDeclaration;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsEnum" desc="(Z)V" line="105"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassDeclarations" desc="()Ljava/util/Map;" line="109"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodDeclarations" desc="()Ljava/util/Map;" line="113"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableDeclarations" desc="()Ljava/util/Map;" line="117"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNameOccurrence" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;)Ljava/util/Set;" line="121"><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassName" desc="()Ljava/lang/String;" line="170"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findVariableHere" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;)Ljava/util/Set;" line="174"><counter type="INSTRUCTION" missed="0" covered="197"/><counter type="BRANCH" missed="1" covered="33"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchMethodDeclaration" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;Ljava/util/Set;ZLjava/util/Set;)V" line="236"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createBuiltInMethodDeclaration" desc="(Ljava/lang/String;[Ljava/lang/String;)Lnet/sourceforge/pmd/lang/java/symboltable/MethodNameDeclaration;" line="286"><counter type="INSTRUCTION" missed="18" covered="139"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="32"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineParameterTypes" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/MethodNameDeclaration;)Ljava/util/List;" line="351"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="qualifyTypeName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="379"><counter type="INSTRUCTION" missed="2" covered="54"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findQualifiedName" desc="(Ljava/lang/String;Ljava/util/Set;)Ljava/lang/String;" line="410"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineArgumentTypes" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;Ljava/util/List;)Ljava/util/List;" line="437"><counter type="INSTRUCTION" missed="0" covered="330"/><counter type="BRANCH" missed="5" covered="61"/><counter type="LINE" missed="0" covered="65"/><counter type="COMPLEXITY" missed="5" covered="29"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineSuper" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/java/symboltable/SimpleTypedNameDeclaration;" line="546"><counter type="INSTRUCTION" missed="3" covered="47"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToSimpleType" desc="(Ljava/util/List;)Lnet/sourceforge/pmd/lang/java/symboltable/SimpleTypedNameDeclaration;" line="570"><counter type="INSTRUCTION" missed="3" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToSimpleType" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;)Lnet/sourceforge/pmd/lang/java/symboltable/SimpleTypedNameDeclaration;" line="583"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveType" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="591"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveGenericType" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/String;)Ljava/lang/Class;" line="606"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveGenericType" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/Class;" line="627"><counter type="INSTRUCTION" missed="3" covered="38"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextSibling" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="645"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="652"><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clipClassName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="675"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="123" covered="1403"/><counter type="BRANCH" missed="23" covered="201"/><counter type="LINE" missed="26" covered="302"/><counter type="COMPLEXITY" missed="20" covered="117"/><counter type="METHOD" missed="1" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/TypeSet$VoidResolver"><method name="&lt;init&gt;" desc="()V" line="398"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="401"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couldResolve" desc="(Ljava/lang/String;)Z" line="409"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/TypeSet$PrimitiveTypeResolver"><method name="&lt;init&gt;" desc="()V" line="365"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="383"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couldResolve" desc="(Ljava/lang/String;)Z" line="391"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="369"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/TypeSet$ImportOnDemandResolver"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/PMDASMClassLoader;Ljava/util/Set;)V" line="315"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="326"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couldResolve" desc="(Ljava/lang/String;)Z" line="348"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="143"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/OccurrenceFinder"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/Search"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lnet/sourceforge/pmd/lang/symboltable/Scope;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Ljava/util/Set;" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchUpward" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;Lnet/sourceforge/pmd/lang/symboltable/Scope;)Ljava/util/Set;" line="51"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/TypeSet$FullyQualifiedNameResolver"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/PMDASMClassLoader;)V" line="423"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="428"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couldResolve" desc="(Ljava/lang/String;)Z" line="450"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/SymbolFacade"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeWith" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeWith" desc="(Ljava/lang/ClassLoader;Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/ClassNameDeclaration"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAccessNodeParent" desc="()Lnet/sourceforge/pmd/lang/ast/Node;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeImage" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/Class;" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/symboltable/TypeSet$ImplicitImportResolver"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/PMDASMClassLoader;)V" line="270"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="275"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couldResolve" desc="(Ljava/lang/String;)Z" line="300"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="263"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JavaNameOccurrence.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="2" ci="9" mb="1" cb="3"/><line nr="85" mi="0" ci="5" mb="0" cb="2"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="1" cb="1"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="21" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="2"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="4"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="14" mb="1" cb="3"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="9" mb="0" cb="6"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="2"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="30" mb="4" cb="12"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="13" mb="2" cb="4"/><line nr="180" mi="0" ci="6" mb="0" cb="4"/><line nr="181" mi="0" ci="9" mb="1" cb="3"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="14" mb="0" cb="4"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="1" cb="1"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="2" cb="0"/><line nr="208" mi="10" ci="0" mb="4" cb="0"/><line nr="211" mi="2" ci="12" mb="2" cb="2"/><line nr="216" mi="0" ci="3" mb="1" cb="1"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="27" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="74" covered="325"/><counter type="BRANCH" missed="22" covered="68"/><counter type="LINE" missed="7" covered="69"/><counter type="COMPLEXITY" missed="19" covered="49"/><counter type="METHOD" missed="1" covered="22"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassScope.java"><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="1" cb="5"/><line nr="124" mi="0" ci="10" mb="0" cb="2"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="130" mi="0" ci="12" mb="0" cb="2"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="2"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="1" cb="3"/><line nr="145" mi="0" ci="10" mb="0" cb="2"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="12" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="2"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="9" mb="0" cb="4"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="2"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="4"/><line nr="186" mi="0" ci="12" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="12" mb="0" cb="2"/><line nr="191" mi="0" ci="10" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="11" mb="0" cb="2"/><line nr="198" mi="0" ci="6" mb="0" cb="2"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="1" cb="1"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="2"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="2"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="4"/><line nr="223" mi="0" ci="12" mb="0" cb="2"/><line nr="224" mi="0" ci="8" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="10" mb="0" cb="2"/><line nr="237" mi="0" ci="6" mb="0" cb="2"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="14" mb="0" cb="8"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="2"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="18" mb="0" cb="8"/><line nr="256" mi="0" ci="2" mb="0" cb="2"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="8" mb="0" cb="2"/><line nr="263" mi="0" ci="6" mb="0" cb="2"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="2"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="9" mb="0" cb="2"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="0" ci="10" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="1" cb="1"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="2"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="357" mi="0" ci="6" mb="0" cb="0"/><line nr="358" mi="0" ci="5" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="10" mb="0" cb="2"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="2"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="11" mb="0" cb="0"/><line nr="374" mi="0" ci="1" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="1" cb="1"/><line nr="380" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="386" mi="0" ci="7" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="2"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="0" ci="6" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="2"/><line nr="394" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="2"/><line nr="400" mi="0" ci="9" mb="0" cb="0"/><line nr="401" mi="0" ci="2" mb="1" cb="1"/><line nr="402" mi="0" ci="6" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="10" mb="0" cb="2"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="16" mb="0" cb="6"/><line nr="415" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="2"/><line nr="440" mi="0" ci="6" mb="0" cb="0"/><line nr="442" mi="0" ci="6" mb="0" cb="0"/><line nr="445" mi="0" ci="2" mb="1" cb="1"/><line nr="446" mi="0" ci="5" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="0" cb="2"/><line nr="450" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="6" mb="0" cb="0"/><line nr="454" mi="0" ci="6" mb="0" cb="0"/><line nr="456" mi="0" ci="8" mb="0" cb="2"/><line nr="457" mi="0" ci="4" mb="0" cb="0"/><line nr="458" mi="0" ci="2" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="15" mb="2" cb="4"/><line nr="462" mi="0" ci="8" mb="0" cb="0"/><line nr="463" mi="0" ci="10" mb="0" cb="2"/><line nr="465" mi="0" ci="2" mb="0" cb="0"/><line nr="466" mi="0" ci="5" mb="0" cb="4"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="469" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="0" cb="2"/><line nr="471" mi="0" ci="4" mb="0" cb="2"/><line nr="472" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="2" mb="0" cb="2"/><line nr="477" mi="0" ci="4" mb="0" cb="0"/><line nr="479" mi="0" ci="11" mb="0" cb="2"/><line nr="482" mi="0" ci="9" mb="0" cb="4"/><line nr="483" mi="0" ci="3" mb="0" cb="0"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="5" mb="0" cb="0"/><line nr="486" mi="0" ci="14" mb="0" cb="0"/><line nr="489" mi="0" ci="1" mb="0" cb="0"/><line nr="491" mi="0" ci="1" mb="0" cb="0"/><line nr="493" mi="0" ci="4" mb="0" cb="2"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="2"/><line nr="496" mi="0" ci="8" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="2"/><line nr="498" mi="0" ci="8" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="2"/><line nr="500" mi="0" ci="8" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="2"/><line nr="502" mi="0" ci="8" mb="0" cb="0"/><line nr="503" mi="0" ci="3" mb="0" cb="2"/><line nr="504" mi="0" ci="8" mb="0" cb="0"/><line nr="505" mi="0" ci="3" mb="0" cb="2"/><line nr="506" mi="0" ci="8" mb="0" cb="0"/><line nr="507" mi="0" ci="9" mb="1" cb="3"/><line nr="509" mi="0" ci="6" mb="0" cb="0"/><line nr="511" mi="0" ci="9" mb="1" cb="3"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="514" mi="0" ci="4" mb="0" cb="0"/><line nr="516" mi="0" ci="5" mb="0" cb="4"/><line nr="527" mi="0" ci="4" mb="0" cb="2"/><line nr="528" mi="0" ci="6" mb="0" cb="0"/><line nr="531" mi="0" ci="8" mb="0" cb="0"/><line nr="534" mi="0" ci="5" mb="0" cb="4"/><line nr="535" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="2" mb="0" cb="2"/><line nr="537" mi="0" ci="7" mb="0" cb="0"/><line nr="540" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="546" mi="0" ci="2" mb="0" cb="0"/><line nr="547" mi="0" ci="3" mb="0" cb="2"/><line nr="548" mi="0" ci="3" mb="0" cb="0"/><line nr="549" mi="0" ci="5" mb="0" cb="0"/><line nr="550" mi="0" ci="2" mb="0" cb="2"/><line nr="551" mi="0" ci="4" mb="0" cb="0"/><line nr="552" mi="0" ci="4" mb="0" cb="0"/><line nr="553" mi="0" ci="2" mb="0" cb="0"/><line nr="555" mi="0" ci="5" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="2"/><line nr="557" mi="0" ci="4" mb="0" cb="0"/><line nr="558" mi="0" ci="4" mb="0" cb="0"/><line nr="559" mi="0" ci="2" mb="1" cb="1"/><line nr="560" mi="0" ci="3" mb="0" cb="0"/><line nr="562" mi="3" ci="0" mb="0" cb="0"/><line nr="566" mi="0" ci="2" mb="0" cb="0"/><line nr="570" mi="0" ci="2" mb="0" cb="0"/><line nr="571" mi="0" ci="10" mb="0" cb="2"/><line nr="572" mi="0" ci="4" mb="0" cb="0"/><line nr="573" mi="0" ci="2" mb="1" cb="1"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="579" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="4" mb="0" cb="0"/><line nr="585" mi="0" ci="9" mb="0" cb="0"/><line nr="586" mi="0" ci="14" mb="0" cb="0"/><line nr="591" mi="0" ci="9" mb="0" cb="0"/><line nr="606" mi="0" ci="4" mb="0" cb="0"/><line nr="608" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="2" mb="0" cb="2"/><line nr="611" mi="0" ci="6" mb="0" cb="0"/><line nr="615" mi="0" ci="4" mb="0" cb="0"/><line nr="617" mi="0" ci="10" mb="0" cb="2"/><line nr="618" mi="0" ci="5" mb="0" cb="0"/><line nr="619" mi="0" ci="2" mb="0" cb="2"/><line nr="620" mi="0" ci="6" mb="0" cb="0"/><line nr="622" mi="0" ci="1" mb="0" cb="0"/><line nr="623" mi="0" ci="5" mb="0" cb="0"/><line nr="627" mi="0" ci="10" mb="0" cb="2"/><line nr="628" mi="0" ci="5" mb="0" cb="2"/><line nr="629" mi="0" ci="5" mb="0" cb="0"/><line nr="630" mi="0" ci="2" mb="0" cb="2"/><line nr="631" mi="0" ci="3" mb="1" cb="1"/><line nr="632" mi="3" ci="0" mb="0" cb="0"/><line nr="634" mi="0" ci="8" mb="0" cb="0"/><line nr="637" mi="0" ci="2" mb="0" cb="0"/><line nr="640" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="0" ci="2" mb="0" cb="0"/><line nr="645" mi="0" ci="8" mb="1" cb="1"/><line nr="646" mi="0" ci="8" mb="0" cb="0"/><line nr="648" mi="2" ci="0" mb="0" cb="0"/><line nr="652" mi="10" ci="0" mb="0" cb="0"/><line nr="653" mi="3" ci="0" mb="0" cb="0"/><line nr="654" mi="3" ci="0" mb="2" cb="0"/><line nr="655" mi="11" ci="0" mb="0" cb="0"/><line nr="657" mi="3" ci="0" mb="0" cb="0"/><line nr="658" mi="3" ci="0" mb="2" cb="0"/><line nr="659" mi="11" ci="0" mb="2" cb="0"/><line nr="660" mi="5" ci="0" mb="0" cb="0"/><line nr="661" mi="6" ci="0" mb="0" cb="0"/><line nr="662" mi="14" ci="0" mb="0" cb="0"/><line nr="664" mi="4" ci="0" mb="0" cb="0"/><line nr="665" mi="1" ci="0" mb="0" cb="0"/><line nr="667" mi="3" ci="0" mb="0" cb="0"/><line nr="668" mi="3" ci="0" mb="2" cb="0"/><line nr="669" mi="9" ci="0" mb="0" cb="0"/><line nr="671" mi="3" ci="0" mb="0" cb="0"/><line nr="675" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="126" covered="1406"/><counter type="BRANCH" missed="23" covered="201"/><counter type="LINE" missed="27" covered="302"/><counter type="COMPLEXITY" missed="21" covered="118"/><counter type="METHOD" missed="2" covered="25"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TypeSet.java"><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="2"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="2"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="2"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="14" ci="0" mb="4" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="10" mb="0" cb="2"/><line nr="176" mi="0" ci="4" mb="0" cb="2"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="1" cb="1"/><line nr="183" mi="0" ci="10" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="9" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="2"/><line nr="193" mi="0" ci="14" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="4"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="10" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="2"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="2"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="2"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="10" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="10" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="10" mb="0" cb="2"/><line nr="318" mi="0" ci="4" mb="0" cb="2"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="2"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="11" mb="0" cb="2"/><line nr="332" mi="0" ci="20" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="2"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="341" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="14" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="349" mi="0" ci="11" mb="0" cb="2"/><line nr="350" mi="0" ci="20" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="2"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="5" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="2"/><line nr="384" mi="0" ci="5" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="2"/><line nr="402" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="424" mi="0" ci="1" mb="0" cb="0"/><line nr="428" mi="0" ci="2" mb="0" cb="2"/><line nr="429" mi="0" ci="4" mb="0" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="0"/><line nr="434" mi="0" ci="2" mb="0" cb="2"/><line nr="435" mi="0" ci="14" mb="0" cb="0"/><line nr="438" mi="0" ci="2" mb="0" cb="0"/><line nr="450" mi="0" ci="2" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="1" mb="0" cb="0"/><line nr="459" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="5" mb="0" cb="0"/><line nr="468" mi="0" ci="1" mb="0" cb="0"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="0" ci="4" mb="0" cb="2"/><line nr="487" mi="0" ci="2" mb="0" cb="0"/><line nr="490" mi="0" ci="11" mb="0" cb="2"/><line nr="491" mi="0" ci="4" mb="0" cb="2"/><line nr="493" mi="0" ci="4" mb="0" cb="0"/><line nr="494" mi="0" ci="1" mb="0" cb="0"/><line nr="498" mi="0" ci="1" mb="0" cb="0"/><line nr="500" mi="0" ci="2" mb="0" cb="0"/><line nr="504" mi="0" ci="7" mb="0" cb="0"/><line nr="505" mi="0" ci="7" mb="0" cb="0"/><line nr="506" mi="0" ci="11" mb="0" cb="0"/><line nr="507" mi="0" ci="11" mb="0" cb="0"/><line nr="508" mi="0" ci="9" mb="0" cb="0"/><line nr="509" mi="0" ci="11" mb="0" cb="0"/><line nr="510" mi="0" ci="9" mb="0" cb="0"/><line nr="511" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="675"/><counter type="BRANCH" missed="5" covered="57"/><counter type="LINE" missed="2" covered="152"/><counter type="COMPLEXITY" missed="4" covered="64"/><counter type="METHOD" missed="1" covered="36"/><counter type="CLASS" missed="0" covered="9"/></sourcefile><sourcefile name="MethodNameDeclaration.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="2"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="2"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="1" cb="1"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="1" cb="1"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="1" cb="1"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="1" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="1" cb="1"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="24" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="262"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="6" covered="52"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SymbolFacade.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Search.java"><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="4"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleTypedNameDeclaration.java"><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="1" cb="1"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="1" cb="1"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="17" ci="0" mb="2" cb="0"/><line nr="77" mi="17" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="13" ci="0" mb="2" cb="0"/><line nr="85" mi="13" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="12" mb="0" cb="4"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="1" cb="1"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="1" cb="1"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="1" cb="1"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="4" mb="1" cb="1"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="13" mb="0" cb="6"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="18" mb="0" cb="8"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="1" cb="1"/><line nr="145" mi="3" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="2"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="4"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="16" mb="1" cb="7"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="32" mb="0" cb="16"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="20" mb="1" cb="9"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="16" mb="1" cb="7"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="20" mb="1" cb="9"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="329"/><counter type="BRANCH" missed="21" covered="91"/><counter type="LINE" missed="15" covered="67"/><counter type="COMPLEXITY" missed="19" covered="48"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SourceFileScope.java"><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="2"/><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="13" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="1" ci="8" mb="1" cb="1"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="1" cb="1"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="13" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="12" mb="0" cb="0"/><line nr="138" mi="0" ci="10" mb="0" cb="2"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="2"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="190"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DeclarationFinderFunction.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="4"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="1" cb="3"/><line nr="30" mi="0" ci="12" mb="0" cb="2"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameFinder.java"><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="2"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="4"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="2"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="1" cb="3"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="4"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="1" cb="3"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="2"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="11" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="218"/><counter type="BRANCH" missed="4" covered="30"/><counter type="LINE" missed="6" covered="40"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OccurrenceFinder.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="10" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="2"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="2"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="2"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassNameDeclaration.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="2" cb="0"/><line nr="19" mi="5" ci="0" mb="2" cb="0"/><line nr="20" mi="11" ci="0" mb="0" cb="0"/><line nr="22" mi="11" ci="0" mb="0" cb="0"/><line nr="25" mi="11" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodScope.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="2" cb="2"/><line nr="38" mi="0" ci="10" mb="0" cb="2"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="1" cb="1"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="1" cb="3"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="4"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="109"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ScopeAndDeclarationFinder.java"><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="2"/><line nr="146" mi="0" ci="11" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="4"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="2"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="0" ci="2" mb="0" cb="2"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="2"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="10" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="372"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="108"/><counter type="COMPLEXITY" missed="0" covered="33"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractJavaScope.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="9" mb="1" cb="3"/><line nr="27" mi="12" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="2"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="9" ci="0" mb="2" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="14" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="49" covered="30"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableNameDeclaration.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="1" cb="1"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="1" cb="3"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="16" mb="0" cb="4"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="2"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="16" mb="1" cb="3"/><line nr="75" mi="0" ci="10" mb="0" cb="4"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="1" cb="1"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="1" cb="1"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="169"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="5" covered="33"/><counter type="COMPLEXITY" missed="7" covered="23"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocalScope.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="1" cb="3"/><line nr="30" mi="0" ci="10" mb="0" cb="2"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="1" cb="1"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="1" cb="3"/><line nr="44" mi="19" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="4"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="91"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="557" covered="4448"/><counter type="BRANCH" missed="104" covered="590"/><counter type="LINE" missed="88" covered="992"/><counter type="COMPLEXITY" missed="102" covered="448"/><counter type="METHOD" missed="17" covered="186"/><counter type="CLASS" missed="0" covered="26"/></package><package name="net/sourceforge/pmd/lang/java/rule/finalizers"><class name="net/sourceforge/pmd/lang/java/rule/finalizers/AvoidCallingFinalizeRule"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;" line="28"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForViolation" desc="(Lnet/sourceforge/pmd/lang/symboltable/ScopedNode;)Z" line="55"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="115"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AvoidCallingFinalizeRule.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="1" cb="3"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="1" cb="1"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="6"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="2"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="4"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="1" cb="3"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="115"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4" covered="115"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="net/sourceforge/pmd/lang/java/ast"><class name="net/sourceforge/pmd/lang/java/ast/ASTAnnotationMethodDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTSwitchLabel"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefault" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDefault" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTArrayDimsAndInits"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTTypeBound"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTAnnotation"><method name="&lt;init&gt;" desc="(I)V" line="22"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suppresses" desc="(Lnet/sourceforge/pmd/Rule;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkAnnototation" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/String;Lnet/sourceforge/pmd/Rule;)Z" line="43"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="158"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/JavaParserConstants"><method name="&lt;clinit&gt;" desc="()V" line="256"><counter type="INSTRUCTION" missed="0" covered="516"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="516"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTForInit"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTSynchronizedStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTLiteral"><method name="&lt;init&gt;" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIntLiteral" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIntLiteral" desc="()Z" line="44"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLongLiteral" desc="()Z" line="58"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFloatLiteral" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFloatLiteral" desc="()Z" line="72"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDoubleLiteral" desc="()Z" line="87"><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCharLiteral" desc="()V" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCharLiteral" desc="()Z" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStringLiteral" desc="()V" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStringLiteral" desc="()Z" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEscapedStringLiteral" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="2" covered="77"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSingleCharacterStringLiteral" desc="()Z" line="149"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="248"/><counter type="BRANCH" missed="16" covered="48"/><counter type="LINE" missed="1" covered="60"/><counter type="COMPLEXITY" missed="15" covered="33"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTSingleMemberAnnotation"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/CommentUtil"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wordAfter" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="javadocContentAfter" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="javadocTagsIn" desc="(Ljava/lang/String;)Ljava/util/Map;" line="68"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiLinesIn" desc="(Ljava/lang/String;)Ljava/util/List;" line="89"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trim" desc="(Ljava/util/List;)Ljava/util/List;" line="136"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="165"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="274" covered="58"/><counter type="BRANCH" missed="44" covered="8"/><counter type="LINE" missed="63" covered="16"/><counter type="COMPLEXITY" missed="28" covered="6"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTConditionalAndExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTNameList"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTThrowStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstClassOrInterfaceTypeImage" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBodyDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFindBoundary" desc="()Z" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuppressWarningsAnnotationFor" desc="(Lnet/sourceforge/pmd/Rule;)Z" line="26"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnonymousInnerClass" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnumChild" desc="()Z" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/JavaParser$LookaheadSuccess"><method name="&lt;init&gt;" desc="()V" line="10959"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTStatementExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTRSIGNEDSHIFT"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFindBoundary" desc="()Z" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNested" desc="()Z" line="34"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInterface" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInterface" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTAllocationExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTConditionalOrExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/Comment"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findJavadocs" desc="(Ljava/lang/String;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="88"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameters;" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterCount" desc="()I" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsComment" desc="()Z" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContainsComment" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTReturnStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTLambdaExpression"><method name="&lt;init&gt;" desc="(I)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTTypeParameter"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTWildcardBounds"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTUnaryExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTEnumBody"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMarkerAnnotation"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTIfStatement"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHasElse" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasElse" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTAndExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/Token$GTToken"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTName"><method name="&lt;init&gt;" desc="(I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="19"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNameDeclaration" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameDeclaration" desc="()Lnet/sourceforge/pmd/lang/symboltable/NameDeclaration;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/JavaParserTokenManager"><method name="setDebugStream" desc="(Ljava/io/PrintStream;)V" line="17"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjStopStringLiteralDfa_0" desc="(IJJJ)I" line="20"><counter type="INSTRUCTION" missed="104" covered="187"/><counter type="BRANCH" missed="31" covered="35"/><counter type="LINE" missed="33" covered="50"/><counter type="COMPLEXITY" missed="23" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjStartNfa_0" desc="(IJJJ)I" line="148"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjStopAtPos" desc="(II)I" line="152"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa0_0" desc="()I" line="158"><counter type="INSTRUCTION" missed="10" covered="278"/><counter type="BRANCH" missed="2" covered="46"/><counter type="LINE" missed="2" covered="62"/><counter type="COMPLEXITY" missed="2" covered="46"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa1_0" desc="(JJ)I" line="275"><counter type="INSTRUCTION" missed="10" covered="407"/><counter type="BRANCH" missed="2" covered="72"/><counter type="LINE" missed="3" covered="72"/><counter type="COMPLEXITY" missed="2" covered="49"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa2_0" desc="(JJJJ)I" line="398"><counter type="INSTRUCTION" missed="21" covered="235"/><counter type="BRANCH" missed="6" covered="35"/><counter type="LINE" missed="5" covered="39"/><counter type="COMPLEXITY" missed="5" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa3_0" desc="(JJJJ)I" line="478"><counter type="INSTRUCTION" missed="16" covered="260"/><counter type="BRANCH" missed="3" covered="39"/><counter type="LINE" missed="4" covered="41"/><counter type="COMPLEXITY" missed="3" covered="27"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa4_0" desc="(JJJJ)I" line="550"><counter type="INSTRUCTION" missed="10" covered="234"/><counter type="BRANCH" missed="2" covered="37"/><counter type="LINE" missed="3" covered="43"/><counter type="COMPLEXITY" missed="2" covered="25"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa5_0" desc="(JJ)I" line="622"><counter type="INSTRUCTION" missed="10" covered="182"/><counter type="BRANCH" missed="1" covered="32"/><counter type="LINE" missed="3" covered="33"/><counter type="COMPLEXITY" missed="1" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa6_0" desc="(JJ)I" line="682"><counter type="INSTRUCTION" missed="10" covered="143"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa7_0" desc="(JJ)I" line="732"><counter type="INSTRUCTION" missed="17" covered="87"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa8_0" desc="(JJ)I" line="766"><counter type="INSTRUCTION" missed="17" covered="75"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa9_0" desc="(JJ)I" line="798"><counter type="INSTRUCTION" missed="17" covered="53"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa10_0" desc="(JJ)I" line="824"><counter type="INSTRUCTION" missed="24" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa11_0" desc="(JJ)I" line="842"><counter type="INSTRUCTION" missed="24" covered="29"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjStartNfaWithStates_0" desc="(III)I" line="862"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveNfa_0" desc="(II)I" line="1053"><counter type="INSTRUCTION" missed="260" covered="1649"/><counter type="BRANCH" missed="123" covered="395"/><counter type="LINE" missed="60" covered="377"/><counter type="COMPLEXITY" missed="102" covered="224"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa0_2" desc="()I" line="1768"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa1_2" desc="(J)I" line="1778"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa0_1" desc="()I" line="1795"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa1_1" desc="(J)I" line="1805"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCanMove_0" desc="(IIIJJ)Z" line="1832"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCanMove_1" desc="(IIIJJ)Z" line="1844"><counter type="INSTRUCTION" missed="435" covered="23"/><counter type="BRANCH" missed="110" covered="4"/><counter type="LINE" missed="38" covered="3"/><counter type="COMPLEXITY" missed="74" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCanMove_2" desc="(IIIJJ)Z" line="1928"><counter type="INSTRUCTION" missed="435" covered="23"/><counter type="BRANCH" missed="110" covered="4"/><counter type="LINE" missed="38" covered="3"/><counter type="COMPLEXITY" missed="74" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ast/CharStream;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ast/CharStream;I)V" line="2080"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lnet/sourceforge/pmd/lang/ast/CharStream;)V" line="2087"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInitRounds" desc="()V" line="2095"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lnet/sourceforge/pmd/lang/ast/CharStream;I)V" line="2103"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SwitchTo" desc="(I)V" line="2110"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjFillToken" desc="()Lnet/sourceforge/pmd/lang/java/ast/Token;" line="2124"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Lnet/sourceforge/pmd/lang/java/ast/Token;" line="2150"><counter type="INSTRUCTION" missed="38" covered="273"/><counter type="BRANCH" missed="13" covered="27"/><counter type="LINE" missed="10" covered="63"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SkipLexicalActions" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="2270"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MoreLexicalActions" desc="()V" line="2294"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TokenLexicalActions" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="2308"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="3"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAdd" desc="(I)V" line="2332"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjAddStates" desc="(II)V" line="2341"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAddTwoStates" desc="(II)V" line="2346"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAddStates" desc="(II)V" line="2353"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="868"><counter type="INSTRUCTION" missed="0" covered="2744"/><counter type="LINE" missed="0" covered="69"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1549" covered="7374"/><counter type="BRANCH" missed="430" covered="818"/><counter type="LINE" missed="251" covered="1036"/><counter type="COMPLEXITY" missed="328" covered="523"/><counter type="METHOD" missed="6" covered="35"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeMemberDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTUnaryExpressionNotPlusMinus"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTCompilationUnit"><method name="&lt;init&gt;" desc="(I)V" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComments" desc="()Ljava/util/List;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setComments" desc="(Ljava/util/List;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="declarationsAreInDefaultPackage" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageDeclaration" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTPackageDeclaration;" line="49"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassTypeResolver" desc="()Lnet/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClassTypeResolver" desc="(Lnet/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTExplicitConstructorInvocation"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentCount" desc="()I" line="30"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIsThis" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsSuper" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThis" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuper" desc="()Z" line="50"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="30"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTNormalAnnotation"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTEqualityExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType"><method name="&lt;init&gt;" desc="(I)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReferenceToClassSameCompilationUnit" desc="()Z" line="35"><counter type="INSTRUCTION" missed="12" covered="39"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="53"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTInstanceOfExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTCastExpression"><method name="&lt;init&gt;" desc="(I)V" line="9"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIntersectionTypes" desc="(Z)V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasIntersectionTypes" desc="()Z" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="17"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/JavaParserVisitorAdapter"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExtendsList;Ljava/lang/Object;)Ljava/lang/Object;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImplementsList;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeParameters;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberSelector;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeBound;Ljava/lang/Object;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBody;Ljava/lang/Object;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBodyDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumBody;Ljava/lang/Object;)Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumConstant;Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReferenceType;Ljava/lang/Object;)Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeArguments;Ljava/lang/Object;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeArgument;Ljava/lang/Object;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWildcardBounds;Ljava/lang/Object;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTNormalAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMarkerAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSingleMemberAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberValuePairs;Ljava/lang/Object;)Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberValuePair;Ljava/lang/Object;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberValue;Ljava/lang/Object;)Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMemberValueArrayInitializer;Ljava/lang/Object;)Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeBody;Ljava/lang/Object;)Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeMemberDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTDefaultValue;Ljava/lang/Object;)Ljava/lang/Object;" line="124"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTRUNSIGNEDSHIFT;Ljava/lang/Object;)Ljava/lang/Object;" line="128"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTRSIGNEDSHIFT;Ljava/lang/Object;)Ljava/lang/Object;" line="132"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="136"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAssertStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="144"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPackageDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="148"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="152"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="156"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="160"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="164"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="168"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableInitializer;Ljava/lang/Object;)Ljava/lang/Object;" line="172"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArrayInitializer;Ljava/lang/Object;)Ljava/lang/Object;" line="176"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="180"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="184"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameters;Ljava/lang/Object;)Ljava/lang/Object;" line="188"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFormalParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="192"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="196"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExplicitConstructorInvocation;Ljava/lang/Object;)Ljava/lang/Object;" line="200"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTInitializer;Ljava/lang/Object;)Ljava/lang/Object;" line="204"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTType;Ljava/lang/Object;)Ljava/lang/Object;" line="208"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimitiveType;Ljava/lang/Object;)Ljava/lang/Object;" line="212"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTResultType;Ljava/lang/Object;)Ljava/lang/Object;" line="216"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;" line="220"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTNameList;Ljava/lang/Object;)Ljava/lang/Object;" line="224"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="228"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAssignmentOperator;Ljava/lang/Object;)Ljava/lang/Object;" line="232"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="236"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="240"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalAndExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="244"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTInclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="248"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="252"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAndExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="256"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEqualityExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="260"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTInstanceOfExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="264"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTRelationalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="268"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTShiftExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="272"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAdditiveExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="276"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMultiplicativeExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="280"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTUnaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPreIncrementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="288"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPreDecrementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="292"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTUnaryExpressionNotPlusMinus;Ljava/lang/Object;)Ljava/lang/Object;" line="296"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPostfixExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="300"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCastExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="304"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="308"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;" line="312"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix;Ljava/lang/Object;)Ljava/lang/Object;" line="316"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="320"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBooleanLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="324"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTNullLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="328"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArguments;Ljava/lang/Object;)Ljava/lang/Object;" line="332"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArgumentList;Ljava/lang/Object;)Ljava/lang/Object;" line="336"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="340"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTArrayDimsAndInits;Ljava/lang/Object;)Ljava/lang/Object;" line="344"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="348"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLabeledStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="352"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlock;Ljava/lang/Object;)Ljava/lang/Object;" line="356"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlockStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="360"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="364"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEmptyStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="368"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="372"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="376"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;" line="380"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="384"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="388"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTDoStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="392"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="396"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForInit;Ljava/lang/Object;)Ljava/lang/Object;" line="400"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpressionList;Ljava/lang/Object;)Ljava/lang/Object;" line="404"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTForUpdate;Ljava/lang/Object;)Ljava/lang/Object;" line="408"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBreakStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="412"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTContinueStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="416"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="420"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTThrowStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="424"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSynchronizedStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="428"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTryStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="432"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTResourceSpecification;Ljava/lang/Object;)Ljava/lang/Object;" line="435"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTResources;Ljava/lang/Object;)Ljava/lang/Object;" line="439"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTResource;Ljava/lang/Object;)Ljava/lang/Object;" line="443"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFinallyStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="447"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="451"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLambdaExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="455"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodReference;Ljava/lang/Object;)Ljava/lang/Object;" line="459"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="568"/><counter type="LINE" missed="1" covered="114"/><counter type="COMPLEXITY" missed="1" covered="114"/><counter type="METHOD" missed="1" covered="114"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTTypeArguments"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTInclusiveOrExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTBreakStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMemberValuePairs"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTArguments"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentCount" desc="()I" line="19"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTArrayInitializer"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ParseException"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;[[I[Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialise" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;[[I[Ljava/lang/String;)Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="35" covered="194"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add_escapes" desc="(Ljava/lang/String;)Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="71" covered="33"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="20" covered="6"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="114" covered="257"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="25" covered="41"/><counter type="COMPLEXITY" missed="16" covered="9"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/AbstractJavaNode"><method name="&lt;init&gt;" desc="(I)V" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="20"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtOpen" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtClose" desc="()V" line="32"><counter type="INSTRUCTION" missed="19" covered="21"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="childrenAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScope" desc="()Lnet/sourceforge/pmd/lang/symboltable/Scope;" line="62"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScope" desc="(Lnet/sourceforge/pmd/lang/symboltable/Scope;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comment" desc="(Lnet/sourceforge/pmd/lang/java/ast/Comment;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comment" desc="()Lnet/sourceforge/pmd/lang/java/ast/Comment;" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="106"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/JavaParser$JJCalls"><method name="&lt;init&gt;" desc="()V" line="11186"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/JJTJavaParserState"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeCreated" desc="()Z" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="31"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rootNode" desc="()Lnet/sourceforge/pmd/lang/ast/Node;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pushNode" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popNode" desc="()Lnet/sourceforge/pmd/lang/ast/Node;" line="52"><counter type="INSTRUCTION" missed="12" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNode" desc="()Lnet/sourceforge/pmd/lang/ast/Node;" line="60"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nodeArity" desc="()I" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearNodeScope" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="openNodeScope" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeNodeScope" desc="(Lnet/sourceforge/pmd/lang/ast/Node;I)V" line="90"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeNodeScope" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Z)V" line="108"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="149"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="19" covered="35"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix"><method name="&lt;init&gt;" desc="(I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUsesThisModifier" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usesThisModifier" desc="()Z" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUsesSuperModifier" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usesSuperModifier" desc="()Z" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/Token"><method name="getValue" desc="()Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newToken" desc="(ILjava/lang/String;)Lnet/sourceforge/pmd/lang/java/ast/Token;" line="121"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newToken" desc="(I)Lnet/sourceforge/pmd/lang/java/ast/Token;" line="140"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTEmptyStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTReferenceType"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bumpArrayDepth" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayDepth" desc="()I" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArray" desc="()Z" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId"><method name="&lt;init&gt;" desc="(I)V" line="18"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="18"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameDeclaration" desc="()Lnet/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNameDeclaration" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUsages" desc="()Ljava/util/List;" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bumpArrayDepth" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayDepth" desc="()I" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArray" desc="()Z" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExceptionBlockParameter" desc="()Z" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExplicitReceiverParameter" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExplicitReceiverParameter" desc="()Z" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeNameNode" desc="()Lnet/sourceforge/pmd/lang/ast/Node;" line="72"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeNode" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTType;" line="88"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findTypeNameNode" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="103"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="144"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="36"/><counter type="COMPLEXITY" missed="2" covered="23"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTResources"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTExclusiveOrExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTAssignmentOperator"><method name="&lt;init&gt;" desc="(I)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCompound" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompound" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTResourceSpecification"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTLabeledStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMemberSelector"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator"><method name="&lt;init&gt;" desc="(I)V" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterCount" desc="()I" line="19"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodName" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSyntacticallyPublic" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSyntacticallyAbstract" desc="()Z" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPublic" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAbstract" desc="()Z" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInterfaceMember" desc="()Z" line="70"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVoid" desc="()Z" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResultType" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTResultType;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlock" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTBlock;" line="83"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThrows" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTNameList;" line="93"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="127"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTEnumConstant"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMemberValuePair"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/AbstractJavaTypeNode"><method name="&lt;init&gt;" desc="(I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/Class;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Ljava/lang/Class;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTExtendsList"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTBlockStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllocation" desc="()Z" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTNullLiteral"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTFinallyStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMultiplicativeExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTInitializer"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStatic" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatic" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTTryStatement"><method name="&lt;init&gt;" desc="(I)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasFinally" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFinally" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTFinallyStatement;" line="36"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/SingleLineComment"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTResultType"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsArray" desc="()Z" line="18"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVoid" desc="()Z" line="22"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTImplementsList"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTPrimitiveType"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBoolean" desc="()Z" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bumpArrayDepth" desc="()V" line="33"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArrayDepth" desc="()I" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArray" desc="()Z" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="18"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTAdditiveExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix"><method name="&lt;init&gt;" desc="(I)V" line="14"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsArrayDereference" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArrayDereference" desc="()Z" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsArguments" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArguments" desc="()Z" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentCount" desc="()I" line="45"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTFormalParameters"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterCount" desc="()I" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTPreIncrementExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMemberValue"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTBlock"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsComment" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContainsComment" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTPackageDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageNameImage" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMemberValueArrayInitializer"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBody"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnonymousInnerClass" desc="()Z" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnumChild" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTTypeArgument"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTShiftExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSyntacticallyPublic" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPublic" desc="()Z" line="32"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSyntacticallyStatic" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStatic" desc="()Z" line="44"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSyntacticallyFinal" desc="()Z" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinal" desc="()Z" line="56"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrivate" desc="()Z" line="64"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPackagePrivate" desc="()Z" line="72"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isProtected" desc="()Z" line="80"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnnotationMember" desc="()Z" line="87"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInterfaceMember" desc="()Z" line="94"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArray" desc="()Z" line="102"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayDepth" desc="()I" line="106"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkType" desc="()I" line="113"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkDecl" desc="()I" line="120"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableName" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="179"/><counter type="BRANCH" missed="10" covered="36"/><counter type="LINE" missed="4" covered="43"/><counter type="COMPLEXITY" missed="10" covered="32"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTArgumentList"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTWhileStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/AbstractJavaAccessTypeNode"><method name="&lt;init&gt;" desc="(I)V" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/Class;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Ljava/lang/Class;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTBooleanLiteral"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTrue" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTrue" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTResource"><method name="&lt;init&gt;" desc="(I)V" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecl" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;" line="27"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="10"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/JavaParser"><method name="setJdkVersion" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwParseException" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadAssertUsage" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="27"><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadStaticImportUsage" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadAnnotationUsage" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadGenericsUsage" desc="()V" line="45"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadVariableArgumentsUsage" desc="()V" line="51"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadJDK15ForLoopSyntaxArgumentsUsage" desc="()V" line="57"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadEnumUsage" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadHexFloatingPointLiteral" desc="()V" line="69"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadNumericalLiteralslUsage" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="75"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadDiamondUsage" desc="()V" line="87"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadTryWithResourcesUsage" desc="()V" line="93"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadMultipleExceptionsCatching" desc="()V" line="99"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadLambdaUsage" desc="()V" line="105"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadMethodReferenceUsage" desc="()V" line="110"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadDefaultImplementationUsage" desc="()V" line="115"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadIntersectionTypesInCasts" desc="()V" line="120"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBadTypeAnnotations" desc="()V" line="125"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkforBadExplicitReceiverParameter" desc="()V" line="130"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNextTokenAnAssert" desc="()Z" line="139"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrecededByComment" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)Z" line="147"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuppressMap" desc="()Ljava/util/Map;" line="158"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSuppressMarker" desc="(Ljava/lang/String;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CompilationUnit" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;" line="174"><counter type="INSTRUCTION" missed="43" covered="121"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="9" covered="34"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PackageDeclaration" desc="()V" line="271"><counter type="INSTRUCTION" missed="44" covered="56"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="10" covered="16"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ImportDeclaration" desc="()V" line="315"><counter type="INSTRUCTION" missed="23" covered="102"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="4" covered="28"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Modifiers" desc="()I" line="370"><counter type="INSTRUCTION" missed="14" covered="125"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="3" covered="42"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeDeclaration" desc="()V" line="445"><counter type="INSTRUCTION" missed="51" covered="80"/><counter type="BRANCH" missed="8" covered="9"/><counter type="LINE" missed="10" covered="25"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceDeclaration" desc="(I)V" line="519"><counter type="INSTRUCTION" missed="51" covered="146"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="10" covered="43"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ExtendsList" desc="()V" line="611"><counter type="INSTRUCTION" missed="77" covered="61"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="23" covered="16"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ImplementsList" desc="()V" line="682"><counter type="INSTRUCTION" missed="50" covered="84"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="13" covered="25"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EnumDeclaration" desc="(I)V" line="752"><counter type="INSTRUCTION" missed="57" covered="67"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="14" covered="17"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EnumBody" desc="()V" line="801"><counter type="INSTRUCTION" missed="57" covered="123"/><counter type="BRANCH" missed="12" covered="12"/><counter type="LINE" missed="16" covered="32"/><counter type="COMPLEXITY" missed="8" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EnumConstant" desc="()V" line="930"><counter type="INSTRUCTION" missed="44" covered="65"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="10" covered="18"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeParameters" desc="()V" line="977"><counter type="INSTRUCTION" missed="44" covered="62"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="10" covered="18"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeParameter" desc="()V" line="1023"><counter type="INSTRUCTION" missed="50" covered="63"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="13" covered="17"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeBound" desc="()V" line="1075"><counter type="INSTRUCTION" missed="52" covered="48"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceBody" desc="()V" line="1119"><counter type="INSTRUCTION" missed="23" covered="75"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceBodyDeclaration" desc="()V" line="1189"><counter type="INSTRUCTION" missed="51" covered="115"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="10" covered="33"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FieldDeclaration" desc="(I)V" line="1291"><counter type="INSTRUCTION" missed="23" covered="82"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="VariableDeclarator" desc="()V" line="1336"><counter type="INSTRUCTION" missed="23" covered="71"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="VariableDeclaratorId" desc="()V" line="1375"><counter type="INSTRUCTION" missed="25" covered="135"/><counter type="BRANCH" missed="2" covered="9"/><counter type="LINE" missed="3" covered="32"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="VariableInitializer" desc="()V" line="1432"><counter type="INSTRUCTION" missed="37" covered="62"/><counter type="BRANCH" missed="7" covered="6"/><counter type="LINE" missed="7" covered="19"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ArrayInitializer" desc="()V" line="1500"><counter type="INSTRUCTION" missed="44" covered="77"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="10" covered="20"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MethodDeclaration" desc="(I)V" line="1585"><counter type="INSTRUCTION" missed="37" covered="101"/><counter type="BRANCH" missed="7" covered="10"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MethodDeclarator" desc="()V" line="1645"><counter type="INSTRUCTION" missed="33" covered="83"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="7" covered="22"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FormalParameters" desc="()V" line="1692"><counter type="INSTRUCTION" missed="23" covered="91"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="4" covered="25"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FormalParameter" desc="()V" line="1754"><counter type="INSTRUCTION" missed="37" covered="123"/><counter type="BRANCH" missed="7" covered="12"/><counter type="LINE" missed="7" covered="39"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ConstructorDeclaration" desc="(I)V" line="1834"><counter type="INSTRUCTION" missed="34" covered="119"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="5" covered="34"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ExplicitConstructorInvocation" desc="()V" line="1903"><counter type="INSTRUCTION" missed="64" covered="101"/><counter type="BRANCH" missed="11" covered="9"/><counter type="LINE" missed="15" covered="30"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Initializer" desc="()V" line="1993"><counter type="INSTRUCTION" missed="23" covered="71"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Type" desc="()V" line="2035"><counter type="INSTRUCTION" missed="58" covered="45"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReferenceType" desc="()V" line="2084"><counter type="INSTRUCTION" missed="58" covered="69"/><counter type="BRANCH" missed="10" covered="7"/><counter type="LINE" missed="13" covered="19"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceType" desc="()V" line="2154"><counter type="INSTRUCTION" missed="34" covered="102"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeArguments" desc="()V" line="2211"><counter type="INSTRUCTION" missed="37" covered="103"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeArgument" desc="()V" line="2271"><counter type="INSTRUCTION" missed="58" covered="73"/><counter type="BRANCH" missed="10" covered="7"/><counter type="LINE" missed="13" covered="23"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="WildcardBounds" desc="()V" line="2343"><counter type="INSTRUCTION" missed="70" covered="71"/><counter type="BRANCH" missed="12" covered="5"/><counter type="LINE" missed="19" covered="21"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrimitiveType" desc="()V" line="2412"><counter type="INSTRUCTION" missed="40" covered="184"/><counter type="BRANCH" missed="4" covered="9"/><counter type="LINE" missed="5" covered="55"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ResultType" desc="()V" line="2489"><counter type="INSTRUCTION" missed="58" covered="43"/><counter type="BRANCH" missed="10" covered="3"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Name" desc="()V" line="2538"><counter type="INSTRUCTION" missed="26" covered="77"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="NameList" desc="()V" line="2573"><counter type="INSTRUCTION" missed="50" covered="80"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="13" covered="24"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Expression" desc="()V" line="2645"><counter type="INSTRUCTION" missed="23" covered="62"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AssignmentOperator" desc="()V" line="2681"><counter type="INSTRUCTION" missed="40" covered="286"/><counter type="BRANCH" missed="4" covered="13"/><counter type="LINE" missed="5" covered="79"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ConditionalExpression" desc="()V" line="2786"><counter type="INSTRUCTION" missed="30" covered="79"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ConditionalOrExpression" desc="()V" line="2825"><counter type="INSTRUCTION" missed="30" covered="72"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ConditionalAndExpression" desc="()V" line="2865"><counter type="INSTRUCTION" missed="30" covered="72"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="InclusiveOrExpression" desc="()V" line="2905"><counter type="INSTRUCTION" missed="30" covered="72"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ExclusiveOrExpression" desc="()V" line="2945"><counter type="INSTRUCTION" missed="30" covered="72"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AndExpression" desc="()V" line="2985"><counter type="INSTRUCTION" missed="30" covered="72"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EqualityExpression" desc="()V" line="3025"><counter type="INSTRUCTION" missed="44" covered="88"/><counter type="BRANCH" missed="9" covered="10"/><counter type="LINE" missed="7" covered="24"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="InstanceOfExpression" desc="()V" line="3078"><counter type="INSTRUCTION" missed="30" covered="71"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RelationalExpression" desc="()V" line="3114"><counter type="INSTRUCTION" missed="44" covered="104"/><counter type="BRANCH" missed="9" covered="12"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ShiftExpression" desc="()V" line="3175"><counter type="INSTRUCTION" missed="38" covered="100"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="6" covered="26"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AdditiveExpression" desc="()V" line="3230"><counter type="INSTRUCTION" missed="44" covered="88"/><counter type="BRANCH" missed="9" covered="10"/><counter type="LINE" missed="7" covered="24"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MultiplicativeExpression" desc="()V" line="3283"><counter type="INSTRUCTION" missed="44" covered="96"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="7" covered="27"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="UnaryExpression" desc="()V" line="3340"><counter type="INSTRUCTION" missed="56" covered="93"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="10" covered="30"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PreIncrementExpression" desc="()V" line="3425"><counter type="INSTRUCTION" missed="44" covered="37"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="10"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PreDecrementExpression" desc="()V" line="3456"><counter type="INSTRUCTION" missed="44" covered="37"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="10"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="UnaryExpressionNotPlusMinus" desc="()V" line="3487"><counter type="INSTRUCTION" missed="56" covered="111"/><counter type="BRANCH" missed="10" covered="15"/><counter type="LINE" missed="10" covered="32"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PostfixExpression" desc="()V" line="3574"><counter type="INSTRUCTION" missed="42" covered="89"/><counter type="BRANCH" missed="9" covered="10"/><counter type="LINE" missed="7" covered="24"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CastExpression" desc="()V" line="3626"><counter type="INSTRUCTION" missed="43" covered="138"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="10" covered="41"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrimaryExpression" desc="()V" line="3714"><counter type="INSTRUCTION" missed="23" covered="61"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MemberSelector" desc="()V" line="3753"><counter type="INSTRUCTION" missed="37" covered="86"/><counter type="BRANCH" missed="6" covered="7"/><counter type="LINE" missed="7" covered="25"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MethodReference" desc="()V" line="3800"><counter type="INSTRUCTION" missed="69" covered="84"/><counter type="BRANCH" missed="10" covered="5"/><counter type="LINE" missed="15" covered="24"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrimaryPrefix" desc="()V" line="3858"><counter type="INSTRUCTION" missed="37" covered="204"/><counter type="BRANCH" missed="6" covered="28"/><counter type="LINE" missed="7" covered="58"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LambdaExpression" desc="()V" line="3959"><counter type="INSTRUCTION" missed="94" covered="126"/><counter type="BRANCH" missed="13" covered="14"/><counter type="LINE" missed="21" covered="41"/><counter type="COMPLEXITY" missed="9" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrimarySuffix" desc="()V" line="4139"><counter type="INSTRUCTION" missed="44" covered="160"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="9" covered="45"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Literal" desc="()V" line="4211"><counter type="INSTRUCTION" missed="40" covered="185"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="8" covered="48"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BooleanLiteral" desc="()V" line="4288"><counter type="INSTRUCTION" missed="29" covered="59"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="NullLiteral" desc="()V" line="4319"><counter type="INSTRUCTION" missed="15" covered="35"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Arguments" desc="()V" line="4335"><counter type="INSTRUCTION" missed="23" covered="73"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ArgumentList" desc="()V" line="4401"><counter type="INSTRUCTION" missed="23" covered="73"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AllocationExpression" desc="()V" line="4444"><counter type="INSTRUCTION" missed="54" covered="121"/><counter type="BRANCH" missed="9" covered="14"/><counter type="LINE" missed="12" covered="37"/><counter type="COMPLEXITY" missed="8" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ArrayDimsAndInits" desc="()V" line="4533"><counter type="INSTRUCTION" missed="59" covered="89"/><counter type="BRANCH" missed="11" covered="9"/><counter type="LINE" missed="13" covered="25"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Statement" desc="()V" line="4611"><counter type="INSTRUCTION" missed="40" covered="112"/><counter type="BRANCH" missed="8" covered="21"/><counter type="LINE" missed="8" covered="47"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LabeledStatement" desc="()V" line="4718"><counter type="INSTRUCTION" missed="44" covered="45"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="12"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Block" desc="()V" line="4751"><counter type="INSTRUCTION" missed="34" covered="74"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="5" covered="21"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BlockStatement" desc="()V" line="4795"><counter type="INSTRUCTION" missed="31" covered="99"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="6" covered="28"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LocalVariableDeclaration" desc="()V" line="4849"><counter type="INSTRUCTION" missed="37" covered="102"/><counter type="BRANCH" missed="7" covered="10"/><counter type="LINE" missed="7" covered="32"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EmptyStatement" desc="()V" line="4918"><counter type="INSTRUCTION" missed="15" covered="35"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="StatementExpression" desc="()V" line="4934"><counter type="INSTRUCTION" missed="37" covered="86"/><counter type="BRANCH" missed="7" covered="10"/><counter type="LINE" missed="7" covered="27"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SwitchStatement" desc="()V" line="5009"><counter type="INSTRUCTION" missed="44" covered="74"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="10" covered="21"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SwitchLabel" desc="()V" line="5066"><counter type="INSTRUCTION" missed="58" covered="57"/><counter type="BRANCH" missed="10" covered="3"/><counter type="LINE" missed="13" covered="17"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="IfStatement" desc="()V" line="5111"><counter type="INSTRUCTION" missed="34" covered="88"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="WhileStatement" desc="()V" line="5159"><counter type="INSTRUCTION" missed="44" covered="47"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="13"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="DoStatement" desc="()V" line="5193"><counter type="INSTRUCTION" missed="44" covered="55"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="15"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ForStatement" desc="()V" line="5229"><counter type="INSTRUCTION" missed="37" covered="133"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="7" covered="39"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ForInit" desc="()V" line="5404"><counter type="INSTRUCTION" missed="58" covered="45"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="StatementExpressionList" desc="()V" line="5469"><counter type="INSTRUCTION" missed="44" covered="52"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="10" covered="15"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ForUpdate" desc="()V" line="5512"><counter type="INSTRUCTION" missed="44" covered="33"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="9"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BreakStatement" desc="()V" line="5542"><counter type="INSTRUCTION" missed="15" covered="58"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ContinueStatement" desc="()V" line="5568"><counter type="INSTRUCTION" missed="24" covered="49"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReturnStatement" desc="()V" line="5594"><counter type="INSTRUCTION" missed="23" covered="73"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ThrowStatement" desc="()V" line="5660"><counter type="INSTRUCTION" missed="44" covered="41"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="11"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SynchronizedStatement" desc="()V" line="5692"><counter type="INSTRUCTION" missed="44" covered="47"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="13"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TryStatement" desc="()V" line="5726"><counter type="INSTRUCTION" missed="23" covered="99"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="4" covered="29"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ResourceSpecification" desc="()V" line="5785"><counter type="INSTRUCTION" missed="44" covered="51"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="10" covered="14"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Resources" desc="()V" line="5823"><counter type="INSTRUCTION" missed="44" covered="44"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="10" covered="12"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Resource" desc="()V" line="5863"><counter type="INSTRUCTION" missed="58" covered="65"/><counter type="BRANCH" missed="10" covered="5"/><counter type="LINE" missed="13" covered="21"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CatchStatement" desc="()V" line="5920"><counter type="INSTRUCTION" missed="23" covered="68"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FinallyStatement" desc="()V" line="5954"><counter type="INSTRUCTION" missed="44" covered="37"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="10"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AssertStatement" desc="()V" line="5985"><counter type="INSTRUCTION" missed="49" covered="62"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="11" covered="16"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RUNSIGNEDSHIFT" desc="()V" line="6031"><counter type="INSTRUCTION" missed="23" covered="57"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RSIGNEDSHIFT" desc="()V" line="6056"><counter type="INSTRUCTION" missed="23" covered="53"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Annotation" desc="()V" line="6081"><counter type="INSTRUCTION" missed="37" covered="73"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="21"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="NormalAnnotation" desc="()V" line="6125"><counter type="INSTRUCTION" missed="61" covered="55"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="13" covered="17"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MarkerAnnotation" desc="()V" line="6170"><counter type="INSTRUCTION" missed="37" covered="58"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="6" covered="18"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SingleMemberAnnotation" desc="()V" line="6205"><counter type="INSTRUCTION" missed="55" covered="50"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="12" covered="15"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MemberValuePairs" desc="()V" line="6243"><counter type="INSTRUCTION" missed="44" covered="52"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="10" covered="15"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MemberValuePair" desc="()V" line="6286"><counter type="INSTRUCTION" missed="44" covered="45"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="12"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MemberValue" desc="()V" line="6319"><counter type="INSTRUCTION" missed="61" covered="41"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="15" covered="13"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MemberValueArrayInitializer" desc="()V" line="6390"><counter type="INSTRUCTION" missed="55" covered="67"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="13" covered="18"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationTypeDeclaration" desc="(I)V" line="6477"><counter type="INSTRUCTION" missed="44" covered="54"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="10" covered="14"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationTypeBody" desc="()V" line="6512"><counter type="INSTRUCTION" missed="44" covered="54"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="10" covered="15"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationTypeMemberDeclaration" desc="()V" line="6579"><counter type="INSTRUCTION" missed="72" covered="85"/><counter type="BRANCH" missed="11" covered="11"/><counter type="LINE" missed="16" covered="25"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationMethodDeclaration" desc="(I)V" line="6681"><counter type="INSTRUCTION" missed="58" covered="67"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="14" covered="18"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="DefaultValue" desc="()V" line="6728"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_2_1" desc="(I)Z" line="6758"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_2" desc="(I)Z" line="6765"><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_3" desc="(I)Z" line="6772"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_4" desc="(I)Z" line="6779"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_5" desc="(I)Z" line="6786"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_6" desc="(I)Z" line="6793"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_7" desc="(I)Z" line="6800"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_8" desc="(I)Z" line="6807"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_9" desc="(I)Z" line="6814"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_10" desc="(I)Z" line="6821"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_11" desc="(I)Z" line="6828"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_12" desc="(I)Z" line="6835"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_13" desc="(I)Z" line="6842"><counter type="INSTRUCTION" missed="18" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_14" desc="(I)Z" line="6849"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_15" desc="(I)Z" line="6856"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_16" desc="(I)Z" line="6863"><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_17" desc="(I)Z" line="6870"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_18" desc="(I)Z" line="6877"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_19" desc="(I)Z" line="6884"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_20" desc="(I)Z" line="6891"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_21" desc="(I)Z" line="6898"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_22" desc="(I)Z" line="6905"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_23" desc="(I)Z" line="6912"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_24" desc="(I)Z" line="6919"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_25" desc="(I)Z" line="6926"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_26" desc="(I)Z" line="6933"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_27" desc="(I)Z" line="6940"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_28" desc="(I)Z" line="6947"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_29" desc="(I)Z" line="6954"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_30" desc="(I)Z" line="6961"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_31" desc="(I)Z" line="6968"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_32" desc="(I)Z" line="6975"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_33" desc="(I)Z" line="6982"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_34" desc="(I)Z" line="6989"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_35" desc="(I)Z" line="6996"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_36" desc="(I)Z" line="7003"><counter type="INSTRUCTION" missed="20" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_37" desc="(I)Z" line="7010"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_38" desc="(I)Z" line="7017"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_39" desc="(I)Z" line="7024"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_40" desc="(I)Z" line="7031"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_41" desc="(I)Z" line="7038"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_42" desc="(I)Z" line="7045"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_43" desc="(I)Z" line="7052"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_44" desc="(I)Z" line="7059"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_45" desc="(I)Z" line="7066"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_46" desc="(I)Z" line="7073"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_47" desc="(I)Z" line="7080"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_48" desc="(I)Z" line="7087"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_49" desc="(I)Z" line="7094"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_50" desc="(I)Z" line="7101"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_51" desc="(I)Z" line="7108"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_52" desc="(I)Z" line="7115"><counter type="INSTRUCTION" missed="20" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_53" desc="(I)Z" line="7122"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_54" desc="(I)Z" line="7129"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_55" desc="(I)Z" line="7136"><counter type="INSTRUCTION" missed="18" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_56" desc="(I)Z" line="7143"><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_57" desc="(I)Z" line="7150"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_58" desc="(I)Z" line="7157"><counter type="INSTRUCTION" missed="18" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_59" desc="(I)Z" line="7164"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_60" desc="(I)Z" line="7171"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_61" desc="(I)Z" line="7178"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_62" desc="(I)Z" line="7185"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_63" desc="(I)Z" line="7192"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_64" desc="(I)Z" line="7199"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_65" desc="(I)Z" line="7206"><counter type="INSTRUCTION" missed="17" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_66" desc="(I)Z" line="7213"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_67" desc="(I)Z" line="7220"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_68" desc="(I)Z" line="7227"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_69" desc="(I)Z" line="7234"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_70" desc="(I)Z" line="7241"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_71" desc="(I)Z" line="7248"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_72" desc="(I)Z" line="7255"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_73" desc="(I)Z" line="7262"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_74" desc="(I)Z" line="7269"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_75" desc="(I)Z" line="7276"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_76" desc="(I)Z" line="7283"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_397" desc="()Z" line="7290"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_382" desc="()Z" line="7295"><counter type="INSTRUCTION" missed="19" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_379" desc="()Z" line="7304"><counter type="INSTRUCTION" missed="42" covered="20"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_317" desc="()Z" line="7322"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_418" desc="()Z" line="7328"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_403" desc="()Z" line="7334"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_364" desc="()Z" line="7340"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_318" desc="()Z" line="7352"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_341" desc="()Z" line="7357"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_316" desc="()Z" line="7363"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_304" desc="()Z" line="7372"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_283" desc="()Z" line="7383"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_358" desc="()Z" line="7398"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_215" desc="()Z" line="7404"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_10" desc="()Z" line="7414"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_245" desc="()Z" line="7420"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_244" desc="()Z" line="7425"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_135" desc="()Z" line="7430"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_151" desc="()Z" line="7440"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_243" desc="()Z" line="7452"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_282" desc="()Z" line="7457"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_357" desc="()Z" line="7463"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_402" desc="()Z" line="7470"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_343" desc="()Z" line="7481"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_323" desc="()Z" line="7491"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_150" desc="()Z" line="7496"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_404" desc="()Z" line="7502"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_401" desc="()Z" line="7507"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_306" desc="()Z" line="7512"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_381" desc="()Z" line="7522"><counter type="INSTRUCTION" missed="11" covered="34"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_363" desc="()Z" line="7537"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_307" desc="()Z" line="7547"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_254" desc="()Z" line="7553"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_73" desc="()Z" line="7564"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_305" desc="()Z" line="7571"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_302" desc="()Z" line="7582"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_72" desc="()Z" line="7588"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_400" desc="()Z" line="7601"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_164" desc="()Z" line="7607"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_92" desc="()Z" line="7613"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_163" desc="()Z" line="7622"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_91" desc="()Z" line="7627"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_248" desc="()Z" line="7633"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_247" desc="()Z" line="7638"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_214" desc="()Z" line="7643"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_152" desc="()Z" line="7654"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_192" desc="()Z" line="7666"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_246" desc="()Z" line="7670"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_213" desc="()Z" line="7675"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_371" desc="()Z" line="7680"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_9" desc="()Z" line="7686"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_133" desc="()Z" line="7694"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_434" desc="()Z" line="7706"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_309" desc="()Z" line="7711"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_253" desc="()Z" line="7716"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_193" desc="()Z" line="7722"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_117" desc="()Z" line="7726"><counter type="INSTRUCTION" missed="17" covered="29"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_344" desc="()Z" line="7737"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_240" desc="()Z" line="7743"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_89" desc="()Z" line="7751"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_7" desc="()Z" line="7756"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_6" desc="()Z" line="7776"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_380" desc="()Z" line="7784"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_85" desc="()Z" line="7796"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_118" desc="()Z" line="7801"><counter type="INSTRUCTION" missed="23" covered="29"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_433" desc="()Z" line="7813"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_377" desc="()Z" line="7818"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_154" desc="()Z" line="7823"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_376" desc="()Z" line="7828"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_8" desc="()Z" line="7834"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_375" desc="()Z" line="7841"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_374" desc="()Z" line="7846"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_5" desc="()Z" line="7851"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_257" desc="()Z" line="7856"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_4" desc="()Z" line="7866"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_370" desc="()Z" line="7871"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_368" desc="()Z" line="7895"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_369" desc="()Z" line="7907"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_367" desc="()Z" line="7912"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_412" desc="()Z" line="7917"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_3" desc="()Z" line="7923"><counter type="INSTRUCTION" missed="14" covered="9"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_303" desc="()Z" line="7934"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_158" desc="()Z" line="7939"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_71" desc="()Z" line="7950"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_324" desc="()Z" line="7956"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_411" desc="()Z" line="7967"><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_242" desc="()Z" line="7977"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_149" desc="()Z" line="7988"><counter type="INSTRUCTION" missed="18" covered="15"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_308" desc="()Z" line="7999"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_249" desc="()Z" line="8005"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_252" desc="()Z" line="8016"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_153" desc="()Z" line="8027"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_424" desc="()Z" line="8034"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_161" desc="()Z" line="8044"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_70" desc="()Z" line="8056"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_426" desc="()Z" line="8061"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_86" desc="()Z" line="8066"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_416" desc="()Z" line="8076"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_425" desc="()Z" line="8086"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_410" desc="()Z" line="8091"><counter type="INSTRUCTION" missed="22" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_415" desc="()Z" line="8103"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_390" desc="()Z" line="8115"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_160" desc="()Z" line="8120"><counter type="INSTRUCTION" missed="36" covered="6"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_392" desc="()Z" line="8133"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_391" desc="()Z" line="8138"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_299" desc="()Z" line="8143"><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_159" desc="()Z" line="8158"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_395" desc="()Z" line="8163"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_298" desc="()Z" line="8168"><counter type="INSTRUCTION" missed="24" covered="6"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_389" desc="()Z" line="8177"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_88" desc="()Z" line="8182"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_414" desc="()Z" line="8192"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_388" desc="()Z" line="8197"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_297" desc="()Z" line="8202"><counter type="INSTRUCTION" missed="13" covered="6"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_393" desc="()Z" line="8209"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_396" desc="()Z" line="8214"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_413" desc="()Z" line="8225"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_437" desc="()Z" line="8230"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_296" desc="()Z" line="8236"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_251" desc="()Z" line="8245"><counter type="INSTRUCTION" missed="27" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_387" desc="()Z" line="8260"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_394" desc="()Z" line="8265"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_295" desc="()Z" line="8276"><counter type="INSTRUCTION" missed="17" covered="6"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_250" desc="()Z" line="8285"><counter type="INSTRUCTION" missed="27" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_294" desc="()Z" line="8300"><counter type="INSTRUCTION" missed="17" covered="6"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_157" desc="()Z" line="8309"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_156" desc="()Z" line="8314"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_155" desc="()Z" line="8319"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_423" desc="()Z" line="8324"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_87" desc="()Z" line="8330"><counter type="INSTRUCTION" missed="9" covered="45"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_69" desc="()Z" line="8347"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_432" desc="()Z" line="8352"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_384" desc="()Z" line="8362"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_431" desc="()Z" line="8368"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_430" desc="()Z" line="8373"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_422" desc="()Z" line="8379"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_68" desc="()Z" line="8388"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_409" desc="()Z" line="8394"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_408" desc="()Z" line="8399"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_407" desc="()Z" line="8404"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_386" desc="()Z" line="8410"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_385" desc="()Z" line="8422"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_293" desc="()Z" line="8429"><counter type="INSTRUCTION" missed="33" covered="6"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_84" desc="()Z" line="8443"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_292" desc="()Z" line="8448"><counter type="INSTRUCTION" missed="36" covered="6"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="7" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_83" desc="()Z" line="8459"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_82" desc="()Z" line="8464"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_81" desc="()Z" line="8469"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_80" desc="()Z" line="8474"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_79" desc="()Z" line="8479"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_78" desc="()Z" line="8484"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_291" desc="()Z" line="8489"><counter type="INSTRUCTION" missed="24" covered="6"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_77" desc="()Z" line="8498"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_76" desc="()Z" line="8503"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_75" desc="()Z" line="8508"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_74" desc="()Z" line="8513"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_258" desc="()Z" line="8518"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_73" desc="()Z" line="8523"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_72" desc="()Z" line="8528"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_290" desc="()Z" line="8533"><counter type="INSTRUCTION" missed="8" covered="31"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_67" desc="()Z" line="8545"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_2" desc="()Z" line="8551"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_373" desc="()Z" line="8595"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_301" desc="()Z" line="8602"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_421" desc="()Z" line="8607"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_420" desc="()Z" line="8613"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_406" desc="()Z" line="8621"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_383" desc="()Z" line="8630"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_66" desc="()Z" line="8640"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_289" desc="()Z" line="8646"><counter type="INSTRUCTION" missed="41" covered="6"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_71" desc="()Z" line="8661"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_1" desc="()Z" line="8668"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_147" desc="()Z" line="8677"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_322" desc="()Z" line="8686"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_321" desc="()Z" line="8691"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_320" desc="()Z" line="8698"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_319" desc="()Z" line="8703"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_288" desc="()Z" line="8709"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_287" desc="()Z" line="8724"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_146" desc="()Z" line="8729"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_65" desc="()Z" line="8736"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_223" desc="()Z" line="8746"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_241" desc="()Z" line="8751"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_300" desc="()Z" line="8757"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_239" desc="()Z" line="8763"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_148" desc="()Z" line="8774"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_144" desc="()Z" line="8788"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_170" desc="()Z" line="8799"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_63" desc="()Z" line="8809"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_64" desc="()Z" line="8818"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_169" desc="()Z" line="8823"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_94" desc="()Z" line="8830"><counter type="INSTRUCTION" missed="3" covered="38"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_62" desc="()Z" line="8848"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_168" desc="()Z" line="8853"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_286" desc="()Z" line="8858"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_59" desc="()Z" line="8869"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_143" desc="()Z" line="8875"><counter type="INSTRUCTION" missed="7" covered="12"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_238" desc="()Z" line="8882"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_237" desc="()Z" line="8887"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_352" desc="()Z" line="8892"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_236" desc="()Z" line="8897"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_235" desc="()Z" line="8902"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_234" desc="()Z" line="8907"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_233" desc="()Z" line="8912"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_232" desc="()Z" line="8917"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_231" desc="()Z" line="8922"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_230" desc="()Z" line="8927"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_229" desc="()Z" line="8932"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_228" desc="()Z" line="8937"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_227" desc="()Z" line="8942"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_226" desc="()Z" line="8948"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_225" desc="()Z" line="8953"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_61" desc="()Z" line="8958"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_145" desc="()Z" line="8964"><counter type="INSTRUCTION" missed="3" covered="110"/><counter type="BRANCH" missed="13" covered="21"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_224" desc="()Z" line="9018"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_351" desc="()Z" line="9023"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_353" desc="()Z" line="9028"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_360" desc="()Z" line="9033"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_285" desc="()Z" line="9038"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_58" desc="()Z" line="9044"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_222" desc="()Z" line="9052"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_60" desc="()Z" line="9063"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_142" desc="()Z" line="9077"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_355" desc="()Z" line="9086"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_354" desc="()Z" line="9094"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_312" desc="()Z" line="9099"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_333" desc="()Z" line="9105"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_334" desc="()Z" line="9110"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_350" desc="()Z" line="9123"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_57" desc="()Z" line="9128"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_140" desc="()Z" line="9134"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_172" desc="()Z" line="9149"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_269" desc="()Z" line="9154"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_348" desc="()Z" line="9164"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_139" desc="()Z" line="9169"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_96" desc="()Z" line="9175"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_349" desc="()Z" line="9184"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_346" desc="()Z" line="9189"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_219" desc="()Z" line="9194"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_359" desc="()Z" line="9199"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_345" desc="()Z" line="9205"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_347" desc="()Z" line="9214"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_134" desc="()Z" line="9219"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_331" desc="()Z" line="9225"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_330" desc="()Z" line="9230"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_329" desc="()Z" line="9235"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_328" desc="()Z" line="9240"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_327" desc="()Z" line="9245"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_326" desc="()Z" line="9250"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_325" desc="()Z" line="9255"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_310" desc="()Z" line="9261"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_338" desc="()Z" line="9285"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_212" desc="()Z" line="9291"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_211" desc="()Z" line="9296"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_210" desc="()Z" line="9302"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_56" desc="()Z" line="9309"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_55" desc="()Z" line="9314"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_132" desc="()Z" line="9321"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_54" desc="()Z" line="9345"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_53" desc="()Z" line="9351"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_50" desc="()Z" line="9357"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_124" desc="()Z" line="9363"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_49" desc="()Z" line="9368"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_340" desc="()Z" line="9374"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_48" desc="()Z" line="9379"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_52" desc="()Z" line="9386"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_218" desc="()Z" line="9404"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_51" desc="()Z" line="9409"><counter type="INSTRUCTION" missed="4" covered="23"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_332" desc="()Z" line="9421"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_311" desc="()Z" line="9434"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_46" desc="()Z" line="9446"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_45" desc="()Z" line="9452"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_44" desc="()Z" line="9465"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_268" desc="()Z" line="9471"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_267" desc="()Z" line="9476"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_266" desc="()Z" line="9482"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_265" desc="()Z" line="9487"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_264" desc="()Z" line="9494"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_47" desc="()Z" line="9499"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_263" desc="()Z" line="9506"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_262" desc="()Z" line="9511"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_261" desc="()Z" line="9516"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_260" desc="()Z" line="9521"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_43" desc="()Z" line="9526"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_171" desc="()Z" line="9532"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_217" desc="()Z" line="9571"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_259" desc="()Z" line="9576"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_42" desc="()Z" line="9581"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_129" desc="()Z" line="9586"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_138" desc="()Z" line="9592"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_120" desc="()Z" line="9605"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_123" desc="()Z" line="9610"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_221" desc="()Z" line="9615"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_141" desc="()Z" line="9621"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_220" desc="()Z" line="9630"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_339" desc="()Z" line="9637"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_315" desc="()Z" line="9643"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_279" desc="()Z" line="9652"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_336" desc="()Z" line="9657"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_95" desc="()Z" line="9662"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_337" desc="()Z" line="9672"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_131" desc="()Z" line="9677"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_314" desc="()Z" line="9682"><counter type="INSTRUCTION" missed="7" covered="37"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_41" desc="()Z" line="9699"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_128" desc="()Z" line="9711"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_126" desc="()Z" line="9716"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_313" desc="()Z" line="9721"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_280" desc="()Z" line="9735"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_40" desc="()Z" line="9744"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_39" desc="()Z" line="9761"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_281" desc="()Z" line="9773"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_119" desc="()Z" line="9781"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_275" desc="()Z" line="9786"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_122" desc="()Z" line="9791"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_209" desc="()Z" line="9796"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_208" desc="()Z" line="9801"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_108" desc="()Z" line="9806"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_207" desc="()Z" line="9811"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_278" desc="()Z" line="9816"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_130" desc="()Z" line="9822"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_206" desc="()Z" line="9838"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_37" desc="()Z" line="9849"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_277" desc="()Z" line="9859"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_38" desc="()Z" line="9866"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_276" desc="()Z" line="9879"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_197" desc="()Z" line="9885"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_196" desc="()Z" line="9890"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_195" desc="()Z" line="9895"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_274" desc="()Z" line="9900"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_125" desc="()Z" line="9906"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_194" desc="()Z" line="9922"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_121" desc="()Z" line="9932"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_107" desc="()Z" line="9942"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_116" desc="()Z" line="9947"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_36" desc="()Z" line="9957"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_35" desc="()Z" line="9962"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_32" desc="()Z" line="9967"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_115" desc="()Z" line="9973"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_34" desc="()Z" line="9979"><counter type="INSTRUCTION" missed="7" covered="20"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_31" desc="()Z" line="9993"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_114" desc="()Z" line="10003"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_113" desc="()Z" line="10013"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_112" desc="()Z" line="10018"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_111" desc="()Z" line="10023"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_110" desc="()Z" line="10028"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_30" desc="()Z" line="10033"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_33" desc="()Z" line="10040"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_191" desc="()Z" line="10056"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_28" desc="()Z" line="10066"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_29" desc="()Z" line="10072"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_109" desc="()Z" line="10078"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_27" desc="()Z" line="10086"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_106" desc="()Z" line="10092"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_26" desc="()Z" line="10102"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_105" desc="()Z" line="10108"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_25" desc="()Z" line="10118"><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_104" desc="()Z" line="10126"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_103" desc="()Z" line="10136"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_102" desc="()Z" line="10146"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_273" desc="()Z" line="10156"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_190" desc="()Z" line="10166"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_189" desc="()Z" line="10174"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_188" desc="()Z" line="10179"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_187" desc="()Z" line="10184"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_186" desc="()Z" line="10189"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_185" desc="()Z" line="10194"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_184" desc="()Z" line="10199"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_183" desc="()Z" line="10204"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_182" desc="()Z" line="10209"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_181" desc="()Z" line="10214"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_180" desc="()Z" line="10219"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_179" desc="()Z" line="10224"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_100" desc="()Z" line="10230"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_178" desc="()Z" line="10269"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_24" desc="()Z" line="10274"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_101" desc="()Z" line="10280"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_435" desc="()Z" line="10288"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_428" desc="()Z" line="10293"><counter type="INSTRUCTION" missed="17" covered="6"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_427" desc="()Z" line="10304"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_417" desc="()Z" line="10311"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_21" desc="()Z" line="10323"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_23" desc="()Z" line="10328"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_270" desc="()Z" line="10334"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_137" desc="()Z" line="10340"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_216" desc="()Z" line="10350"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_136" desc="()Z" line="10356"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_205" desc="()Z" line="10365"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_204" desc="()Z" line="10370"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_203" desc="()Z" line="10375"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_366" desc="()Z" line="10380"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_365" desc="()Z" line="10385"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_202" desc="()Z" line="10390"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_201" desc="()Z" line="10395"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_200" desc="()Z" line="10400"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_199" desc="()Z" line="10405"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_127" desc="()Z" line="10411"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_198" desc="()Z" line="10438"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_256" desc="()Z" line="10443"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_362" desc="()Z" line="10448"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_361" desc="()Z" line="10459"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_356" desc="()Z" line="10471"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_335" desc="()Z" line="10480"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_443" desc="()Z" line="10485"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_18" desc="()Z" line="10490"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_177" desc="()Z" line="10496"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_272" desc="()Z" line="10504"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_99" desc="()Z" line="10510"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_176" desc="()Z" line="10521"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_173" desc="()Z" line="10529"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_97" desc="()Z" line="10536"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_22" desc="()Z" line="10545"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_17" desc="()Z" line="10557"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_20" desc="()Z" line="10563"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_19" desc="()Z" line="10572"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_271" desc="()Z" line="10577"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_444" desc="()Z" line="10589"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_175" desc="()Z" line="10595"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_98" desc="()Z" line="10606"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_174" desc="()Z" line="10615"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_442" desc="()Z" line="10626"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_398" desc="()Z" line="10638"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_162" desc="()Z" line="10644"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_90" desc="()Z" line="10650"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_16" desc="()Z" line="10659"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_75" desc="()Z" line="10664"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_342" desc="()Z" line="10671"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_441" desc="()Z" line="10676"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_13" desc="()Z" line="10681"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_440" desc="()Z" line="10687"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_76" desc="()Z" line="10692"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_378" desc="()Z" line="10697"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_15" desc="()Z" line="10702"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_439" desc="()Z" line="10710"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_372" desc="()Z" line="10716"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_14" desc="()Z" line="10723"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_438" desc="()Z" line="10730"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_11" desc="()Z" line="10735"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_255" desc="()Z" line="10740"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_436" desc="()Z" line="10746"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_429" desc="()Z" line="10767"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_419" desc="()Z" line="10776"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_167" desc="()Z" line="10782"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_166" desc="()Z" line="10793"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_74" desc="()Z" line="10801"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_93" desc="()Z" line="10808"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_165" desc="()Z" line="10820"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_405" desc="()Z" line="10827"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_284" desc="()Z" line="10838"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_12" desc="()Z" line="10844"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_399" desc="()Z" line="10849"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_la1_init_0" desc="()V" line="10877"><counter type="INSTRUCTION" missed="0" covered="612"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_1" desc="()V" line="10880"><counter type="INSTRUCTION" missed="0" covered="612"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_2" desc="()V" line="10883"><counter type="INSTRUCTION" missed="0" covered="612"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_3" desc="()V" line="10886"><counter type="INSTRUCTION" missed="0" covered="612"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ast/CharStream;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReInit" desc="(Lnet/sourceforge/pmd/lang/ast/CharStream;)V" line="10904"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserTokenManager;)V" line="9"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserTokenManager;)V" line="10926"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_consume_token" desc="(I)Lnet/sourceforge/pmd/lang/java/ast/Token;" line="10936"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_scan_token" desc="(I)Z" line="10962"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Lnet/sourceforge/pmd/lang/java/ast/Token;" line="10985"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getToken" desc="(I)Lnet/sourceforge/pmd/lang/java/ast/Token;" line="10993"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_add_error_token" desc="(II)V" line="11008"><counter type="INSTRUCTION" missed="11" covered="92"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateParseException" desc="()Lnet/sourceforge/pmd/lang/java/ast/ParseException;" line="11034"><counter type="INSTRUCTION" missed="16" covered="141"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enable_tracing" desc="()V" line="11077"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="disable_tracing" desc="()V" line="11081"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_rescan_token" desc="()V" line="11084"><counter type="INSTRUCTION" missed="296" covered="51"/><counter type="BRANCH" missed="76" covered="7"/><counter type="LINE" missed="74" covered="13"/><counter type="COMPLEXITY" missed="76" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_save" desc="(II)V" line="11178"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="10871"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7945" covered="19982"/><counter type="BRANCH" missed="1717" covered="2332"/><counter type="LINE" missed="1496" covered="4460"/><counter type="COMPLEXITY" missed="1312" covered="1480"/><counter type="METHOD" missed="56" covered="627"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/JavadocElement"><method name="&lt;init&gt;" desc="(IIIILnet/sourceforge/pmd/lang/java/javadoc/JavadocTag;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tag" desc="()Lnet/sourceforge/pmd/lang/java/javadoc/JavadocTag;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="11"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeBody"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTDoStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuppressWarningsAnnotationFor" desc="(Lnet/sourceforge/pmd/Rule;)Z" line="29"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArray" desc="()Z" line="41"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayDepth" desc="()I" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeNode" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTType;" line="49"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkType" desc="()I" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecl" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkDecl" desc="()I" line="66"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableName" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="98"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTConditionalExpression"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTernary" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTernary" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTPostfixExpression"><method name="&lt;init&gt;" desc="(I)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNested" desc="()Z" line="26"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTTypeDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuppressWarningsAnnotationFor" desc="(Lnet/sourceforge/pmd/Rule;)Z" line="21"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/MultiLineComment"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTStatementExpressionList"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTPreDecrementExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTVariableInitializer"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTAssertStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/JavaParserTreeConstants"><method name="&lt;clinit&gt;" desc="()V" line="122"><counter type="INSTRUCTION" missed="0" covered="460"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="460"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTMethodReference"><method name="&lt;init&gt;" desc="(I)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTDefaultValue"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/ast/DumpFacade"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initializeWith" desc="(Ljava/io/Writer;Ljava/lang/String;ZLnet/sourceforge/pmd/lang/java/ast/JavaNode;)V" line="18"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dump" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="458" covered="0"/><counter type="BRANCH" missed="114" covered="0"/><counter type="LINE" missed="110" covered="0"/><counter type="COMPLEXITY" missed="58" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectModifiers" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaNode;Ljava/util/List;)V" line="214"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="605" covered="0"/><counter type="BRANCH" missed="144" covered="0"/><counter type="LINE" missed="150" covered="0"/><counter type="COMPLEXITY" missed="77" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTFormalParameter"><method name="&lt;init&gt;" desc="(I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="19"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVarargs" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVarargs" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExplicitReceiverParameter" desc="()Z" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuppressWarningsAnnotationFor" desc="(Lnet/sourceforge/pmd/Rule;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArray" desc="()Z" line="54"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayDepth" desc="()I" line="59"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeNode" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTType;" line="66"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkType" desc="()I" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecl" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;" line="80"><counter type="INSTRUCTION" missed="24" covered="8"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkDecl" desc="()I" line="88"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="95"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="7" covered="22"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTTypeParameters"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTType"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeImage" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayDepth" desc="()I" line="34"><counter type="INSTRUCTION" missed="15" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArray" desc="()Z" line="41"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="56"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTCatchStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTRelationalExpression"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTSwitchStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTForStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTImportDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="15"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="19"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImportOnDemand" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isImportOnDemand" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatic" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStatic" desc="()Z" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImportedNameNode" desc="()Lnet/sourceforge/pmd/lang/java/ast/ASTName;" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImportedName" desc="()Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageName" desc="()Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPackage" desc="(Ljava/lang/Package;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackage" desc="()Ljava/lang/Package;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="66"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTForUpdate"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTContinueStatement"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/DummyJavaNode"><method name="&lt;init&gt;" desc="(I)V" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/ASTRUNSIGNEDSHIFT"><method name="&lt;init&gt;" desc="(I)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjtAccept" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/AbstractJavaAccessNode"><method name="&lt;init&gt;" desc="(I)V" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/JavaParser;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifiers" desc="()I" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setModifiers" desc="(I)V" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPublic" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPublic" desc="(Z)V" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isProtected" desc="()Z" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProtected" desc="(Z)V" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrivate" desc="()Z" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPrivate" desc="(Z)V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAbstract" desc="()Z" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAbstract" desc="(Z)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStatic" desc="()Z" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatic" desc="(Z)V" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFinal" desc="()Z" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFinal" desc="(Z)V" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSynchronized" desc="()Z" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSynchronized" desc="(Z)V" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNative" desc="()Z" line="83"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNative" desc="(Z)V" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTransient" desc="()Z" line="91"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTransient" desc="(Z)V" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVolatile" desc="()Z" line="99"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVolatile" desc="(Z)V" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStrictfp" desc="()Z" line="107"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStrictfp" desc="(Z)V" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDefault" desc="()Z" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(Z)V" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModifier" desc="(I)Z" line="124"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifier" desc="(ZI)V" line="128"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPackagePrivate" desc="()Z" line="136"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="145"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="5" covered="44"/><counter type="COMPLEXITY" missed="4" covered="32"/><counter type="METHOD" missed="3" covered="28"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/ast/FormalComment"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ASTConditionalExpression.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTRSIGNEDSHIFT.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTResultType.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="13" mb="0" cb="4"/><line nr="22" mi="0" ci="7" mb="0" cb="2"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTResources.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTThrowStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTNameList.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractJavaAccessNode.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="1" cb="1"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="13" mb="0" cb="6"/><counter type="INSTRUCTION" missed="20" covered="145"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="5" covered="44"/><counter type="COMPLEXITY" missed="4" covered="32"/><counter type="METHOD" missed="3" covered="28"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTFormalParameter.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="1" cb="1"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="2"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="1" cb="1"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="21" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="95"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="7" covered="22"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTConstructorDeclaration.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="15" mb="0" cb="2"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTDefaultValue.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="4" ci="0" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DumpFacade.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="12" ci="0" mb="2" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="2" cb="0"/><line nr="32" mi="12" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="2" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="2" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="2" cb="0"/><line nr="71" mi="11" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="2" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="8" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="11" ci="0" mb="2" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="4" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="2" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="4" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="10" ci="0" mb="2" cb="0"/><line nr="120" mi="4" ci="0" mb="2" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="4" ci="0" mb="2" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="2" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="2" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="2" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="2" cb="0"/><line nr="141" mi="4" ci="0" mb="2" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="2" cb="0"/><line nr="151" mi="4" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="2" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="2" cb="0"/><line nr="158" mi="11" ci="0" mb="2" cb="0"/><line nr="159" mi="3" ci="0" mb="2" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="2" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="2" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="2" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="2" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="2" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="2" cb="0"/><line nr="180" mi="4" ci="0" mb="2" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="2" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="2" cb="0"/><line nr="187" mi="4" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="2" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="4" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="2" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="10" ci="0" mb="2" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="2" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="2" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="2" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="2" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="2" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="2" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="2" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="2" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="2" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="2" cb="0"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="2" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="2" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="2" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="605" covered="0"/><counter type="BRANCH" missed="144" covered="0"/><counter type="LINE" missed="150" covered="0"/><counter type="COMPLEXITY" missed="77" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ASTMemberValuePairs.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTFinallyStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTEqualityExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTWhileStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleLineComment.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaParser.java"><line nr="9" mi="5" ci="5" mb="0" cb="0"/><line nr="10" mi="3" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="1" cb="1"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="20" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="4"/><line nr="28" mi="12" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="2"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="2"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="1" cb="1"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="4"/><line nr="64" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="1" cb="1"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="1" cb="1"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="1" cb="3"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="1" cb="1"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="1" cb="1"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="1" cb="1"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="1" cb="1"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="1" cb="1"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="13" mb="1" cb="5"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="4"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="17" mb="0" cb="6"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="2"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="2"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="2"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="1" cb="1"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="1" cb="1"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="1" cb="1"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="1" cb="1"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="2" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="2" cb="2"/><line nr="262" mi="10" ci="0" mb="0" cb="0"/><line nr="263" mi="10" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="2"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="2" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="2" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="301" mi="3" ci="0" mb="2" cb="0"/><line nr="302" mi="3" ci="0" mb="0" cb="0"/><line nr="304" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="2" mb="3" cb="1"/><line nr="307" mi="5" ci="5" mb="0" cb="0"/><line nr="308" mi="7" ci="6" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="2"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="6" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="2"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="1" cb="1"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="1" cb="1"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="2" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="0" ci="5" mb="2" cb="2"/><line nr="358" mi="5" ci="5" mb="0" cb="0"/><line nr="359" mi="5" ci="8" mb="0" cb="0"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="4" mb="0" cb="2"/><line nr="378" mi="0" ci="4" mb="1" cb="13"/><line nr="380" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="4" mb="0" cb="0"/><line nr="386" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="1" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="394" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="1" mb="0" cb="0"/><line nr="408" mi="0" ci="4" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="0" cb="0"/><line nr="410" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="1" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="0"/><line nr="418" mi="0" ci="1" mb="0" cb="0"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="422" mi="0" ci="1" mb="0" cb="0"/><line nr="424" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="0" ci="6" mb="0" cb="0"/><line nr="426" mi="0" ci="1" mb="0" cb="0"/><line nr="428" mi="0" ci="2" mb="0" cb="0"/><line nr="429" mi="0" ci="1" mb="0" cb="0"/><line nr="431" mi="6" ci="0" mb="0" cb="0"/><line nr="432" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="4" ci="0" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="445" mi="0" ci="6" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="448" mi="0" ci="5" mb="0" cb="0"/><line nr="450" mi="0" ci="4" mb="1" cb="2"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="4" mb="1" cb="3"/><line nr="476" mi="0" ci="3" mb="0" cb="0"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="1" mb="0" cb="0"/><line nr="485" mi="6" ci="0" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="487" mi="4" ci="0" mb="0" cb="0"/><line nr="491" mi="6" ci="0" mb="0" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="493" mi="4" ci="0" mb="0" cb="0"/><line nr="495" mi="0" ci="1" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="1" cb="1"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="4" ci="0" mb="0" cb="0"/><line nr="502" mi="0" ci="3" mb="1" cb="1"/><line nr="503" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="3" ci="0" mb="2" cb="0"/><line nr="506" mi="3" ci="0" mb="0" cb="0"/><line nr="508" mi="3" ci="0" mb="0" cb="0"/><line nr="510" mi="0" ci="5" mb="2" cb="2"/><line nr="511" mi="5" ci="5" mb="0" cb="0"/><line nr="512" mi="5" ci="8" mb="0" cb="0"/><line nr="515" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="0" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="0" ci="4" mb="0" cb="0"/><line nr="522" mi="0" ci="7" mb="0" cb="0"/><line nr="523" mi="0" ci="3" mb="0" cb="0"/><line nr="525" mi="0" ci="4" mb="1" cb="2"/><line nr="529" mi="0" ci="4" mb="0" cb="2"/><line nr="532" mi="0" ci="4" mb="1" cb="2"/><line nr="534" mi="0" ci="4" mb="0" cb="0"/><line nr="535" mi="0" ci="1" mb="0" cb="0"/><line nr="537" mi="0" ci="4" mb="0" cb="0"/><line nr="538" mi="0" ci="1" mb="0" cb="0"/><line nr="540" mi="6" ci="0" mb="0" cb="0"/><line nr="541" mi="4" ci="0" mb="0" cb="0"/><line nr="542" mi="4" ci="0" mb="0" cb="0"/><line nr="546" mi="0" ci="6" mb="0" cb="0"/><line nr="549" mi="0" ci="4" mb="0" cb="0"/><line nr="550" mi="0" ci="1" mb="0" cb="0"/><line nr="552" mi="0" ci="4" mb="0" cb="0"/><line nr="553" mi="0" ci="2" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="556" mi="6" ci="0" mb="0" cb="0"/><line nr="557" mi="4" ci="0" mb="0" cb="0"/><line nr="558" mi="4" ci="0" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="0" cb="0"/><line nr="561" mi="0" ci="4" mb="0" cb="0"/><line nr="562" mi="0" ci="4" mb="0" cb="2"/><line nr="564" mi="0" ci="2" mb="0" cb="0"/><line nr="565" mi="0" ci="1" mb="0" cb="0"/><line nr="567" mi="0" ci="6" mb="0" cb="0"/><line nr="570" mi="0" ci="4" mb="0" cb="2"/><line nr="572" mi="0" ci="2" mb="0" cb="0"/><line nr="573" mi="0" ci="1" mb="0" cb="0"/><line nr="575" mi="0" ci="6" mb="0" cb="0"/><line nr="578" mi="0" ci="4" mb="0" cb="2"/><line nr="580" mi="0" ci="2" mb="0" cb="0"/><line nr="581" mi="0" ci="1" mb="0" cb="0"/><line nr="583" mi="0" ci="6" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="1" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="1" cb="1"/><line nr="589" mi="0" ci="4" mb="0" cb="0"/><line nr="590" mi="0" ci="3" mb="0" cb="0"/><line nr="592" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="0" ci="3" mb="1" cb="1"/><line nr="595" mi="0" ci="3" mb="0" cb="0"/><line nr="597" mi="3" ci="0" mb="2" cb="0"/><line nr="598" mi="3" ci="0" mb="0" cb="0"/><line nr="600" mi="3" ci="0" mb="0" cb="0"/><line nr="602" mi="0" ci="5" mb="2" cb="2"/><line nr="603" mi="5" ci="5" mb="0" cb="0"/><line nr="604" mi="5" ci="8" mb="0" cb="0"/><line nr="607" mi="0" ci="1" mb="0" cb="0"/><line nr="611" mi="0" ci="6" mb="0" cb="0"/><line nr="612" mi="0" ci="2" mb="0" cb="0"/><line nr="613" mi="0" ci="4" mb="0" cb="0"/><line nr="614" mi="0" ci="7" mb="0" cb="0"/><line nr="616" mi="0" ci="4" mb="0" cb="0"/><line nr="619" mi="0" ci="4" mb="1" cb="1"/><line nr="622" mi="1" ci="0" mb="0" cb="0"/><line nr="624" mi="0" ci="6" mb="0" cb="0"/><line nr="625" mi="0" ci="1" mb="0" cb="0"/><line nr="627" mi="2" ci="0" mb="0" cb="0"/><line nr="628" mi="3" ci="0" mb="0" cb="0"/><line nr="630" mi="0" ci="2" mb="0" cb="0"/><line nr="633" mi="0" ci="4" mb="1" cb="1"/><line nr="636" mi="1" ci="0" mb="0" cb="0"/><line nr="638" mi="0" ci="6" mb="0" cb="0"/><line nr="639" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="4" ci="0" mb="0" cb="0"/><line nr="644" mi="4" ci="0" mb="2" cb="0"/><line nr="647" mi="1" ci="0" mb="0" cb="0"/><line nr="649" mi="6" ci="0" mb="0" cb="0"/><line nr="650" mi="1" ci="0" mb="0" cb="0"/><line nr="652" mi="2" ci="0" mb="0" cb="0"/><line nr="653" mi="3" ci="0" mb="0" cb="0"/><line nr="655" mi="2" ci="0" mb="0" cb="0"/><line nr="656" mi="3" ci="0" mb="0" cb="0"/><line nr="658" mi="1" ci="0" mb="0" cb="0"/><line nr="659" mi="2" ci="0" mb="2" cb="0"/><line nr="660" mi="4" ci="0" mb="0" cb="0"/><line nr="661" mi="3" ci="0" mb="0" cb="0"/><line nr="663" mi="4" ci="0" mb="0" cb="0"/><line nr="665" mi="3" ci="0" mb="2" cb="0"/><line nr="666" mi="3" ci="0" mb="0" cb="0"/><line nr="668" mi="3" ci="0" mb="2" cb="0"/><line nr="669" mi="3" ci="0" mb="0" cb="0"/><line nr="671" mi="3" ci="0" mb="0" cb="0"/><line nr="673" mi="3" ci="2" mb="3" cb="1"/><line nr="674" mi="5" ci="5" mb="0" cb="0"/><line nr="675" mi="7" ci="6" mb="0" cb="0"/><line nr="678" mi="0" ci="1" mb="0" cb="0"/><line nr="682" mi="0" ci="6" mb="0" cb="0"/><line nr="683" mi="0" ci="2" mb="0" cb="0"/><line nr="684" mi="0" ci="4" mb="0" cb="0"/><line nr="685" mi="0" ci="5" mb="0" cb="0"/><line nr="687" mi="0" ci="4" mb="0" cb="0"/><line nr="690" mi="0" ci="4" mb="0" cb="2"/><line nr="693" mi="0" ci="1" mb="0" cb="0"/><line nr="695" mi="0" ci="6" mb="0" cb="0"/><line nr="696" mi="0" ci="1" mb="0" cb="0"/><line nr="698" mi="0" ci="2" mb="0" cb="0"/><line nr="699" mi="0" ci="3" mb="0" cb="0"/><line nr="701" mi="0" ci="2" mb="0" cb="0"/><line nr="704" mi="0" ci="4" mb="0" cb="2"/><line nr="707" mi="0" ci="1" mb="0" cb="0"/><line nr="709" mi="0" ci="6" mb="0" cb="0"/><line nr="710" mi="0" ci="1" mb="0" cb="0"/><line nr="712" mi="0" ci="4" mb="0" cb="0"/><line nr="715" mi="0" ci="4" mb="1" cb="1"/><line nr="718" mi="1" ci="0" mb="0" cb="0"/><line nr="720" mi="0" ci="6" mb="0" cb="0"/><line nr="721" mi="0" ci="1" mb="0" cb="0"/><line nr="723" mi="2" ci="0" mb="0" cb="0"/><line nr="724" mi="3" ci="0" mb="0" cb="0"/><line nr="726" mi="0" ci="3" mb="0" cb="0"/><line nr="728" mi="1" ci="0" mb="0" cb="0"/><line nr="729" mi="2" ci="0" mb="2" cb="0"/><line nr="730" mi="4" ci="0" mb="0" cb="0"/><line nr="731" mi="3" ci="0" mb="0" cb="0"/><line nr="733" mi="4" ci="0" mb="0" cb="0"/><line nr="735" mi="3" ci="0" mb="2" cb="0"/><line nr="736" mi="3" ci="0" mb="0" cb="0"/><line nr="738" mi="3" ci="0" mb="2" cb="0"/><line nr="739" mi="3" ci="0" mb="0" cb="0"/><line nr="741" mi="3" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="2" mb="3" cb="1"/><line nr="744" mi="5" ci="5" mb="0" cb="0"/><line nr="745" mi="7" ci="6" mb="0" cb="0"/><line nr="748" mi="0" ci="1" mb="0" cb="0"/><line nr="752" mi="0" ci="6" mb="0" cb="0"/><line nr="753" mi="0" ci="2" mb="0" cb="0"/><line nr="754" mi="0" ci="4" mb="0" cb="0"/><line nr="755" mi="0" ci="5" mb="0" cb="0"/><line nr="756" mi="0" ci="3" mb="0" cb="0"/><line nr="758" mi="0" ci="4" mb="0" cb="0"/><line nr="759" mi="0" ci="5" mb="1" cb="1"/><line nr="760" mi="5" ci="0" mb="0" cb="0"/><line nr="763" mi="0" ci="4" mb="1" cb="1"/><line nr="764" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="0" ci="4" mb="0" cb="0"/><line nr="767" mi="0" ci="4" mb="0" cb="0"/><line nr="768" mi="0" ci="4" mb="1" cb="1"/><line nr="770" mi="2" ci="0" mb="0" cb="0"/><line nr="771" mi="1" ci="0" mb="0" cb="0"/><line nr="773" mi="0" ci="6" mb="0" cb="0"/><line nr="776" mi="0" ci="2" mb="0" cb="0"/><line nr="777" mi="1" ci="0" mb="0" cb="0"/><line nr="778" mi="2" ci="0" mb="2" cb="0"/><line nr="779" mi="4" ci="0" mb="0" cb="0"/><line nr="780" mi="3" ci="0" mb="0" cb="0"/><line nr="782" mi="4" ci="0" mb="0" cb="0"/><line nr="784" mi="3" ci="0" mb="2" cb="0"/><line nr="785" mi="3" ci="0" mb="0" cb="0"/><line nr="787" mi="3" ci="0" mb="2" cb="0"/><line nr="788" mi="3" ci="0" mb="0" cb="0"/><line nr="790" mi="3" ci="0" mb="0" cb="0"/><line nr="792" mi="3" ci="2" mb="3" cb="1"/><line nr="793" mi="5" ci="5" mb="0" cb="0"/><line nr="794" mi="7" ci="6" mb="0" cb="0"/><line nr="797" mi="0" ci="1" mb="0" cb="0"/><line nr="801" mi="0" ci="6" mb="0" cb="0"/><line nr="802" mi="0" ci="2" mb="0" cb="0"/><line nr="803" mi="0" ci="4" mb="0" cb="0"/><line nr="804" mi="0" ci="5" mb="0" cb="0"/><line nr="806" mi="0" ci="4" mb="0" cb="0"/><line nr="807" mi="0" ci="4" mb="0" cb="2"/><line nr="812" mi="0" ci="4" mb="1" cb="1"/><line nr="815" mi="1" ci="0" mb="0" cb="0"/><line nr="817" mi="0" ci="6" mb="0" cb="0"/><line nr="818" mi="0" ci="1" mb="0" cb="0"/><line nr="820" mi="3" ci="0" mb="0" cb="0"/><line nr="822" mi="0" ci="2" mb="0" cb="0"/><line nr="825" mi="0" ci="4" mb="0" cb="2"/><line nr="830" mi="0" ci="4" mb="0" cb="0"/><line nr="833" mi="0" ci="4" mb="1" cb="1"/><line nr="836" mi="1" ci="0" mb="0" cb="0"/><line nr="838" mi="0" ci="6" mb="0" cb="0"/><line nr="839" mi="0" ci="1" mb="0" cb="0"/><line nr="841" mi="3" ci="0" mb="0" cb="0"/><line nr="843" mi="0" ci="3" mb="0" cb="0"/><line nr="847" mi="0" ci="6" mb="0" cb="0"/><line nr="850" mi="0" ci="4" mb="1" cb="1"/><line nr="852" mi="4" ci="0" mb="0" cb="0"/><line nr="853" mi="1" ci="0" mb="0" cb="0"/><line nr="855" mi="0" ci="6" mb="0" cb="0"/><line nr="858" mi="0" ci="4" mb="0" cb="2"/><line nr="860" mi="0" ci="4" mb="0" cb="0"/><line nr="863" mi="0" ci="4" mb="0" cb="2"/><line nr="893" mi="0" ci="1" mb="0" cb="0"/><line nr="895" mi="0" ci="6" mb="0" cb="0"/><line nr="896" mi="0" ci="1" mb="0" cb="0"/><line nr="898" mi="0" ci="3" mb="0" cb="0"/><line nr="902" mi="0" ci="6" mb="0" cb="0"/><line nr="905" mi="0" ci="4" mb="0" cb="0"/><line nr="906" mi="1" ci="0" mb="0" cb="0"/><line nr="907" mi="2" ci="0" mb="2" cb="0"/><line nr="908" mi="4" ci="0" mb="0" cb="0"/><line nr="909" mi="3" ci="0" mb="0" cb="0"/><line nr="911" mi="4" ci="0" mb="0" cb="0"/><line nr="913" mi="3" ci="0" mb="2" cb="0"/><line nr="914" mi="3" ci="0" mb="0" cb="0"/><line nr="916" mi="3" ci="0" mb="2" cb="0"/><line nr="917" mi="3" ci="0" mb="0" cb="0"/><line nr="919" mi="3" ci="0" mb="0" cb="0"/><line nr="921" mi="3" ci="2" mb="3" cb="1"/><line nr="922" mi="5" ci="5" mb="0" cb="0"/><line nr="923" mi="7" ci="6" mb="0" cb="0"/><line nr="926" mi="0" ci="1" mb="0" cb="0"/><line nr="930" mi="0" ci="6" mb="0" cb="0"/><line nr="931" mi="0" ci="2" mb="0" cb="0"/><line nr="932" mi="0" ci="4" mb="0" cb="0"/><line nr="933" mi="0" ci="5" mb="0" cb="0"/><line nr="935" mi="0" ci="4" mb="0" cb="0"/><line nr="936" mi="0" ci="4" mb="0" cb="0"/><line nr="937" mi="0" ci="4" mb="0" cb="2"/><line nr="939" mi="0" ci="2" mb="0" cb="0"/><line nr="940" mi="0" ci="1" mb="0" cb="0"/><line nr="942" mi="0" ci="6" mb="0" cb="0"/><line nr="945" mi="0" ci="4" mb="0" cb="2"/><line nr="947" mi="0" ci="2" mb="0" cb="0"/><line nr="948" mi="0" ci="1" mb="0" cb="0"/><line nr="950" mi="0" ci="6" mb="0" cb="0"/><line nr="953" mi="1" ci="0" mb="0" cb="0"/><line nr="954" mi="2" ci="0" mb="2" cb="0"/><line nr="955" mi="4" ci="0" mb="0" cb="0"/><line nr="956" mi="3" ci="0" mb="0" cb="0"/><line nr="958" mi="4" ci="0" mb="0" cb="0"/><line nr="960" mi="3" ci="0" mb="2" cb="0"/><line nr="961" mi="3" ci="0" mb="0" cb="0"/><line nr="963" mi="3" ci="0" mb="2" cb="0"/><line nr="964" mi="3" ci="0" mb="0" cb="0"/><line nr="966" mi="3" ci="0" mb="0" cb="0"/><line nr="968" mi="3" ci="2" mb="3" cb="1"/><line nr="969" mi="5" ci="5" mb="0" cb="0"/><line nr="970" mi="7" ci="6" mb="0" cb="0"/><line nr="973" mi="0" ci="1" mb="0" cb="0"/><line nr="977" mi="0" ci="6" mb="0" cb="0"/><line nr="978" mi="0" ci="2" mb="0" cb="0"/><line nr="979" mi="0" ci="4" mb="0" cb="0"/><line nr="980" mi="0" ci="5" mb="0" cb="0"/><line nr="982" mi="0" ci="4" mb="0" cb="0"/><line nr="983" mi="0" ci="2" mb="0" cb="0"/><line nr="984" mi="0" ci="2" mb="0" cb="0"/><line nr="987" mi="0" ci="4" mb="0" cb="2"/><line nr="990" mi="0" ci="1" mb="0" cb="0"/><line nr="992" mi="0" ci="6" mb="0" cb="0"/><line nr="993" mi="0" ci="1" mb="0" cb="0"/><line nr="995" mi="0" ci="4" mb="0" cb="0"/><line nr="996" mi="0" ci="3" mb="0" cb="0"/><line nr="998" mi="0" ci="4" mb="0" cb="0"/><line nr="999" mi="1" ci="0" mb="0" cb="0"/><line nr="1000" mi="2" ci="0" mb="2" cb="0"/><line nr="1001" mi="4" ci="0" mb="0" cb="0"/><line nr="1002" mi="3" ci="0" mb="0" cb="0"/><line nr="1004" mi="4" ci="0" mb="0" cb="0"/><line nr="1006" mi="3" ci="0" mb="2" cb="0"/><line nr="1007" mi="3" ci="0" mb="0" cb="0"/><line nr="1009" mi="3" ci="0" mb="2" cb="0"/><line nr="1010" mi="3" ci="0" mb="0" cb="0"/><line nr="1012" mi="3" ci="0" mb="0" cb="0"/><line nr="1014" mi="3" ci="2" mb="3" cb="1"/><line nr="1015" mi="5" ci="5" mb="0" cb="0"/><line nr="1016" mi="7" ci="6" mb="0" cb="0"/><line nr="1019" mi="0" ci="1" mb="0" cb="0"/><line nr="1023" mi="0" ci="6" mb="0" cb="0"/><line nr="1024" mi="0" ci="2" mb="0" cb="0"/><line nr="1025" mi="0" ci="4" mb="0" cb="0"/><line nr="1026" mi="0" ci="5" mb="0" cb="0"/><line nr="1030" mi="0" ci="4" mb="1" cb="1"/><line nr="1033" mi="1" ci="0" mb="0" cb="0"/><line nr="1035" mi="0" ci="6" mb="0" cb="0"/><line nr="1036" mi="0" ci="1" mb="0" cb="0"/><line nr="1038" mi="2" ci="0" mb="0" cb="0"/><line nr="1039" mi="3" ci="0" mb="0" cb="0"/><line nr="1041" mi="0" ci="4" mb="0" cb="0"/><line nr="1042" mi="0" ci="4" mb="0" cb="0"/><line nr="1043" mi="0" ci="4" mb="0" cb="2"/><line nr="1045" mi="0" ci="2" mb="0" cb="0"/><line nr="1046" mi="0" ci="1" mb="0" cb="0"/><line nr="1048" mi="0" ci="6" mb="0" cb="0"/><line nr="1051" mi="1" ci="0" mb="0" cb="0"/><line nr="1052" mi="2" ci="0" mb="2" cb="0"/><line nr="1053" mi="4" ci="0" mb="0" cb="0"/><line nr="1054" mi="3" ci="0" mb="0" cb="0"/><line nr="1056" mi="4" ci="0" mb="0" cb="0"/><line nr="1058" mi="3" ci="0" mb="2" cb="0"/><line nr="1059" mi="3" ci="0" mb="0" cb="0"/><line nr="1061" mi="3" ci="0" mb="2" cb="0"/><line nr="1062" mi="3" ci="0" mb="0" cb="0"/><line nr="1064" mi="3" ci="0" mb="0" cb="0"/><line nr="1066" mi="3" ci="2" mb="3" cb="1"/><line nr="1067" mi="5" ci="5" mb="0" cb="0"/><line nr="1068" mi="7" ci="6" mb="0" cb="0"/><line nr="1071" mi="0" ci="1" mb="0" cb="0"/><line nr="1075" mi="0" ci="6" mb="0" cb="0"/><line nr="1076" mi="0" ci="2" mb="0" cb="0"/><line nr="1077" mi="0" ci="4" mb="0" cb="0"/><line nr="1078" mi="0" ci="5" mb="0" cb="0"/><line nr="1080" mi="0" ci="4" mb="0" cb="0"/><line nr="1081" mi="0" ci="2" mb="0" cb="0"/><line nr="1084" mi="0" ci="4" mb="1" cb="1"/><line nr="1087" mi="1" ci="0" mb="0" cb="0"/><line nr="1089" mi="0" ci="6" mb="0" cb="0"/><line nr="1090" mi="0" ci="1" mb="0" cb="0"/><line nr="1092" mi="4" ci="0" mb="0" cb="0"/><line nr="1093" mi="3" ci="0" mb="0" cb="0"/><line nr="1095" mi="1" ci="0" mb="0" cb="0"/><line nr="1096" mi="2" ci="0" mb="2" cb="0"/><line nr="1097" mi="4" ci="0" mb="0" cb="0"/><line nr="1098" mi="3" ci="0" mb="0" cb="0"/><line nr="1100" mi="4" ci="0" mb="0" cb="0"/><line nr="1102" mi="3" ci="0" mb="2" cb="0"/><line nr="1103" mi="3" ci="0" mb="0" cb="0"/><line nr="1105" mi="3" ci="0" mb="2" cb="0"/><line nr="1106" mi="3" ci="0" mb="0" cb="0"/><line nr="1108" mi="3" ci="0" mb="0" cb="0"/><line nr="1110" mi="3" ci="2" mb="3" cb="1"/><line nr="1111" mi="5" ci="5" mb="0" cb="0"/><line nr="1112" mi="7" ci="6" mb="0" cb="0"/><line nr="1115" mi="0" ci="1" mb="0" cb="0"/><line nr="1119" mi="0" ci="6" mb="0" cb="0"/><line nr="1120" mi="0" ci="2" mb="0" cb="0"/><line nr="1121" mi="0" ci="4" mb="0" cb="0"/><line nr="1122" mi="0" ci="5" mb="0" cb="0"/><line nr="1124" mi="0" ci="4" mb="0" cb="0"/><line nr="1127" mi="0" ci="4" mb="0" cb="2"/><line nr="1157" mi="0" ci="1" mb="0" cb="0"/><line nr="1159" mi="0" ci="6" mb="0" cb="0"/><line nr="1160" mi="0" ci="1" mb="0" cb="0"/><line nr="1162" mi="0" ci="3" mb="0" cb="0"/><line nr="1164" mi="0" ci="4" mb="0" cb="0"/><line nr="1165" mi="0" ci="1" mb="0" cb="0"/><line nr="1166" mi="0" ci="2" mb="1" cb="1"/><line nr="1167" mi="0" ci="4" mb="0" cb="0"/><line nr="1168" mi="0" ci="3" mb="0" cb="0"/><line nr="1170" mi="4" ci="0" mb="0" cb="0"/><line nr="1172" mi="0" ci="3" mb="1" cb="1"/><line nr="1173" mi="0" ci="3" mb="0" cb="0"/><line nr="1175" mi="3" ci="0" mb="2" cb="0"/><line nr="1176" mi="3" ci="0" mb="0" cb="0"/><line nr="1178" mi="3" ci="0" mb="0" cb="0"/><line nr="1180" mi="0" ci="5" mb="2" cb="2"/><line nr="1181" mi="5" ci="5" mb="0" cb="0"/><line nr="1182" mi="5" ci="8" mb="0" cb="0"/><line nr="1185" mi="0" ci="1" mb="0" cb="0"/><line nr="1189" mi="0" ci="6" mb="0" cb="0"/><line nr="1190" mi="0" ci="2" mb="0" cb="0"/><line nr="1191" mi="0" ci="4" mb="0" cb="0"/><line nr="1192" mi="0" ci="5" mb="0" cb="0"/><line nr="1194" mi="0" ci="4" mb="0" cb="2"/><line nr="1195" mi="0" ci="3" mb="0" cb="0"/><line nr="1197" mi="0" ci="4" mb="1" cb="2"/><line nr="1224" mi="0" ci="3" mb="0" cb="0"/><line nr="1225" mi="0" ci="4" mb="0" cb="2"/><line nr="1226" mi="0" ci="4" mb="0" cb="0"/><line nr="1227" mi="0" ci="4" mb="0" cb="2"/><line nr="1228" mi="0" ci="4" mb="0" cb="0"/><line nr="1229" mi="0" ci="4" mb="0" cb="2"/><line nr="1230" mi="0" ci="4" mb="0" cb="0"/><line nr="1231" mi="0" ci="4" mb="0" cb="2"/><line nr="1232" mi="0" ci="4" mb="0" cb="0"/><line nr="1234" mi="0" ci="4" mb="1" cb="2"/><line nr="1246" mi="0" ci="3" mb="0" cb="0"/><line nr="1247" mi="0" ci="1" mb="0" cb="0"/><line nr="1249" mi="0" ci="3" mb="0" cb="0"/><line nr="1250" mi="0" ci="1" mb="0" cb="0"/><line nr="1252" mi="6" ci="0" mb="0" cb="0"/><line nr="1253" mi="4" ci="0" mb="0" cb="0"/><line nr="1254" mi="4" ci="0" mb="0" cb="0"/><line nr="1259" mi="0" ci="4" mb="0" cb="0"/><line nr="1260" mi="0" ci="1" mb="0" cb="0"/><line nr="1262" mi="6" ci="0" mb="0" cb="0"/><line nr="1263" mi="4" ci="0" mb="0" cb="0"/><line nr="1264" mi="4" ci="0" mb="0" cb="0"/><line nr="1267" mi="0" ci="1" mb="0" cb="0"/><line nr="1268" mi="0" ci="2" mb="1" cb="1"/><line nr="1269" mi="0" ci="4" mb="0" cb="0"/><line nr="1270" mi="0" ci="3" mb="0" cb="0"/><line nr="1272" mi="4" ci="0" mb="0" cb="0"/><line nr="1274" mi="0" ci="3" mb="1" cb="1"/><line nr="1275" mi="0" ci="3" mb="0" cb="0"/><line nr="1277" mi="3" ci="0" mb="2" cb="0"/><line nr="1278" mi="3" ci="0" mb="0" cb="0"/><line nr="1280" mi="3" ci="0" mb="0" cb="0"/><line nr="1282" mi="0" ci="5" mb="2" cb="2"/><line nr="1283" mi="5" ci="5" mb="0" cb="0"/><line nr="1284" mi="5" ci="8" mb="0" cb="0"/><line nr="1287" mi="0" ci="1" mb="0" cb="0"/><line nr="1291" mi="0" ci="6" mb="0" cb="0"/><line nr="1292" mi="0" ci="2" mb="0" cb="0"/><line nr="1293" mi="0" ci="4" mb="0" cb="0"/><line nr="1294" mi="0" ci="8" mb="0" cb="0"/><line nr="1296" mi="0" ci="2" mb="0" cb="0"/><line nr="1297" mi="0" ci="2" mb="0" cb="0"/><line nr="1300" mi="0" ci="4" mb="0" cb="2"/><line nr="1303" mi="0" ci="1" mb="0" cb="0"/><line nr="1305" mi="0" ci="6" mb="0" cb="0"/><line nr="1306" mi="0" ci="1" mb="0" cb="0"/><line nr="1308" mi="0" ci="4" mb="0" cb="0"/><line nr="1309" mi="0" ci="3" mb="0" cb="0"/><line nr="1311" mi="0" ci="4" mb="0" cb="0"/><line nr="1312" mi="0" ci="1" mb="0" cb="0"/><line nr="1313" mi="0" ci="2" mb="1" cb="1"/><line nr="1314" mi="0" ci="4" mb="0" cb="0"/><line nr="1315" mi="0" ci="3" mb="0" cb="0"/><line nr="1317" mi="4" ci="0" mb="0" cb="0"/><line nr="1319" mi="0" ci="3" mb="1" cb="1"/><line nr="1320" mi="0" ci="3" mb="0" cb="0"/><line nr="1322" mi="3" ci="0" mb="2" cb="0"/><line nr="1323" mi="3" ci="0" mb="0" cb="0"/><line nr="1325" mi="3" ci="0" mb="0" cb="0"/><line nr="1327" mi="0" ci="5" mb="2" cb="2"/><line nr="1328" mi="5" ci="5" mb="0" cb="0"/><line nr="1329" mi="5" ci="8" mb="0" cb="0"/><line nr="1332" mi="0" ci="1" mb="0" cb="0"/><line nr="1336" mi="0" ci="6" mb="0" cb="0"/><line nr="1337" mi="0" ci="2" mb="0" cb="0"/><line nr="1338" mi="0" ci="4" mb="0" cb="0"/><line nr="1339" mi="0" ci="5" mb="0" cb="0"/><line nr="1341" mi="0" ci="2" mb="0" cb="0"/><line nr="1342" mi="0" ci="4" mb="0" cb="2"/><line nr="1344" mi="0" ci="4" mb="0" cb="0"/><line nr="1345" mi="0" ci="2" mb="0" cb="0"/><line nr="1346" mi="0" ci="1" mb="0" cb="0"/><line nr="1348" mi="0" ci="6" mb="0" cb="0"/><line nr="1351" mi="0" ci="1" mb="0" cb="0"/><line nr="1352" mi="0" ci="2" mb="1" cb="1"/><line nr="1353" mi="0" ci="4" mb="0" cb="0"/><line nr="1354" mi="0" ci="3" mb="0" cb="0"/><line nr="1356" mi="4" ci="0" mb="0" cb="0"/><line nr="1358" mi="0" ci="3" mb="1" cb="1"/><line nr="1359" mi="0" ci="3" mb="0" cb="0"/><line nr="1361" mi="3" ci="0" mb="2" cb="0"/><line nr="1362" mi="3" ci="0" mb="0" cb="0"/><line nr="1364" mi="3" ci="0" mb="0" cb="0"/><line nr="1366" mi="0" ci="5" mb="2" cb="2"/><line nr="1367" mi="5" ci="5" mb="0" cb="0"/><line nr="1368" mi="5" ci="8" mb="0" cb="0"/><line nr="1371" mi="0" ci="1" mb="0" cb="0"/><line nr="1375" mi="0" ci="6" mb="0" cb="0"/><line nr="1376" mi="0" ci="2" mb="0" cb="0"/><line nr="1377" mi="0" ci="4" mb="0" cb="0"/><line nr="1378" mi="0" ci="5" mb="0" cb="0"/><line nr="1381" mi="0" ci="4" mb="0" cb="2"/><line nr="1382" mi="0" ci="4" mb="0" cb="0"/><line nr="1383" mi="0" ci="4" mb="0" cb="0"/><line nr="1384" mi="0" ci="4" mb="0" cb="0"/><line nr="1385" mi="0" ci="15" mb="0" cb="0"/><line nr="1387" mi="0" ci="4" mb="1" cb="2"/><line nr="1389" mi="0" ci="4" mb="0" cb="0"/><line nr="1390" mi="0" ci="7" mb="0" cb="0"/><line nr="1391" mi="0" ci="1" mb="0" cb="0"/><line nr="1393" mi="0" ci="4" mb="0" cb="0"/><line nr="1394" mi="0" ci="3" mb="0" cb="0"/><line nr="1397" mi="0" ci="4" mb="0" cb="2"/><line nr="1400" mi="0" ci="1" mb="0" cb="0"/><line nr="1402" mi="0" ci="6" mb="0" cb="0"/><line nr="1403" mi="0" ci="1" mb="0" cb="0"/><line nr="1405" mi="0" ci="4" mb="0" cb="0"/><line nr="1406" mi="0" ci="4" mb="0" cb="0"/><line nr="1407" mi="0" ci="3" mb="0" cb="0"/><line nr="1411" mi="6" ci="0" mb="0" cb="0"/><line nr="1412" mi="4" ci="0" mb="0" cb="0"/><line nr="1413" mi="4" ci="0" mb="0" cb="0"/><line nr="1416" mi="0" ci="5" mb="0" cb="0"/><line nr="1417" mi="0" ci="2" mb="0" cb="0"/><line nr="1418" mi="0" ci="5" mb="0" cb="0"/><line nr="1419" mi="0" ci="4" mb="0" cb="0"/><line nr="1420" mi="0" ci="4" mb="0" cb="0"/><line nr="1421" mi="0" ci="3" mb="0" cb="0"/><line nr="1423" mi="0" ci="5" mb="1" cb="3"/><line nr="1424" mi="5" ci="5" mb="0" cb="0"/><line nr="1425" mi="6" ci="7" mb="0" cb="0"/><line nr="1428" mi="0" ci="1" mb="0" cb="0"/><line nr="1432" mi="0" ci="6" mb="0" cb="0"/><line nr="1433" mi="0" ci="2" mb="0" cb="0"/><line nr="1434" mi="0" ci="4" mb="0" cb="0"/><line nr="1435" mi="0" ci="5" mb="0" cb="0"/><line nr="1437" mi="0" ci="4" mb="1" cb="2"/><line nr="1439" mi="0" ci="2" mb="0" cb="0"/><line nr="1440" mi="0" ci="1" mb="0" cb="0"/><line nr="1469" mi="0" ci="2" mb="0" cb="0"/><line nr="1470" mi="0" ci="1" mb="0" cb="0"/><line nr="1472" mi="6" ci="0" mb="0" cb="0"/><line nr="1473" mi="4" ci="0" mb="0" cb="0"/><line nr="1474" mi="4" ci="0" mb="0" cb="0"/><line nr="1476" mi="0" ci="1" mb="0" cb="0"/><line nr="1477" mi="0" ci="2" mb="1" cb="1"/><line nr="1478" mi="0" ci="4" mb="0" cb="0"/><line nr="1479" mi="0" ci="3" mb="0" cb="0"/><line nr="1481" mi="4" ci="0" mb="0" cb="0"/><line nr="1483" mi="0" ci="3" mb="1" cb="1"/><line nr="1484" mi="0" ci="3" mb="0" cb="0"/><line nr="1486" mi="3" ci="0" mb="2" cb="0"/><line nr="1487" mi="3" ci="0" mb="0" cb="0"/><line nr="1489" mi="3" ci="0" mb="0" cb="0"/><line nr="1491" mi="0" ci="5" mb="2" cb="2"/><line nr="1492" mi="5" ci="5" mb="0" cb="0"/><line nr="1493" mi="5" ci="8" mb="0" cb="0"/><line nr="1496" mi="0" ci="1" mb="0" cb="0"/><line nr="1500" mi="0" ci="6" mb="0" cb="0"/><line nr="1501" mi="0" ci="2" mb="0" cb="0"/><line nr="1502" mi="0" ci="4" mb="0" cb="0"/><line nr="1503" mi="0" ci="5" mb="0" cb="0"/><line nr="1505" mi="0" ci="4" mb="0" cb="0"/><line nr="1506" mi="0" ci="4" mb="0" cb="2"/><line nr="1536" mi="0" ci="2" mb="0" cb="0"/><line nr="1539" mi="0" ci="4" mb="0" cb="2"/><line nr="1544" mi="0" ci="4" mb="0" cb="0"/><line nr="1545" mi="0" ci="3" mb="0" cb="0"/><line nr="1549" mi="0" ci="6" mb="0" cb="0"/><line nr="1552" mi="0" ci="4" mb="0" cb="2"/><line nr="1554" mi="0" ci="4" mb="0" cb="0"/><line nr="1555" mi="0" ci="1" mb="0" cb="0"/><line nr="1557" mi="0" ci="6" mb="0" cb="0"/><line nr="1560" mi="0" ci="4" mb="0" cb="0"/><line nr="1561" mi="1" ci="0" mb="0" cb="0"/><line nr="1562" mi="2" ci="0" mb="2" cb="0"/><line nr="1563" mi="4" ci="0" mb="0" cb="0"/><line nr="1564" mi="3" ci="0" mb="0" cb="0"/><line nr="1566" mi="4" ci="0" mb="0" cb="0"/><line nr="1568" mi="3" ci="0" mb="2" cb="0"/><line nr="1569" mi="3" ci="0" mb="0" cb="0"/><line nr="1571" mi="3" ci="0" mb="2" cb="0"/><line nr="1572" mi="3" ci="0" mb="0" cb="0"/><line nr="1574" mi="3" ci="0" mb="0" cb="0"/><line nr="1576" mi="3" ci="2" mb="3" cb="1"/><line nr="1577" mi="5" ci="5" mb="0" cb="0"/><line nr="1578" mi="7" ci="6" mb="0" cb="0"/><line nr="1581" mi="0" ci="1" mb="0" cb="0"/><line nr="1585" mi="0" ci="6" mb="0" cb="0"/><line nr="1586" mi="0" ci="2" mb="0" cb="0"/><line nr="1587" mi="0" ci="4" mb="0" cb="0"/><line nr="1588" mi="0" ci="8" mb="0" cb="0"/><line nr="1590" mi="0" ci="4" mb="0" cb="2"/><line nr="1592" mi="0" ci="2" mb="0" cb="0"/><line nr="1593" mi="0" ci="1" mb="0" cb="0"/><line nr="1595" mi="0" ci="6" mb="0" cb="0"/><line nr="1598" mi="0" ci="2" mb="0" cb="0"/><line nr="1599" mi="0" ci="2" mb="0" cb="0"/><line nr="1600" mi="0" ci="4" mb="0" cb="2"/><line nr="1602" mi="0" ci="4" mb="0" cb="0"/><line nr="1603" mi="0" ci="2" mb="0" cb="0"/><line nr="1604" mi="0" ci="1" mb="0" cb="0"/><line nr="1606" mi="0" ci="6" mb="0" cb="0"/><line nr="1609" mi="0" ci="4" mb="1" cb="2"/><line nr="1611" mi="0" ci="2" mb="0" cb="0"/><line nr="1612" mi="0" ci="1" mb="0" cb="0"/><line nr="1614" mi="0" ci="4" mb="0" cb="0"/><line nr="1615" mi="0" ci="1" mb="0" cb="0"/><line nr="1617" mi="6" ci="0" mb="0" cb="0"/><line nr="1618" mi="4" ci="0" mb="0" cb="0"/><line nr="1619" mi="4" ci="0" mb="0" cb="0"/><line nr="1621" mi="0" ci="1" mb="0" cb="0"/><line nr="1622" mi="0" ci="2" mb="1" cb="1"/><line nr="1623" mi="0" ci="4" mb="0" cb="0"/><line nr="1624" mi="0" ci="3" mb="0" cb="0"/><line nr="1626" mi="4" ci="0" mb="0" cb="0"/><line nr="1628" mi="0" ci="3" mb="1" cb="1"/><line nr="1629" mi="0" ci="3" mb="0" cb="0"/><line nr="1631" mi="3" ci="0" mb="2" cb="0"/><line nr="1632" mi="3" ci="0" mb="0" cb="0"/><line nr="1634" mi="3" ci="0" mb="0" cb="0"/><line nr="1636" mi="0" ci="5" mb="2" cb="2"/><line nr="1637" mi="5" ci="5" mb="0" cb="0"/><line nr="1638" mi="5" ci="8" mb="0" cb="0"/><line nr="1641" mi="0" ci="1" mb="0" cb="0"/><line nr="1645" mi="0" ci="6" mb="0" cb="0"/><line nr="1646" mi="0" ci="2" mb="0" cb="0"/><line nr="1647" mi="0" ci="4" mb="0" cb="0"/><line nr="1648" mi="0" ci="5" mb="0" cb="0"/><line nr="1650" mi="0" ci="4" mb="0" cb="0"/><line nr="1651" mi="0" ci="5" mb="0" cb="0"/><line nr="1652" mi="0" ci="5" mb="0" cb="0"/><line nr="1653" mi="0" ci="4" mb="0" cb="0"/><line nr="1654" mi="0" ci="2" mb="0" cb="0"/><line nr="1657" mi="0" ci="4" mb="1" cb="1"/><line nr="1660" mi="1" ci="0" mb="0" cb="0"/><line nr="1662" mi="0" ci="6" mb="0" cb="0"/><line nr="1663" mi="0" ci="1" mb="0" cb="0"/><line nr="1665" mi="4" ci="0" mb="0" cb="0"/><line nr="1666" mi="5" ci="0" mb="0" cb="0"/><line nr="1668" mi="0" ci="1" mb="0" cb="0"/><line nr="1669" mi="0" ci="2" mb="1" cb="1"/><line nr="1670" mi="0" ci="4" mb="0" cb="0"/><line nr="1671" mi="0" ci="3" mb="0" cb="0"/><line nr="1673" mi="4" ci="0" mb="0" cb="0"/><line nr="1675" mi="0" ci="3" mb="1" cb="1"/><line nr="1676" mi="0" ci="3" mb="0" cb="0"/><line nr="1678" mi="3" ci="0" mb="2" cb="0"/><line nr="1679" mi="3" ci="0" mb="0" cb="0"/><line nr="1681" mi="3" ci="0" mb="0" cb="0"/><line nr="1683" mi="0" ci="5" mb="2" cb="2"/><line nr="1684" mi="5" ci="5" mb="0" cb="0"/><line nr="1685" mi="5" ci="8" mb="0" cb="0"/><line nr="1688" mi="0" ci="1" mb="0" cb="0"/><line nr="1692" mi="0" ci="6" mb="0" cb="0"/><line nr="1693" mi="0" ci="2" mb="0" cb="0"/><line nr="1694" mi="0" ci="4" mb="0" cb="0"/><line nr="1695" mi="0" ci="5" mb="0" cb="0"/><line nr="1697" mi="0" ci="4" mb="0" cb="0"/><line nr="1698" mi="0" ci="4" mb="0" cb="2"/><line nr="1710" mi="0" ci="2" mb="0" cb="0"/><line nr="1713" mi="0" ci="4" mb="0" cb="2"/><line nr="1716" mi="0" ci="1" mb="0" cb="0"/><line nr="1718" mi="0" ci="6" mb="0" cb="0"/><line nr="1719" mi="0" ci="1" mb="0" cb="0"/><line nr="1721" mi="0" ci="4" mb="0" cb="0"/><line nr="1722" mi="0" ci="3" mb="0" cb="0"/><line nr="1726" mi="0" ci="6" mb="0" cb="0"/><line nr="1729" mi="0" ci="4" mb="0" cb="0"/><line nr="1730" mi="0" ci="1" mb="0" cb="0"/><line nr="1731" mi="0" ci="2" mb="1" cb="1"/><line nr="1732" mi="0" ci="4" mb="0" cb="0"/><line nr="1733" mi="0" ci="3" mb="0" cb="0"/><line nr="1735" mi="4" ci="0" mb="0" cb="0"/><line nr="1737" mi="0" ci="3" mb="1" cb="1"/><line nr="1738" mi="0" ci="3" mb="0" cb="0"/><line nr="1740" mi="3" ci="0" mb="2" cb="0"/><line nr="1741" mi="3" ci="0" mb="0" cb="0"/><line nr="1743" mi="3" ci="0" mb="0" cb="0"/><line nr="1745" mi="0" ci="5" mb="2" cb="2"/><line nr="1746" mi="5" ci="5" mb="0" cb="0"/><line nr="1747" mi="5" ci="8" mb="0" cb="0"/><line nr="1750" mi="0" ci="1" mb="0" cb="0"/><line nr="1754" mi="0" ci="6" mb="0" cb="0"/><line nr="1755" mi="0" ci="2" mb="0" cb="0"/><line nr="1756" mi="0" ci="4" mb="0" cb="0"/><line nr="1757" mi="0" ci="5" mb="0" cb="0"/><line nr="1761" mi="0" ci="4" mb="0" cb="2"/><line nr="1765" mi="0" ci="1" mb="0" cb="0"/><line nr="1767" mi="0" ci="6" mb="0" cb="0"/><line nr="1768" mi="0" ci="1" mb="0" cb="0"/><line nr="1770" mi="0" ci="4" mb="1" cb="2"/><line nr="1772" mi="0" ci="4" mb="0" cb="0"/><line nr="1773" mi="0" ci="3" mb="0" cb="0"/><line nr="1774" mi="0" ci="1" mb="0" cb="0"/><line nr="1776" mi="0" ci="2" mb="0" cb="0"/><line nr="1777" mi="0" ci="1" mb="0" cb="0"/><line nr="1779" mi="6" ci="0" mb="0" cb="0"/><line nr="1780" mi="4" ci="0" mb="0" cb="0"/><line nr="1781" mi="4" ci="0" mb="0" cb="0"/><line nr="1784" mi="0" ci="2" mb="0" cb="0"/><line nr="1787" mi="0" ci="4" mb="0" cb="2"/><line nr="1790" mi="0" ci="1" mb="0" cb="0"/><line nr="1792" mi="0" ci="6" mb="0" cb="0"/><line nr="1793" mi="0" ci="1" mb="0" cb="0"/><line nr="1795" mi="0" ci="4" mb="0" cb="0"/><line nr="1796" mi="0" ci="2" mb="0" cb="0"/><line nr="1797" mi="0" ci="3" mb="0" cb="0"/><line nr="1799" mi="0" ci="4" mb="0" cb="2"/><line nr="1801" mi="0" ci="4" mb="0" cb="0"/><line nr="1802" mi="0" ci="2" mb="0" cb="0"/><line nr="1803" mi="0" ci="2" mb="0" cb="0"/><line nr="1804" mi="0" ci="1" mb="0" cb="0"/><line nr="1806" mi="0" ci="6" mb="0" cb="0"/><line nr="1809" mi="0" ci="2" mb="0" cb="0"/><line nr="1810" mi="0" ci="1" mb="0" cb="0"/><line nr="1811" mi="0" ci="2" mb="1" cb="1"/><line nr="1812" mi="0" ci="4" mb="0" cb="0"/><line nr="1813" mi="0" ci="3" mb="0" cb="0"/><line nr="1815" mi="4" ci="0" mb="0" cb="0"/><line nr="1817" mi="0" ci="3" mb="1" cb="1"/><line nr="1818" mi="0" ci="3" mb="0" cb="0"/><line nr="1820" mi="3" ci="0" mb="2" cb="0"/><line nr="1821" mi="3" ci="0" mb="0" cb="0"/><line nr="1823" mi="3" ci="0" mb="0" cb="0"/><line nr="1825" mi="0" ci="5" mb="2" cb="2"/><line nr="1826" mi="5" ci="5" mb="0" cb="0"/><line nr="1827" mi="5" ci="8" mb="0" cb="0"/><line nr="1830" mi="0" ci="1" mb="0" cb="0"/><line nr="1834" mi="0" ci="6" mb="0" cb="0"/><line nr="1835" mi="0" ci="2" mb="0" cb="0"/><line nr="1836" mi="0" ci="4" mb="0" cb="0"/><line nr="1837" mi="0" ci="8" mb="0" cb="0"/><line nr="1840" mi="0" ci="4" mb="0" cb="2"/><line nr="1842" mi="0" ci="2" mb="0" cb="0"/><line nr="1843" mi="0" ci="1" mb="0" cb="0"/><line nr="1845" mi="0" ci="6" mb="0" cb="0"/><line nr="1848" mi="0" ci="4" mb="0" cb="0"/><line nr="1849" mi="0" ci="2" mb="0" cb="0"/><line nr="1850" mi="0" ci="4" mb="0" cb="2"/><line nr="1852" mi="0" ci="4" mb="0" cb="0"/><line nr="1853" mi="0" ci="2" mb="0" cb="0"/><line nr="1854" mi="0" ci="1" mb="0" cb="0"/><line nr="1856" mi="0" ci="6" mb="0" cb="0"/><line nr="1859" mi="0" ci="4" mb="0" cb="0"/><line nr="1860" mi="0" ci="4" mb="0" cb="2"/><line nr="1861" mi="0" ci="2" mb="0" cb="0"/><line nr="1867" mi="0" ci="4" mb="0" cb="2"/><line nr="1872" mi="0" ci="3" mb="0" cb="0"/><line nr="1874" mi="0" ci="4" mb="0" cb="0"/><line nr="1875" mi="0" ci="5" mb="0" cb="0"/><line nr="1876" mi="0" ci="2" mb="0" cb="0"/><line nr="1877" mi="0" ci="5" mb="0" cb="0"/><line nr="1878" mi="0" ci="6" mb="0" cb="2"/><line nr="1879" mi="0" ci="1" mb="0" cb="0"/><line nr="1880" mi="0" ci="2" mb="1" cb="1"/><line nr="1881" mi="0" ci="4" mb="0" cb="0"/><line nr="1882" mi="0" ci="3" mb="0" cb="0"/><line nr="1884" mi="4" ci="0" mb="0" cb="0"/><line nr="1886" mi="0" ci="3" mb="1" cb="1"/><line nr="1887" mi="0" ci="3" mb="0" cb="0"/><line nr="1889" mi="3" ci="0" mb="2" cb="0"/><line nr="1890" mi="3" ci="0" mb="0" cb="0"/><line nr="1892" mi="3" ci="0" mb="0" cb="0"/><line nr="1894" mi="0" ci="5" mb="2" cb="2"/><line nr="1895" mi="10" ci="0" mb="0" cb="0"/><line nr="1896" mi="11" ci="2" mb="0" cb="0"/><line nr="1899" mi="0" ci="1" mb="0" cb="0"/><line nr="1903" mi="0" ci="6" mb="0" cb="0"/><line nr="1904" mi="0" ci="2" mb="0" cb="0"/><line nr="1905" mi="0" ci="4" mb="0" cb="0"/><line nr="1906" mi="0" ci="5" mb="0" cb="0"/><line nr="1908" mi="0" ci="4" mb="0" cb="2"/><line nr="1909" mi="0" ci="4" mb="0" cb="0"/><line nr="1910" mi="0" ci="2" mb="0" cb="0"/><line nr="1911" mi="0" ci="2" mb="0" cb="0"/><line nr="1912" mi="0" ci="5" mb="0" cb="0"/><line nr="1913" mi="0" ci="4" mb="0" cb="2"/><line nr="1914" mi="0" ci="2" mb="0" cb="0"/><line nr="1915" mi="0" ci="4" mb="0" cb="0"/><line nr="1916" mi="0" ci="2" mb="0" cb="0"/><line nr="1917" mi="0" ci="2" mb="0" cb="0"/><line nr="1918" mi="0" ci="5" mb="0" cb="0"/><line nr="1920" mi="0" ci="4" mb="1" cb="1"/><line nr="1944" mi="0" ci="4" mb="1" cb="1"/><line nr="1945" mi="2" ci="0" mb="0" cb="0"/><line nr="1946" mi="4" ci="0" mb="0" cb="0"/><line nr="1950" mi="0" ci="4" mb="0" cb="2"/><line nr="1952" mi="0" ci="2" mb="0" cb="0"/><line nr="1953" mi="0" ci="1" mb="0" cb="0"/><line nr="1955" mi="0" ci="6" mb="0" cb="0"/><line nr="1958" mi="0" ci="4" mb="0" cb="0"/><line nr="1959" mi="0" ci="2" mb="0" cb="0"/><line nr="1960" mi="0" ci="2" mb="0" cb="0"/><line nr="1961" mi="0" ci="4" mb="0" cb="0"/><line nr="1962" mi="0" ci="1" mb="0" cb="0"/><line nr="1964" mi="6" ci="0" mb="0" cb="0"/><line nr="1965" mi="4" ci="0" mb="0" cb="0"/><line nr="1966" mi="4" ci="0" mb="0" cb="0"/><line nr="1969" mi="1" ci="0" mb="0" cb="0"/><line nr="1970" mi="2" ci="0" mb="2" cb="0"/><line nr="1971" mi="4" ci="0" mb="0" cb="0"/><line nr="1972" mi="3" ci="0" mb="0" cb="0"/><line nr="1974" mi="4" ci="0" mb="0" cb="0"/><line nr="1976" mi="3" ci="0" mb="2" cb="0"/><line nr="1977" mi="3" ci="0" mb="0" cb="0"/><line nr="1979" mi="3" ci="0" mb="2" cb="0"/><line nr="1980" mi="3" ci="0" mb="0" cb="0"/><line nr="1982" mi="3" ci="0" mb="0" cb="0"/><line nr="1984" mi="3" ci="2" mb="3" cb="1"/><line nr="1985" mi="5" ci="5" mb="0" cb="0"/><line nr="1986" mi="7" ci="6" mb="0" cb="0"/><line nr="1989" mi="0" ci="1" mb="0" cb="0"/><line nr="1993" mi="0" ci="6" mb="0" cb="0"/><line nr="1994" mi="0" ci="2" mb="0" cb="0"/><line nr="1995" mi="0" ci="4" mb="0" cb="0"/><line nr="1996" mi="0" ci="5" mb="0" cb="0"/><line nr="1998" mi="0" ci="4" mb="0" cb="2"/><line nr="2000" mi="0" ci="4" mb="0" cb="0"/><line nr="2001" mi="0" ci="2" mb="0" cb="0"/><line nr="2002" mi="0" ci="1" mb="0" cb="0"/><line nr="2004" mi="0" ci="6" mb="0" cb="0"/><line nr="2007" mi="0" ci="2" mb="0" cb="0"/><line nr="2008" mi="0" ci="1" mb="0" cb="0"/><line nr="2009" mi="0" ci="2" mb="1" cb="1"/><line nr="2010" mi="0" ci="4" mb="0" cb="0"/><line nr="2011" mi="0" ci="3" mb="0" cb="0"/><line nr="2013" mi="4" ci="0" mb="0" cb="0"/><line nr="2015" mi="0" ci="3" mb="1" cb="1"/><line nr="2016" mi="0" ci="3" mb="0" cb="0"/><line nr="2018" mi="3" ci="0" mb="2" cb="0"/><line nr="2019" mi="3" ci="0" mb="0" cb="0"/><line nr="2021" mi="3" ci="0" mb="0" cb="0"/><line nr="2023" mi="0" ci="5" mb="2" cb="2"/><line nr="2024" mi="5" ci="5" mb="0" cb="0"/><line nr="2025" mi="5" ci="8" mb="0" cb="0"/><line nr="2028" mi="0" ci="1" mb="0" cb="0"/><line nr="2035" mi="0" ci="6" mb="0" cb="0"/><line nr="2036" mi="0" ci="2" mb="0" cb="0"/><line nr="2037" mi="0" ci="4" mb="0" cb="0"/><line nr="2038" mi="0" ci="5" mb="0" cb="0"/><line nr="2040" mi="0" ci="4" mb="0" cb="2"/><line nr="2041" mi="0" ci="3" mb="0" cb="0"/><line nr="2043" mi="0" ci="4" mb="1" cb="1"/><line nr="2052" mi="0" ci="2" mb="0" cb="0"/><line nr="2053" mi="0" ci="1" mb="0" cb="0"/><line nr="2055" mi="6" ci="0" mb="0" cb="0"/><line nr="2056" mi="4" ci="0" mb="0" cb="0"/><line nr="2057" mi="4" ci="0" mb="0" cb="0"/><line nr="2060" mi="1" ci="0" mb="0" cb="0"/><line nr="2061" mi="2" ci="0" mb="2" cb="0"/><line nr="2062" mi="4" ci="0" mb="0" cb="0"/><line nr="2063" mi="3" ci="0" mb="0" cb="0"/><line nr="2065" mi="4" ci="0" mb="0" cb="0"/><line nr="2067" mi="3" ci="0" mb="2" cb="0"/><line nr="2068" mi="3" ci="0" mb="0" cb="0"/><line nr="2070" mi="3" ci="0" mb="2" cb="0"/><line nr="2071" mi="3" ci="0" mb="0" cb="0"/><line nr="2073" mi="3" ci="0" mb="0" cb="0"/><line nr="2075" mi="3" ci="2" mb="3" cb="1"/><line nr="2076" mi="5" ci="5" mb="0" cb="0"/><line nr="2077" mi="7" ci="6" mb="0" cb="0"/><line nr="2080" mi="0" ci="1" mb="0" cb="0"/><line nr="2084" mi="0" ci="6" mb="0" cb="0"/><line nr="2085" mi="0" ci="2" mb="0" cb="0"/><line nr="2086" mi="0" ci="4" mb="0" cb="0"/><line nr="2087" mi="0" ci="5" mb="0" cb="0"/><line nr="2089" mi="0" ci="4" mb="1" cb="2"/><line nr="2098" mi="0" ci="2" mb="0" cb="0"/><line nr="2101" mi="0" ci="4" mb="0" cb="0"/><line nr="2102" mi="0" ci="4" mb="0" cb="0"/><line nr="2103" mi="0" ci="2" mb="0" cb="0"/><line nr="2104" mi="0" ci="5" mb="0" cb="2"/><line nr="2112" mi="0" ci="2" mb="0" cb="0"/><line nr="2115" mi="0" ci="4" mb="0" cb="2"/><line nr="2120" mi="0" ci="4" mb="0" cb="0"/><line nr="2121" mi="0" ci="4" mb="0" cb="0"/><line nr="2122" mi="0" ci="3" mb="0" cb="0"/><line nr="2126" mi="6" ci="0" mb="0" cb="0"/><line nr="2127" mi="4" ci="0" mb="0" cb="0"/><line nr="2128" mi="4" ci="0" mb="0" cb="0"/><line nr="2130" mi="1" ci="0" mb="0" cb="0"/><line nr="2131" mi="2" ci="0" mb="2" cb="0"/><line nr="2132" mi="4" ci="0" mb="0" cb="0"/><line nr="2133" mi="3" ci="0" mb="0" cb="0"/><line nr="2135" mi="4" ci="0" mb="0" cb="0"/><line nr="2137" mi="3" ci="0" mb="2" cb="0"/><line nr="2138" mi="3" ci="0" mb="0" cb="0"/><line nr="2140" mi="3" ci="0" mb="2" cb="0"/><line nr="2141" mi="3" ci="0" mb="0" cb="0"/><line nr="2143" mi="3" ci="0" mb="0" cb="0"/><line nr="2145" mi="3" ci="2" mb="3" cb="1"/><line nr="2146" mi="5" ci="5" mb="0" cb="0"/><line nr="2147" mi="7" ci="6" mb="0" cb="0"/><line nr="2150" mi="0" ci="1" mb="0" cb="0"/><line nr="2154" mi="0" ci="6" mb="0" cb="0"/><line nr="2155" mi="0" ci="2" mb="0" cb="0"/><line nr="2156" mi="0" ci="4" mb="0" cb="0"/><line nr="2157" mi="0" ci="9" mb="0" cb="0"/><line nr="2160" mi="0" ci="4" mb="0" cb="0"/><line nr="2161" mi="0" ci="5" mb="0" cb="0"/><line nr="2162" mi="0" ci="4" mb="0" cb="2"/><line nr="2163" mi="0" ci="2" mb="0" cb="0"/><line nr="2169" mi="0" ci="4" mb="0" cb="2"/><line nr="2174" mi="0" ci="4" mb="0" cb="0"/><line nr="2175" mi="0" ci="4" mb="0" cb="0"/><line nr="2176" mi="0" ci="7" mb="0" cb="0"/><line nr="2177" mi="0" ci="4" mb="0" cb="2"/><line nr="2178" mi="0" ci="3" mb="0" cb="0"/><line nr="2183" mi="0" ci="5" mb="0" cb="0"/><line nr="2184" mi="0" ci="2" mb="0" cb="0"/><line nr="2185" mi="0" ci="5" mb="0" cb="0"/><line nr="2186" mi="0" ci="4" mb="0" cb="0"/><line nr="2187" mi="0" ci="1" mb="0" cb="0"/><line nr="2188" mi="0" ci="2" mb="1" cb="1"/><line nr="2189" mi="0" ci="4" mb="0" cb="0"/><line nr="2190" mi="0" ci="3" mb="0" cb="0"/><line nr="2192" mi="4" ci="0" mb="0" cb="0"/><line nr="2194" mi="0" ci="3" mb="1" cb="1"/><line nr="2195" mi="0" ci="3" mb="0" cb="0"/><line nr="2197" mi="3" ci="0" mb="2" cb="0"/><line nr="2198" mi="3" ci="0" mb="0" cb="0"/><line nr="2200" mi="3" ci="0" mb="0" cb="0"/><line nr="2202" mi="0" ci="5" mb="2" cb="2"/><line nr="2203" mi="10" ci="0" mb="0" cb="0"/><line nr="2204" mi="11" ci="2" mb="0" cb="0"/><line nr="2207" mi="0" ci="1" mb="0" cb="0"/><line nr="2211" mi="0" ci="6" mb="0" cb="0"/><line nr="2212" mi="0" ci="2" mb="0" cb="0"/><line nr="2213" mi="0" ci="4" mb="0" cb="0"/><line nr="2214" mi="0" ci="5" mb="0" cb="0"/><line nr="2216" mi="0" ci="4" mb="0" cb="2"/><line nr="2217" mi="0" ci="4" mb="0" cb="0"/><line nr="2218" mi="0" ci="2" mb="0" cb="0"/><line nr="2219" mi="0" ci="2" mb="0" cb="0"/><line nr="2222" mi="0" ci="4" mb="0" cb="2"/><line nr="2225" mi="0" ci="1" mb="0" cb="0"/><line nr="2227" mi="0" ci="6" mb="0" cb="0"/><line nr="2228" mi="0" ci="1" mb="0" cb="0"/><line nr="2230" mi="0" ci="4" mb="0" cb="0"/><line nr="2231" mi="0" ci="3" mb="0" cb="0"/><line nr="2233" mi="0" ci="5" mb="0" cb="0"/><line nr="2235" mi="0" ci="4" mb="1" cb="1"/><line nr="2237" mi="0" ci="4" mb="0" cb="0"/><line nr="2238" mi="0" ci="2" mb="0" cb="0"/><line nr="2239" mi="0" ci="4" mb="0" cb="0"/><line nr="2240" mi="0" ci="1" mb="0" cb="0"/><line nr="2242" mi="6" ci="0" mb="0" cb="0"/><line nr="2243" mi="4" ci="0" mb="0" cb="0"/><line nr="2244" mi="4" ci="0" mb="0" cb="0"/><line nr="2247" mi="0" ci="1" mb="0" cb="0"/><line nr="2248" mi="0" ci="2" mb="1" cb="1"/><line nr="2249" mi="0" ci="4" mb="0" cb="0"/><line nr="2250" mi="0" ci="3" mb="0" cb="0"/><line nr="2252" mi="4" ci="0" mb="0" cb="0"/><line nr="2254" mi="0" ci="3" mb="1" cb="1"/><line nr="2255" mi="0" ci="3" mb="0" cb="0"/><line nr="2257" mi="3" ci="0" mb="2" cb="0"/><line nr="2258" mi="3" ci="0" mb="0" cb="0"/><line nr="2260" mi="3" ci="0" mb="0" cb="0"/><line nr="2262" mi="0" ci="5" mb="2" cb="2"/><line nr="2263" mi="5" ci="5" mb="0" cb="0"/><line nr="2264" mi="5" ci="8" mb="0" cb="0"/><line nr="2267" mi="0" ci="1" mb="0" cb="0"/><line nr="2271" mi="0" ci="6" mb="0" cb="0"/><line nr="2272" mi="0" ci="2" mb="0" cb="0"/><line nr="2273" mi="0" ci="4" mb="0" cb="0"/><line nr="2274" mi="0" ci="5" mb="0" cb="0"/><line nr="2276" mi="0" ci="4" mb="1" cb="2"/><line nr="2289" mi="0" ci="4" mb="0" cb="2"/><line nr="2292" mi="0" ci="1" mb="0" cb="0"/><line nr="2294" mi="0" ci="6" mb="0" cb="0"/><line nr="2295" mi="0" ci="1" mb="0" cb="0"/><line nr="2297" mi="0" ci="2" mb="0" cb="0"/><line nr="2298" mi="0" ci="3" mb="0" cb="0"/><line nr="2300" mi="0" ci="2" mb="0" cb="0"/><line nr="2301" mi="0" ci="1" mb="0" cb="0"/><line nr="2303" mi="0" ci="4" mb="0" cb="0"/><line nr="2304" mi="0" ci="4" mb="0" cb="2"/><line nr="2307" mi="0" ci="2" mb="0" cb="0"/><line nr="2308" mi="0" ci="1" mb="0" cb="0"/><line nr="2310" mi="0" ci="6" mb="0" cb="0"/><line nr="2313" mi="0" ci="1" mb="0" cb="0"/><line nr="2315" mi="6" ci="0" mb="0" cb="0"/><line nr="2316" mi="4" ci="0" mb="0" cb="0"/><line nr="2317" mi="4" ci="0" mb="0" cb="0"/><line nr="2319" mi="1" ci="0" mb="0" cb="0"/><line nr="2320" mi="2" ci="0" mb="2" cb="0"/><line nr="2321" mi="4" ci="0" mb="0" cb="0"/><line nr="2322" mi="3" ci="0" mb="0" cb="0"/><line nr="2324" mi="4" ci="0" mb="0" cb="0"/><line nr="2326" mi="3" ci="0" mb="2" cb="0"/><line nr="2327" mi="3" ci="0" mb="0" cb="0"/><line nr="2329" mi="3" ci="0" mb="2" cb="0"/><line nr="2330" mi="3" ci="0" mb="0" cb="0"/><line nr="2332" mi="3" ci="0" mb="0" cb="0"/><line nr="2334" mi="3" ci="2" mb="3" cb="1"/><line nr="2335" mi="5" ci="5" mb="0" cb="0"/><line nr="2336" mi="7" ci="6" mb="0" cb="0"/><line nr="2339" mi="0" ci="1" mb="0" cb="0"/><line nr="2343" mi="0" ci="6" mb="0" cb="0"/><line nr="2344" mi="0" ci="2" mb="0" cb="0"/><line nr="2345" mi="0" ci="4" mb="0" cb="0"/><line nr="2346" mi="0" ci="5" mb="0" cb="0"/><line nr="2348" mi="0" ci="4" mb="1" cb="2"/><line nr="2350" mi="0" ci="4" mb="0" cb="0"/><line nr="2353" mi="0" ci="4" mb="1" cb="1"/><line nr="2356" mi="1" ci="0" mb="0" cb="0"/><line nr="2358" mi="0" ci="6" mb="0" cb="0"/><line nr="2359" mi="0" ci="1" mb="0" cb="0"/><line nr="2361" mi="2" ci="0" mb="0" cb="0"/><line nr="2362" mi="3" ci="0" mb="0" cb="0"/><line nr="2364" mi="0" ci="2" mb="0" cb="0"/><line nr="2365" mi="0" ci="1" mb="0" cb="0"/><line nr="2367" mi="0" ci="4" mb="0" cb="0"/><line nr="2370" mi="0" ci="4" mb="1" cb="1"/><line nr="2373" mi="1" ci="0" mb="0" cb="0"/><line nr="2375" mi="0" ci="6" mb="0" cb="0"/><line nr="2376" mi="0" ci="1" mb="0" cb="0"/><line nr="2378" mi="2" ci="0" mb="0" cb="0"/><line nr="2379" mi="3" ci="0" mb="0" cb="0"/><line nr="2381" mi="0" ci="2" mb="0" cb="0"/><line nr="2382" mi="0" ci="1" mb="0" cb="0"/><line nr="2384" mi="6" ci="0" mb="0" cb="0"/><line nr="2385" mi="4" ci="0" mb="0" cb="0"/><line nr="2386" mi="4" ci="0" mb="0" cb="0"/><line nr="2388" mi="1" ci="0" mb="0" cb="0"/><line nr="2389" mi="2" ci="0" mb="2" cb="0"/><line nr="2390" mi="4" ci="0" mb="0" cb="0"/><line nr="2391" mi="3" ci="0" mb="0" cb="0"/><line nr="2393" mi="4" ci="0" mb="0" cb="0"/><line nr="2395" mi="3" ci="0" mb="2" cb="0"/><line nr="2396" mi="3" ci="0" mb="0" cb="0"/><line nr="2398" mi="3" ci="0" mb="2" cb="0"/><line nr="2399" mi="3" ci="0" mb="0" cb="0"/><line nr="2401" mi="3" ci="0" mb="0" cb="0"/><line nr="2403" mi="3" ci="2" mb="3" cb="1"/><line nr="2404" mi="5" ci="5" mb="0" cb="0"/><line nr="2405" mi="7" ci="6" mb="0" cb="0"/><line nr="2408" mi="0" ci="1" mb="0" cb="0"/><line nr="2412" mi="0" ci="6" mb="0" cb="0"/><line nr="2413" mi="0" ci="2" mb="0" cb="0"/><line nr="2414" mi="0" ci="4" mb="0" cb="0"/><line nr="2415" mi="0" ci="5" mb="0" cb="0"/><line nr="2417" mi="0" ci="4" mb="1" cb="8"/><line nr="2419" mi="0" ci="4" mb="0" cb="0"/><line nr="2420" mi="0" ci="5" mb="0" cb="0"/><line nr="2421" mi="0" ci="2" mb="0" cb="0"/><line nr="2422" mi="0" ci="5" mb="0" cb="0"/><line nr="2423" mi="0" ci="3" mb="0" cb="0"/><line nr="2424" mi="0" ci="1" mb="0" cb="0"/><line nr="2426" mi="0" ci="4" mb="0" cb="0"/><line nr="2427" mi="0" ci="5" mb="0" cb="0"/><line nr="2428" mi="0" ci="2" mb="0" cb="0"/><line nr="2429" mi="0" ci="5" mb="0" cb="0"/><line nr="2430" mi="0" ci="3" mb="0" cb="0"/><line nr="2431" mi="0" ci="1" mb="0" cb="0"/><line nr="2433" mi="0" ci="4" mb="0" cb="0"/><line nr="2434" mi="0" ci="5" mb="0" cb="0"/><line nr="2435" mi="0" ci="2" mb="0" cb="0"/><line nr="2436" mi="0" ci="5" mb="0" cb="0"/><line nr="2437" mi="0" ci="3" mb="0" cb="0"/><line nr="2438" mi="0" ci="1" mb="0" cb="0"/><line nr="2440" mi="0" ci="4" mb="0" cb="0"/><line nr="2441" mi="0" ci="5" mb="0" cb="0"/><line nr="2442" mi="0" ci="2" mb="0" cb="0"/><line nr="2443" mi="0" ci="5" mb="0" cb="0"/><line nr="2444" mi="0" ci="3" mb="0" cb="0"/><line nr="2445" mi="0" ci="1" mb="0" cb="0"/><line nr="2447" mi="0" ci="4" mb="0" cb="0"/><line nr="2448" mi="0" ci="5" mb="0" cb="0"/><line nr="2449" mi="0" ci="2" mb="0" cb="0"/><line nr="2450" mi="0" ci="5" mb="0" cb="0"/><line nr="2451" mi="0" ci="3" mb="0" cb="0"/><line nr="2452" mi="0" ci="1" mb="0" cb="0"/><line nr="2454" mi="0" ci="4" mb="0" cb="0"/><line nr="2455" mi="0" ci="5" mb="0" cb="0"/><line nr="2456" mi="0" ci="2" mb="0" cb="0"/><line nr="2457" mi="0" ci="5" mb="0" cb="0"/><line nr="2458" mi="0" ci="3" mb="0" cb="0"/><line nr="2459" mi="0" ci="1" mb="0" cb="0"/><line nr="2461" mi="0" ci="4" mb="0" cb="0"/><line nr="2462" mi="0" ci="5" mb="0" cb="0"/><line nr="2463" mi="0" ci="2" mb="0" cb="0"/><line nr="2464" mi="0" ci="5" mb="0" cb="0"/><line nr="2465" mi="0" ci="3" mb="0" cb="0"/><line nr="2466" mi="0" ci="1" mb="0" cb="0"/><line nr="2468" mi="0" ci="4" mb="0" cb="0"/><line nr="2469" mi="0" ci="5" mb="0" cb="0"/><line nr="2470" mi="0" ci="2" mb="0" cb="0"/><line nr="2471" mi="0" ci="5" mb="0" cb="0"/><line nr="2472" mi="0" ci="3" mb="0" cb="0"/><line nr="2473" mi="0" ci="1" mb="0" cb="0"/><line nr="2475" mi="6" ci="0" mb="0" cb="0"/><line nr="2476" mi="4" ci="0" mb="0" cb="0"/><line nr="2477" mi="4" ci="0" mb="0" cb="0"/><line nr="2480" mi="3" ci="2" mb="3" cb="1"/><line nr="2481" mi="10" ci="0" mb="0" cb="0"/><line nr="2482" mi="13" ci="0" mb="0" cb="0"/><line nr="2485" mi="0" ci="1" mb="0" cb="0"/><line nr="2489" mi="0" ci="6" mb="0" cb="0"/><line nr="2490" mi="0" ci="2" mb="0" cb="0"/><line nr="2491" mi="0" ci="4" mb="0" cb="0"/><line nr="2492" mi="0" ci="5" mb="0" cb="0"/><line nr="2494" mi="0" ci="4" mb="1" cb="2"/><line nr="2496" mi="0" ci="4" mb="0" cb="0"/><line nr="2497" mi="0" ci="1" mb="0" cb="0"/><line nr="2507" mi="0" ci="2" mb="0" cb="0"/><line nr="2508" mi="0" ci="1" mb="0" cb="0"/><line nr="2510" mi="6" ci="0" mb="0" cb="0"/><line nr="2511" mi="4" ci="0" mb="0" cb="0"/><line nr="2512" mi="4" ci="0" mb="0" cb="0"/><line nr="2514" mi="1" ci="0" mb="0" cb="0"/><line nr="2515" mi="2" ci="0" mb="2" cb="0"/><line nr="2516" mi="4" ci="0" mb="0" cb="0"/><line nr="2517" mi="3" ci="0" mb="0" cb="0"/><line nr="2519" mi="4" ci="0" mb="0" cb="0"/><line nr="2521" mi="3" ci="0" mb="2" cb="0"/><line nr="2522" mi="3" ci="0" mb="0" cb="0"/><line nr="2524" mi="3" ci="0" mb="2" cb="0"/><line nr="2525" mi="3" ci="0" mb="0" cb="0"/><line nr="2527" mi="3" ci="0" mb="0" cb="0"/><line nr="2529" mi="3" ci="2" mb="3" cb="1"/><line nr="2530" mi="5" ci="5" mb="0" cb="0"/><line nr="2531" mi="7" ci="6" mb="0" cb="0"/><line nr="2534" mi="0" ci="1" mb="0" cb="0"/><line nr="2538" mi="0" ci="6" mb="0" cb="0"/><line nr="2539" mi="0" ci="2" mb="0" cb="0"/><line nr="2540" mi="0" ci="4" mb="0" cb="0"/><line nr="2541" mi="0" ci="9" mb="0" cb="0"/><line nr="2544" mi="0" ci="4" mb="0" cb="0"/><line nr="2545" mi="0" ci="4" mb="0" cb="0"/><line nr="2546" mi="0" ci="4" mb="0" cb="0"/><line nr="2547" mi="0" ci="5" mb="0" cb="0"/><line nr="2550" mi="0" ci="4" mb="0" cb="2"/><line nr="2555" mi="0" ci="4" mb="0" cb="0"/><line nr="2556" mi="0" ci="4" mb="0" cb="0"/><line nr="2557" mi="0" ci="8" mb="0" cb="0"/><line nr="2559" mi="0" ci="5" mb="0" cb="0"/><line nr="2560" mi="0" ci="2" mb="0" cb="0"/><line nr="2561" mi="0" ci="5" mb="0" cb="0"/><line nr="2562" mi="0" ci="4" mb="0" cb="0"/><line nr="2564" mi="3" ci="2" mb="3" cb="1"/><line nr="2565" mi="10" ci="0" mb="0" cb="0"/><line nr="2566" mi="13" ci="0" mb="0" cb="0"/><line nr="2569" mi="0" ci="1" mb="0" cb="0"/><line nr="2573" mi="0" ci="6" mb="0" cb="0"/><line nr="2574" mi="0" ci="2" mb="0" cb="0"/><line nr="2575" mi="0" ci="4" mb="0" cb="0"/><line nr="2576" mi="0" ci="5" mb="0" cb="0"/><line nr="2580" mi="0" ci="4" mb="0" cb="2"/><line nr="2583" mi="0" ci="1" mb="0" cb="0"/><line nr="2585" mi="0" ci="6" mb="0" cb="0"/><line nr="2586" mi="0" ci="1" mb="0" cb="0"/><line nr="2588" mi="0" ci="2" mb="0" cb="0"/><line nr="2589" mi="0" ci="3" mb="0" cb="0"/><line nr="2591" mi="0" ci="2" mb="0" cb="0"/><line nr="2594" mi="0" ci="4" mb="0" cb="2"/><line nr="2597" mi="0" ci="1" mb="0" cb="0"/><line nr="2599" mi="0" ci="6" mb="0" cb="0"/><line nr="2600" mi="0" ci="1" mb="0" cb="0"/><line nr="2602" mi="0" ci="4" mb="0" cb="0"/><line nr="2605" mi="0" ci="4" mb="1" cb="1"/><line nr="2608" mi="1" ci="0" mb="0" cb="0"/><line nr="2610" mi="0" ci="6" mb="0" cb="0"/><line nr="2611" mi="0" ci="1" mb="0" cb="0"/><line nr="2613" mi="2" ci="0" mb="0" cb="0"/><line nr="2614" mi="3" ci="0" mb="0" cb="0"/><line nr="2616" mi="0" ci="3" mb="0" cb="0"/><line nr="2618" mi="1" ci="0" mb="0" cb="0"/><line nr="2619" mi="2" ci="0" mb="2" cb="0"/><line nr="2620" mi="4" ci="0" mb="0" cb="0"/><line nr="2621" mi="3" ci="0" mb="0" cb="0"/><line nr="2623" mi="4" ci="0" mb="0" cb="0"/><line nr="2625" mi="3" ci="0" mb="2" cb="0"/><line nr="2626" mi="3" ci="0" mb="0" cb="0"/><line nr="2628" mi="3" ci="0" mb="2" cb="0"/><line nr="2629" mi="3" ci="0" mb="0" cb="0"/><line nr="2631" mi="3" ci="0" mb="0" cb="0"/><line nr="2633" mi="3" ci="2" mb="3" cb="1"/><line nr="2634" mi="5" ci="5" mb="0" cb="0"/><line nr="2635" mi="7" ci="6" mb="0" cb="0"/><line nr="2638" mi="0" ci="1" mb="0" cb="0"/><line nr="2645" mi="0" ci="6" mb="0" cb="0"/><line nr="2646" mi="0" ci="2" mb="0" cb="0"/><line nr="2647" mi="0" ci="4" mb="0" cb="0"/><line nr="2648" mi="0" ci="5" mb="0" cb="0"/><line nr="2650" mi="0" ci="2" mb="0" cb="0"/><line nr="2651" mi="0" ci="4" mb="0" cb="2"/><line nr="2652" mi="0" ci="2" mb="0" cb="0"/><line nr="2653" mi="0" ci="2" mb="0" cb="0"/><line nr="2657" mi="0" ci="1" mb="0" cb="0"/><line nr="2658" mi="0" ci="2" mb="1" cb="1"/><line nr="2659" mi="0" ci="4" mb="0" cb="0"/><line nr="2660" mi="0" ci="3" mb="0" cb="0"/><line nr="2662" mi="4" ci="0" mb="0" cb="0"/><line nr="2664" mi="0" ci="3" mb="1" cb="1"/><line nr="2665" mi="0" ci="3" mb="0" cb="0"/><line nr="2667" mi="3" ci="0" mb="2" cb="0"/><line nr="2668" mi="3" ci="0" mb="0" cb="0"/><line nr="2670" mi="3" ci="0" mb="0" cb="0"/><line nr="2672" mi="0" ci="5" mb="2" cb="2"/><line nr="2673" mi="5" ci="5" mb="0" cb="0"/><line nr="2674" mi="5" ci="8" mb="0" cb="0"/><line nr="2677" mi="0" ci="1" mb="0" cb="0"/><line nr="2681" mi="0" ci="6" mb="0" cb="0"/><line nr="2682" mi="0" ci="2" mb="0" cb="0"/><line nr="2683" mi="0" ci="4" mb="0" cb="0"/><line nr="2684" mi="0" ci="5" mb="0" cb="0"/><line nr="2686" mi="0" ci="4" mb="1" cb="12"/><line nr="2688" mi="0" ci="4" mb="0" cb="0"/><line nr="2689" mi="0" ci="5" mb="0" cb="0"/><line nr="2690" mi="0" ci="2" mb="0" cb="0"/><line nr="2691" mi="0" ci="5" mb="0" cb="0"/><line nr="2692" mi="0" ci="3" mb="0" cb="0"/><line nr="2693" mi="0" ci="1" mb="0" cb="0"/><line nr="2695" mi="0" ci="4" mb="0" cb="0"/><line nr="2696" mi="0" ci="5" mb="0" cb="0"/><line nr="2697" mi="0" ci="2" mb="0" cb="0"/><line nr="2698" mi="0" ci="5" mb="0" cb="0"/><line nr="2699" mi="0" ci="5" mb="0" cb="0"/><line nr="2700" mi="0" ci="1" mb="0" cb="0"/><line nr="2702" mi="0" ci="4" mb="0" cb="0"/><line nr="2703" mi="0" ci="5" mb="0" cb="0"/><line nr="2704" mi="0" ci="2" mb="0" cb="0"/><line nr="2705" mi="0" ci="5" mb="0" cb="0"/><line nr="2706" mi="0" ci="5" mb="0" cb="0"/><line nr="2707" mi="0" ci="1" mb="0" cb="0"/><line nr="2709" mi="0" ci="4" mb="0" cb="0"/><line nr="2710" mi="0" ci="5" mb="0" cb="0"/><line nr="2711" mi="0" ci="2" mb="0" cb="0"/><line nr="2712" mi="0" ci="5" mb="0" cb="0"/><line nr="2713" mi="0" ci="5" mb="0" cb="0"/><line nr="2714" mi="0" ci="1" mb="0" cb="0"/><line nr="2716" mi="0" ci="4" mb="0" cb="0"/><line nr="2717" mi="0" ci="5" mb="0" cb="0"/><line nr="2718" mi="0" ci="2" mb="0" cb="0"/><line nr="2719" mi="0" ci="5" mb="0" cb="0"/><line nr="2720" mi="0" ci="5" mb="0" cb="0"/><line nr="2721" mi="0" ci="1" mb="0" cb="0"/><line nr="2723" mi="0" ci="4" mb="0" cb="0"/><line nr="2724" mi="0" ci="5" mb="0" cb="0"/><line nr="2725" mi="0" ci="2" mb="0" cb="0"/><line nr="2726" mi="0" ci="5" mb="0" cb="0"/><line nr="2727" mi="0" ci="5" mb="0" cb="0"/><line nr="2728" mi="0" ci="1" mb="0" cb="0"/><line nr="2730" mi="0" ci="4" mb="0" cb="0"/><line nr="2731" mi="0" ci="5" mb="0" cb="0"/><line nr="2732" mi="0" ci="2" mb="0" cb="0"/><line nr="2733" mi="0" ci="5" mb="0" cb="0"/><line nr="2734" mi="0" ci="5" mb="0" cb="0"/><line nr="2735" mi="0" ci="1" mb="0" cb="0"/><line nr="2737" mi="0" ci="4" mb="0" cb="0"/><line nr="2738" mi="0" ci="5" mb="0" cb="0"/><line nr="2739" mi="0" ci="2" mb="0" cb="0"/><line nr="2740" mi="0" ci="5" mb="0" cb="0"/><line nr="2741" mi="0" ci="5" mb="0" cb="0"/><line nr="2742" mi="0" ci="1" mb="0" cb="0"/><line nr="2744" mi="0" ci="4" mb="0" cb="0"/><line nr="2745" mi="0" ci="5" mb="0" cb="0"/><line nr="2746" mi="0" ci="2" mb="0" cb="0"/><line nr="2747" mi="0" ci="5" mb="0" cb="0"/><line nr="2748" mi="0" ci="5" mb="0" cb="0"/><line nr="2749" mi="0" ci="1" mb="0" cb="0"/><line nr="2751" mi="0" ci="4" mb="0" cb="0"/><line nr="2752" mi="0" ci="5" mb="0" cb="0"/><line nr="2753" mi="0" ci="2" mb="0" cb="0"/><line nr="2754" mi="0" ci="5" mb="0" cb="0"/><line nr="2755" mi="0" ci="5" mb="0" cb="0"/><line nr="2756" mi="0" ci="1" mb="0" cb="0"/><line nr="2758" mi="0" ci="4" mb="0" cb="0"/><line nr="2759" mi="0" ci="5" mb="0" cb="0"/><line nr="2760" mi="0" ci="2" mb="0" cb="0"/><line nr="2761" mi="0" ci="5" mb="0" cb="0"/><line nr="2762" mi="0" ci="5" mb="0" cb="0"/><line nr="2763" mi="0" ci="1" mb="0" cb="0"/><line nr="2765" mi="0" ci="4" mb="0" cb="0"/><line nr="2766" mi="0" ci="5" mb="0" cb="0"/><line nr="2767" mi="0" ci="2" mb="0" cb="0"/><line nr="2768" mi="0" ci="5" mb="0" cb="0"/><line nr="2769" mi="0" ci="5" mb="0" cb="0"/><line nr="2770" mi="0" ci="1" mb="0" cb="0"/><line nr="2772" mi="6" ci="0" mb="0" cb="0"/><line nr="2773" mi="4" ci="0" mb="0" cb="0"/><line nr="2774" mi="4" ci="0" mb="0" cb="0"/><line nr="2777" mi="3" ci="2" mb="3" cb="1"/><line nr="2778" mi="10" ci="0" mb="0" cb="0"/><line nr="2779" mi="13" ci="0" mb="0" cb="0"/><line nr="2782" mi="0" ci="1" mb="0" cb="0"/><line nr="2786" mi="0" ci="6" mb="0" cb="0"/><line nr="2787" mi="0" ci="2" mb="0" cb="0"/><line nr="2788" mi="0" ci="4" mb="0" cb="0"/><line nr="2789" mi="0" ci="5" mb="0" cb="0"/><line nr="2791" mi="0" ci="2" mb="0" cb="0"/><line nr="2792" mi="0" ci="4" mb="0" cb="2"/><line nr="2793" mi="0" ci="4" mb="0" cb="0"/><line nr="2794" mi="0" ci="2" mb="0" cb="0"/><line nr="2795" mi="0" ci="2" mb="0" cb="0"/><line nr="2796" mi="0" ci="4" mb="0" cb="0"/><line nr="2797" mi="0" ci="2" mb="0" cb="0"/><line nr="2801" mi="0" ci="1" mb="0" cb="0"/><line nr="2802" mi="0" ci="2" mb="1" cb="1"/><line nr="2803" mi="0" ci="4" mb="0" cb="0"/><line nr="2804" mi="0" ci="3" mb="0" cb="0"/><line nr="2806" mi="4" ci="0" mb="0" cb="0"/><line nr="2808" mi="0" ci="3" mb="1" cb="1"/><line nr="2809" mi="0" ci="3" mb="0" cb="0"/><line nr="2811" mi="3" ci="0" mb="2" cb="0"/><line nr="2812" mi="3" ci="0" mb="0" cb="0"/><line nr="2814" mi="3" ci="0" mb="0" cb="0"/><line nr="2816" mi="0" ci="5" mb="2" cb="2"/><line nr="2817" mi="12" ci="12" mb="2" cb="2"/><line nr="2818" mi="5" ci="8" mb="0" cb="0"/><line nr="2821" mi="0" ci="1" mb="0" cb="0"/><line nr="2825" mi="0" ci="6" mb="0" cb="0"/><line nr="2826" mi="0" ci="2" mb="0" cb="0"/><line nr="2827" mi="0" ci="4" mb="0" cb="0"/><line nr="2828" mi="0" ci="5" mb="0" cb="0"/><line nr="2830" mi="0" ci="2" mb="0" cb="0"/><line nr="2833" mi="0" ci="4" mb="0" cb="2"/><line nr="2838" mi="0" ci="4" mb="0" cb="0"/><line nr="2839" mi="0" ci="3" mb="0" cb="0"/><line nr="2841" mi="0" ci="1" mb="0" cb="0"/><line nr="2842" mi="0" ci="2" mb="1" cb="1"/><line nr="2843" mi="0" ci="4" mb="0" cb="0"/><line nr="2844" mi="0" ci="3" mb="0" cb="0"/><line nr="2846" mi="4" ci="0" mb="0" cb="0"/><line nr="2848" mi="0" ci="3" mb="1" cb="1"/><line nr="2849" mi="0" ci="3" mb="0" cb="0"/><line nr="2851" mi="3" ci="0" mb="2" cb="0"/><line nr="2852" mi="3" ci="0" mb="0" cb="0"/><line nr="2854" mi="3" ci="0" mb="0" cb="0"/><line nr="2856" mi="0" ci="5" mb="2" cb="2"/><line nr="2857" mi="12" ci="12" mb="2" cb="2"/><line nr="2858" mi="5" ci="8" mb="0" cb="0"/><line nr="2861" mi="0" ci="1" mb="0" cb="0"/><line nr="2865" mi="0" ci="6" mb="0" cb="0"/><line nr="2866" mi="0" ci="2" mb="0" cb="0"/><line nr="2867" mi="0" ci="4" mb="0" cb="0"/><line nr="2868" mi="0" ci="5" mb="0" cb="0"/><line nr="2870" mi="0" ci="2" mb="0" cb="0"/><line nr="2873" mi="0" ci="4" mb="0" cb="2"/><line nr="2878" mi="0" ci="4" mb="0" cb="0"/><line nr="2879" mi="0" ci="3" mb="0" cb="0"/><line nr="2881" mi="0" ci="1" mb="0" cb="0"/><line nr="2882" mi="0" ci="2" mb="1" cb="1"/><line nr="2883" mi="0" ci="4" mb="0" cb="0"/><line nr="2884" mi="0" ci="3" mb="0" cb="0"/><line nr="2886" mi="4" ci="0" mb="0" cb="0"/><line nr="2888" mi="0" ci="3" mb="1" cb="1"/><line nr="2889" mi="0" ci="3" mb="0" cb="0"/><line nr="2891" mi="3" ci="0" mb="2" cb="0"/><line nr="2892" mi="3" ci="0" mb="0" cb="0"/><line nr="2894" mi="3" ci="0" mb="0" cb="0"/><line nr="2896" mi="0" ci="5" mb="2" cb="2"/><line nr="2897" mi="12" ci="12" mb="2" cb="2"/><line nr="2898" mi="5" ci="8" mb="0" cb="0"/><line nr="2901" mi="0" ci="1" mb="0" cb="0"/><line nr="2905" mi="0" ci="6" mb="0" cb="0"/><line nr="2906" mi="0" ci="2" mb="0" cb="0"/><line nr="2907" mi="0" ci="4" mb="0" cb="0"/><line nr="2908" mi="0" ci="5" mb="0" cb="0"/><line nr="2910" mi="0" ci="2" mb="0" cb="0"/><line nr="2913" mi="0" ci="4" mb="0" cb="2"/><line nr="2918" mi="0" ci="4" mb="0" cb="0"/><line nr="2919" mi="0" ci="3" mb="0" cb="0"/><line nr="2921" mi="0" ci="1" mb="0" cb="0"/><line nr="2922" mi="0" ci="2" mb="1" cb="1"/><line nr="2923" mi="0" ci="4" mb="0" cb="0"/><line nr="2924" mi="0" ci="3" mb="0" cb="0"/><line nr="2926" mi="4" ci="0" mb="0" cb="0"/><line nr="2928" mi="0" ci="3" mb="1" cb="1"/><line nr="2929" mi="0" ci="3" mb="0" cb="0"/><line nr="2931" mi="3" ci="0" mb="2" cb="0"/><line nr="2932" mi="3" ci="0" mb="0" cb="0"/><line nr="2934" mi="3" ci="0" mb="0" cb="0"/><line nr="2936" mi="0" ci="5" mb="2" cb="2"/><line nr="2937" mi="12" ci="12" mb="2" cb="2"/><line nr="2938" mi="5" ci="8" mb="0" cb="0"/><line nr="2941" mi="0" ci="1" mb="0" cb="0"/><line nr="2945" mi="0" ci="6" mb="0" cb="0"/><line nr="2946" mi="0" ci="2" mb="0" cb="0"/><line nr="2947" mi="0" ci="4" mb="0" cb="0"/><line nr="2948" mi="0" ci="5" mb="0" cb="0"/><line nr="2950" mi="0" ci="2" mb="0" cb="0"/><line nr="2953" mi="0" ci="4" mb="0" cb="2"/><line nr="2958" mi="0" ci="4" mb="0" cb="0"/><line nr="2959" mi="0" ci="3" mb="0" cb="0"/><line nr="2961" mi="0" ci="1" mb="0" cb="0"/><line nr="2962" mi="0" ci="2" mb="1" cb="1"/><line nr="2963" mi="0" ci="4" mb="0" cb="0"/><line nr="2964" mi="0" ci="3" mb="0" cb="0"/><line nr="2966" mi="4" ci="0" mb="0" cb="0"/><line nr="2968" mi="0" ci="3" mb="1" cb="1"/><line nr="2969" mi="0" ci="3" mb="0" cb="0"/><line nr="2971" mi="3" ci="0" mb="2" cb="0"/><line nr="2972" mi="3" ci="0" mb="0" cb="0"/><line nr="2974" mi="3" ci="0" mb="0" cb="0"/><line nr="2976" mi="0" ci="5" mb="2" cb="2"/><line nr="2977" mi="12" ci="12" mb="2" cb="2"/><line nr="2978" mi="5" ci="8" mb="0" cb="0"/><line nr="2981" mi="0" ci="1" mb="0" cb="0"/><line nr="2985" mi="0" ci="6" mb="0" cb="0"/><line nr="2986" mi="0" ci="2" mb="0" cb="0"/><line nr="2987" mi="0" ci="4" mb="0" cb="0"/><line nr="2988" mi="0" ci="5" mb="0" cb="0"/><line nr="2990" mi="0" ci="2" mb="0" cb="0"/><line nr="2993" mi="0" ci="4" mb="0" cb="2"/><line nr="2998" mi="0" ci="4" mb="0" cb="0"/><line nr="2999" mi="0" ci="3" mb="0" cb="0"/><line nr="3001" mi="0" ci="1" mb="0" cb="0"/><line nr="3002" mi="0" ci="2" mb="1" cb="1"/><line nr="3003" mi="0" ci="4" mb="0" cb="0"/><line nr="3004" mi="0" ci="3" mb="0" cb="0"/><line nr="3006" mi="4" ci="0" mb="0" cb="0"/><line nr="3008" mi="0" ci="3" mb="1" cb="1"/><line nr="3009" mi="0" ci="3" mb="0" cb="0"/><line nr="3011" mi="3" ci="0" mb="2" cb="0"/><line nr="3012" mi="3" ci="0" mb="0" cb="0"/><line nr="3014" mi="3" ci="0" mb="0" cb="0"/><line nr="3016" mi="0" ci="5" mb="2" cb="2"/><line nr="3017" mi="12" ci="12" mb="2" cb="2"/><line nr="3018" mi="5" ci="8" mb="0" cb="0"/><line nr="3021" mi="0" ci="1" mb="0" cb="0"/><line nr="3025" mi="0" ci="6" mb="0" cb="0"/><line nr="3026" mi="0" ci="2" mb="0" cb="0"/><line nr="3027" mi="0" ci="4" mb="0" cb="0"/><line nr="3028" mi="0" ci="5" mb="0" cb="0"/><line nr="3030" mi="0" ci="2" mb="0" cb="0"/><line nr="3033" mi="0" ci="4" mb="0" cb="2"/><line nr="3038" mi="0" ci="4" mb="1" cb="2"/><line nr="3040" mi="0" ci="4" mb="0" cb="0"/><line nr="3041" mi="0" ci="3" mb="0" cb="0"/><line nr="3042" mi="0" ci="1" mb="0" cb="0"/><line nr="3044" mi="0" ci="4" mb="0" cb="0"/><line nr="3045" mi="0" ci="3" mb="0" cb="0"/><line nr="3046" mi="0" ci="1" mb="0" cb="0"/><line nr="3048" mi="6" ci="0" mb="0" cb="0"/><line nr="3049" mi="4" ci="0" mb="0" cb="0"/><line nr="3050" mi="4" ci="0" mb="0" cb="0"/><line nr="3052" mi="0" ci="3" mb="0" cb="0"/><line nr="3054" mi="0" ci="1" mb="0" cb="0"/><line nr="3055" mi="0" ci="2" mb="1" cb="1"/><line nr="3056" mi="0" ci="4" mb="0" cb="0"/><line nr="3057" mi="0" ci="3" mb="0" cb="0"/><line nr="3059" mi="4" ci="0" mb="0" cb="0"/><line nr="3061" mi="0" ci="3" mb="1" cb="1"/><line nr="3062" mi="0" ci="3" mb="0" cb="0"/><line nr="3064" mi="3" ci="0" mb="2" cb="0"/><line nr="3065" mi="3" ci="0" mb="0" cb="0"/><line nr="3067" mi="3" ci="0" mb="0" cb="0"/><line nr="3069" mi="0" ci="5" mb="2" cb="2"/><line nr="3070" mi="12" ci="12" mb="2" cb="2"/><line nr="3071" mi="5" ci="8" mb="0" cb="0"/><line nr="3074" mi="0" ci="1" mb="0" cb="0"/><line nr="3078" mi="0" ci="6" mb="0" cb="0"/><line nr="3079" mi="0" ci="2" mb="0" cb="0"/><line nr="3080" mi="0" ci="4" mb="0" cb="0"/><line nr="3081" mi="0" ci="5" mb="0" cb="0"/><line nr="3083" mi="0" ci="2" mb="0" cb="0"/><line nr="3084" mi="0" ci="4" mb="0" cb="2"/><line nr="3085" mi="0" ci="4" mb="0" cb="0"/><line nr="3086" mi="0" ci="2" mb="0" cb="0"/><line nr="3090" mi="0" ci="1" mb="0" cb="0"/><line nr="3091" mi="0" ci="2" mb="1" cb="1"/><line nr="3092" mi="0" ci="4" mb="0" cb="0"/><line nr="3093" mi="0" ci="3" mb="0" cb="0"/><line nr="3095" mi="4" ci="0" mb="0" cb="0"/><line nr="3097" mi="0" ci="3" mb="1" cb="1"/><line nr="3098" mi="0" ci="3" mb="0" cb="0"/><line nr="3100" mi="3" ci="0" mb="2" cb="0"/><line nr="3101" mi="3" ci="0" mb="0" cb="0"/><line nr="3103" mi="3" ci="0" mb="0" cb="0"/><line nr="3105" mi="0" ci="5" mb="2" cb="2"/><line nr="3106" mi="12" ci="12" mb="2" cb="2"/><line nr="3107" mi="5" ci="8" mb="0" cb="0"/><line nr="3110" mi="0" ci="1" mb="0" cb="0"/><line nr="3114" mi="0" ci="6" mb="0" cb="0"/><line nr="3115" mi="0" ci="2" mb="0" cb="0"/><line nr="3116" mi="0" ci="4" mb="0" cb="0"/><line nr="3117" mi="0" ci="5" mb="0" cb="0"/><line nr="3119" mi="0" ci="2" mb="0" cb="0"/><line nr="3122" mi="0" ci="4" mb="0" cb="2"/><line nr="3127" mi="0" ci="4" mb="1" cb="4"/><line nr="3129" mi="0" ci="4" mb="0" cb="0"/><line nr="3130" mi="0" ci="3" mb="0" cb="0"/><line nr="3131" mi="0" ci="1" mb="0" cb="0"/><line nr="3133" mi="0" ci="4" mb="0" cb="0"/><line nr="3134" mi="0" ci="3" mb="0" cb="0"/><line nr="3135" mi="0" ci="1" mb="0" cb="0"/><line nr="3137" mi="0" ci="4" mb="0" cb="0"/><line nr="3138" mi="0" ci="3" mb="0" cb="0"/><line nr="3139" mi="0" ci="1" mb="0" cb="0"/><line nr="3141" mi="0" ci="4" mb="0" cb="0"/><line nr="3142" mi="0" ci="3" mb="0" cb="0"/><line nr="3143" mi="0" ci="1" mb="0" cb="0"/><line nr="3145" mi="6" ci="0" mb="0" cb="0"/><line nr="3146" mi="4" ci="0" mb="0" cb="0"/><line nr="3147" mi="4" ci="0" mb="0" cb="0"/><line nr="3149" mi="0" ci="3" mb="0" cb="0"/><line nr="3151" mi="0" ci="1" mb="0" cb="0"/><line nr="3152" mi="0" ci="2" mb="1" cb="1"/><line nr="3153" mi="0" ci="4" mb="0" cb="0"/><line nr="3154" mi="0" ci="3" mb="0" cb="0"/><line nr="3156" mi="4" ci="0" mb="0" cb="0"/><line nr="3158" mi="0" ci="3" mb="1" cb="1"/><line nr="3159" mi="0" ci="3" mb="0" cb="0"/><line nr="3161" mi="3" ci="0" mb="2" cb="0"/><line nr="3162" mi="3" ci="0" mb="0" cb="0"/><line nr="3164" mi="3" ci="0" mb="0" cb="0"/><line nr="3166" mi="0" ci="5" mb="2" cb="2"/><line nr="3167" mi="12" ci="12" mb="2" cb="2"/><line nr="3168" mi="5" ci="8" mb="0" cb="0"/><line nr="3171" mi="0" ci="1" mb="0" cb="0"/><line nr="3175" mi="0" ci="6" mb="0" cb="0"/><line nr="3176" mi="0" ci="2" mb="0" cb="0"/><line nr="3177" mi="0" ci="4" mb="0" cb="0"/><line nr="3178" mi="0" ci="5" mb="0" cb="0"/><line nr="3180" mi="0" ci="2" mb="0" cb="0"/><line nr="3183" mi="0" ci="4" mb="0" cb="2"/><line nr="3188" mi="0" ci="4" mb="0" cb="2"/><line nr="3190" mi="0" ci="4" mb="0" cb="0"/><line nr="3191" mi="0" ci="3" mb="0" cb="0"/><line nr="3192" mi="0" ci="1" mb="0" cb="0"/><line nr="3194" mi="0" ci="6" mb="0" cb="0"/><line nr="3195" mi="0" ci="4" mb="0" cb="2"/><line nr="3196" mi="0" ci="3" mb="0" cb="0"/><line nr="3197" mi="0" ci="4" mb="1" cb="1"/><line nr="3198" mi="0" ci="3" mb="0" cb="0"/><line nr="3200" mi="4" ci="0" mb="0" cb="0"/><line nr="3201" mi="4" ci="0" mb="0" cb="0"/><line nr="3204" mi="0" ci="3" mb="0" cb="0"/><line nr="3206" mi="0" ci="1" mb="0" cb="0"/><line nr="3207" mi="0" ci="2" mb="1" cb="1"/><line nr="3208" mi="0" ci="4" mb="0" cb="0"/><line nr="3209" mi="0" ci="3" mb="0" cb="0"/><line nr="3211" mi="4" ci="0" mb="0" cb="0"/><line nr="3213" mi="0" ci="3" mb="1" cb="1"/><line nr="3214" mi="0" ci="3" mb="0" cb="0"/><line nr="3216" mi="3" ci="0" mb="2" cb="0"/><line nr="3217" mi="3" ci="0" mb="0" cb="0"/><line nr="3219" mi="3" ci="0" mb="0" cb="0"/><line nr="3221" mi="0" ci="5" mb="2" cb="2"/><line nr="3222" mi="12" ci="12" mb="2" cb="2"/><line nr="3223" mi="5" ci="8" mb="0" cb="0"/><line nr="3226" mi="0" ci="1" mb="0" cb="0"/><line nr="3230" mi="0" ci="6" mb="0" cb="0"/><line nr="3231" mi="0" ci="2" mb="0" cb="0"/><line nr="3232" mi="0" ci="4" mb="0" cb="0"/><line nr="3233" mi="0" ci="5" mb="0" cb="0"/><line nr="3235" mi="0" ci="2" mb="0" cb="0"/><line nr="3238" mi="0" ci="4" mb="0" cb="2"/><line nr="3243" mi="0" ci="4" mb="1" cb="2"/><line nr="3245" mi="0" ci="4" mb="0" cb="0"/><line nr="3246" mi="0" ci="3" mb="0" cb="0"/><line nr="3247" mi="0" ci="1" mb="0" cb="0"/><line nr="3249" mi="0" ci="4" mb="0" cb="0"/><line nr="3250" mi="0" ci="3" mb="0" cb="0"/><line nr="3251" mi="0" ci="1" mb="0" cb="0"/><line nr="3253" mi="6" ci="0" mb="0" cb="0"/><line nr="3254" mi="4" ci="0" mb="0" cb="0"/><line nr="3255" mi="4" ci="0" mb="0" cb="0"/><line nr="3257" mi="0" ci="3" mb="0" cb="0"/><line nr="3259" mi="0" ci="1" mb="0" cb="0"/><line nr="3260" mi="0" ci="2" mb="1" cb="1"/><line nr="3261" mi="0" ci="4" mb="0" cb="0"/><line nr="3262" mi="0" ci="3" mb="0" cb="0"/><line nr="3264" mi="4" ci="0" mb="0" cb="0"/><line nr="3266" mi="0" ci="3" mb="1" cb="1"/><line nr="3267" mi="0" ci="3" mb="0" cb="0"/><line nr="3269" mi="3" ci="0" mb="2" cb="0"/><line nr="3270" mi="3" ci="0" mb="0" cb="0"/><line nr="3272" mi="3" ci="0" mb="0" cb="0"/><line nr="3274" mi="0" ci="5" mb="2" cb="2"/><line nr="3275" mi="12" ci="12" mb="2" cb="2"/><line nr="3276" mi="5" ci="8" mb="0" cb="0"/><line nr="3279" mi="0" ci="1" mb="0" cb="0"/><line nr="3283" mi="0" ci="6" mb="0" cb="0"/><line nr="3284" mi="0" ci="2" mb="0" cb="0"/><line nr="3285" mi="0" ci="4" mb="0" cb="0"/><line nr="3286" mi="0" ci="5" mb="0" cb="0"/><line nr="3288" mi="0" ci="2" mb="0" cb="0"/><line nr="3291" mi="0" ci="4" mb="0" cb="2"/><line nr="3296" mi="0" ci="4" mb="1" cb="3"/><line nr="3298" mi="0" ci="4" mb="0" cb="0"/><line nr="3299" mi="0" ci="3" mb="0" cb="0"/><line nr="3300" mi="0" ci="1" mb="0" cb="0"/><line nr="3302" mi="0" ci="4" mb="0" cb="0"/><line nr="3303" mi="0" ci="3" mb="0" cb="0"/><line nr="3304" mi="0" ci="1" mb="0" cb="0"/><line nr="3306" mi="0" ci="4" mb="0" cb="0"/><line nr="3307" mi="0" ci="3" mb="0" cb="0"/><line nr="3308" mi="0" ci="1" mb="0" cb="0"/><line nr="3310" mi="6" ci="0" mb="0" cb="0"/><line nr="3311" mi="4" ci="0" mb="0" cb="0"/><line nr="3312" mi="4" ci="0" mb="0" cb="0"/><line nr="3314" mi="0" ci="3" mb="0" cb="0"/><line nr="3316" mi="0" ci="1" mb="0" cb="0"/><line nr="3317" mi="0" ci="2" mb="1" cb="1"/><line nr="3318" mi="0" ci="4" mb="0" cb="0"/><line nr="3319" mi="0" ci="3" mb="0" cb="0"/><line nr="3321" mi="4" ci="0" mb="0" cb="0"/><line nr="3323" mi="0" ci="3" mb="1" cb="1"/><line nr="3324" mi="0" ci="3" mb="0" cb="0"/><line nr="3326" mi="3" ci="0" mb="2" cb="0"/><line nr="3327" mi="3" ci="0" mb="0" cb="0"/><line nr="3329" mi="3" ci="0" mb="0" cb="0"/><line nr="3331" mi="0" ci="5" mb="2" cb="2"/><line nr="3332" mi="12" ci="12" mb="2" cb="2"/><line nr="3333" mi="5" ci="8" mb="0" cb="0"/><line nr="3336" mi="0" ci="1" mb="0" cb="0"/><line nr="3340" mi="0" ci="6" mb="0" cb="0"/><line nr="3341" mi="0" ci="2" mb="0" cb="0"/><line nr="3342" mi="0" ci="4" mb="0" cb="0"/><line nr="3343" mi="0" ci="5" mb="0" cb="0"/><line nr="3345" mi="0" ci="4" mb="1" cb="4"/><line nr="3348" mi="0" ci="4" mb="1" cb="2"/><line nr="3350" mi="0" ci="4" mb="0" cb="0"/><line nr="3351" mi="0" ci="3" mb="0" cb="0"/><line nr="3352" mi="0" ci="1" mb="0" cb="0"/><line nr="3354" mi="0" ci="4" mb="0" cb="0"/><line nr="3355" mi="0" ci="3" mb="0" cb="0"/><line nr="3356" mi="0" ci="1" mb="0" cb="0"/><line nr="3358" mi="6" ci="0" mb="0" cb="0"/><line nr="3359" mi="4" ci="0" mb="0" cb="0"/><line nr="3360" mi="4" ci="0" mb="0" cb="0"/><line nr="3362" mi="0" ci="2" mb="0" cb="0"/><line nr="3363" mi="0" ci="1" mb="0" cb="0"/><line nr="3365" mi="0" ci="2" mb="0" cb="0"/><line nr="3366" mi="0" ci="1" mb="0" cb="0"/><line nr="3368" mi="0" ci="2" mb="0" cb="0"/><line nr="3369" mi="0" ci="1" mb="0" cb="0"/><line nr="3394" mi="0" ci="2" mb="0" cb="0"/><line nr="3395" mi="0" ci="1" mb="0" cb="0"/><line nr="3397" mi="6" ci="0" mb="0" cb="0"/><line nr="3398" mi="4" ci="0" mb="0" cb="0"/><line nr="3399" mi="4" ci="0" mb="0" cb="0"/><line nr="3401" mi="0" ci="1" mb="0" cb="0"/><line nr="3402" mi="0" ci="2" mb="1" cb="1"/><line nr="3403" mi="0" ci="4" mb="0" cb="0"/><line nr="3404" mi="0" ci="3" mb="0" cb="0"/><line nr="3406" mi="4" ci="0" mb="0" cb="0"/><line nr="3408" mi="0" ci="3" mb="1" cb="1"/><line nr="3409" mi="0" ci="3" mb="0" cb="0"/><line nr="3411" mi="3" ci="0" mb="2" cb="0"/><line nr="3412" mi="3" ci="0" mb="0" cb="0"/><line nr="3414" mi="3" ci="0" mb="0" cb="0"/><line nr="3416" mi="0" ci="5" mb="2" cb="2"/><line nr="3417" mi="10" ci="10" mb="2" cb="2"/><line nr="3418" mi="5" ci="8" mb="0" cb="0"/><line nr="3421" mi="0" ci="1" mb="0" cb="0"/><line nr="3425" mi="0" ci="6" mb="0" cb="0"/><line nr="3426" mi="0" ci="2" mb="0" cb="0"/><line nr="3427" mi="0" ci="4" mb="0" cb="0"/><line nr="3428" mi="0" ci="5" mb="0" cb="0"/><line nr="3430" mi="0" ci="4" mb="0" cb="0"/><line nr="3431" mi="0" ci="2" mb="0" cb="0"/><line nr="3432" mi="1" ci="0" mb="0" cb="0"/><line nr="3433" mi="2" ci="0" mb="2" cb="0"/><line nr="3434" mi="4" ci="0" mb="0" cb="0"/><line nr="3435" mi="3" ci="0" mb="0" cb="0"/><line nr="3437" mi="4" ci="0" mb="0" cb="0"/><line nr="3439" mi="3" ci="0" mb="2" cb="0"/><line nr="3440" mi="3" ci="0" mb="0" cb="0"/><line nr="3442" mi="3" ci="0" mb="2" cb="0"/><line nr="3443" mi="3" ci="0" mb="0" cb="0"/><line nr="3445" mi="3" ci="0" mb="0" cb="0"/><line nr="3447" mi="3" ci="2" mb="3" cb="1"/><line nr="3448" mi="5" ci="5" mb="0" cb="0"/><line nr="3449" mi="7" ci="6" mb="0" cb="0"/><line nr="3452" mi="0" ci="1" mb="0" cb="0"/><line nr="3456" mi="0" ci="6" mb="0" cb="0"/><line nr="3457" mi="0" ci="2" mb="0" cb="0"/><line nr="3458" mi="0" ci="4" mb="0" cb="0"/><line nr="3459" mi="0" ci="5" mb="0" cb="0"/><line nr="3461" mi="0" ci="4" mb="0" cb="0"/><line nr="3462" mi="0" ci="2" mb="0" cb="0"/><line nr="3463" mi="1" ci="0" mb="0" cb="0"/><line nr="3464" mi="2" ci="0" mb="2" cb="0"/><line nr="3465" mi="4" ci="0" mb="0" cb="0"/><line nr="3466" mi="3" ci="0" mb="0" cb="0"/><line nr="3468" mi="4" ci="0" mb="0" cb="0"/><line nr="3470" mi="3" ci="0" mb="2" cb="0"/><line nr="3471" mi="3" ci="0" mb="0" cb="0"/><line nr="3473" mi="3" ci="0" mb="2" cb="0"/><line nr="3474" mi="3" ci="0" mb="0" cb="0"/><line nr="3476" mi="3" ci="0" mb="0" cb="0"/><line nr="3478" mi="3" ci="2" mb="3" cb="1"/><line nr="3479" mi="5" ci="5" mb="0" cb="0"/><line nr="3480" mi="7" ci="6" mb="0" cb="0"/><line nr="3483" mi="0" ci="1" mb="0" cb="0"/><line nr="3487" mi="0" ci="6" mb="0" cb="0"/><line nr="3488" mi="0" ci="2" mb="0" cb="0"/><line nr="3489" mi="0" ci="4" mb="0" cb="0"/><line nr="3490" mi="0" ci="5" mb="0" cb="0"/><line nr="3492" mi="0" ci="4" mb="0" cb="2"/><line nr="3495" mi="0" ci="4" mb="1" cb="2"/><line nr="3497" mi="0" ci="4" mb="0" cb="0"/><line nr="3498" mi="0" ci="3" mb="0" cb="0"/><line nr="3499" mi="0" ci="1" mb="0" cb="0"/><line nr="3501" mi="0" ci="4" mb="0" cb="0"/><line nr="3502" mi="0" ci="3" mb="0" cb="0"/><line nr="3503" mi="0" ci="1" mb="0" cb="0"/><line nr="3505" mi="6" ci="0" mb="0" cb="0"/><line nr="3506" mi="4" ci="0" mb="0" cb="0"/><line nr="3507" mi="4" ci="0" mb="0" cb="0"/><line nr="3509" mi="0" ci="2" mb="0" cb="0"/><line nr="3510" mi="0" ci="1" mb="0" cb="0"/><line nr="3512" mi="0" ci="6" mb="0" cb="0"/><line nr="3513" mi="0" ci="4" mb="0" cb="2"/><line nr="3514" mi="0" ci="3" mb="0" cb="0"/><line nr="3515" mi="0" ci="4" mb="0" cb="2"/><line nr="3516" mi="0" ci="3" mb="0" cb="0"/><line nr="3518" mi="0" ci="4" mb="1" cb="1"/><line nr="3541" mi="0" ci="2" mb="0" cb="0"/><line nr="3542" mi="0" ci="1" mb="0" cb="0"/><line nr="3544" mi="6" ci="0" mb="0" cb="0"/><line nr="3545" mi="4" ci="0" mb="0" cb="0"/><line nr="3546" mi="4" ci="0" mb="0" cb="0"/><line nr="3550" mi="0" ci="1" mb="0" cb="0"/><line nr="3551" mi="0" ci="2" mb="1" cb="1"/><line nr="3552" mi="0" ci="4" mb="0" cb="0"/><line nr="3553" mi="0" ci="3" mb="0" cb="0"/><line nr="3555" mi="4" ci="0" mb="0" cb="0"/><line nr="3557" mi="0" ci="3" mb="1" cb="1"/><line nr="3558" mi="0" ci="3" mb="0" cb="0"/><line nr="3560" mi="3" ci="0" mb="2" cb="0"/><line nr="3561" mi="3" ci="0" mb="0" cb="0"/><line nr="3563" mi="3" ci="0" mb="0" cb="0"/><line nr="3565" mi="0" ci="5" mb="2" cb="2"/><line nr="3566" mi="10" ci="10" mb="2" cb="2"/><line nr="3567" mi="5" ci="8" mb="0" cb="0"/><line nr="3570" mi="0" ci="1" mb="0" cb="0"/><line nr="3574" mi="0" ci="6" mb="0" cb="0"/><line nr="3575" mi="0" ci="2" mb="0" cb="0"/><line nr="3576" mi="0" ci="4" mb="0" cb="0"/><line nr="3577" mi="0" ci="5" mb="0" cb="0"/><line nr="3579" mi="0" ci="2" mb="0" cb="0"/><line nr="3580" mi="0" ci="4" mb="0" cb="2"/><line nr="3583" mi="0" ci="4" mb="1" cb="2"/><line nr="3585" mi="0" ci="4" mb="0" cb="0"/><line nr="3586" mi="0" ci="3" mb="0" cb="0"/><line nr="3587" mi="0" ci="1" mb="0" cb="0"/><line nr="3589" mi="0" ci="4" mb="0" cb="0"/><line nr="3590" mi="0" ci="3" mb="0" cb="0"/><line nr="3591" mi="0" ci="1" mb="0" cb="0"/><line nr="3593" mi="6" ci="0" mb="0" cb="0"/><line nr="3594" mi="4" ci="0" mb="0" cb="0"/><line nr="3595" mi="4" ci="0" mb="0" cb="0"/><line nr="3599" mi="0" ci="6" mb="0" cb="0"/><line nr="3602" mi="0" ci="1" mb="0" cb="0"/><line nr="3603" mi="0" ci="2" mb="1" cb="1"/><line nr="3604" mi="0" ci="4" mb="0" cb="0"/><line nr="3605" mi="0" ci="3" mb="0" cb="0"/><line nr="3607" mi="4" ci="0" mb="0" cb="0"/><line nr="3609" mi="0" ci="3" mb="1" cb="1"/><line nr="3610" mi="0" ci="3" mb="0" cb="0"/><line nr="3612" mi="3" ci="0" mb="2" cb="0"/><line nr="3613" mi="3" ci="0" mb="0" cb="0"/><line nr="3615" mi="3" ci="0" mb="0" cb="0"/><line nr="3617" mi="0" ci="5" mb="2" cb="2"/><line nr="3618" mi="10" ci="10" mb="2" cb="2"/><line nr="3619" mi="5" ci="8" mb="0" cb="0"/><line nr="3622" mi="0" ci="1" mb="0" cb="0"/><line nr="3626" mi="0" ci="6" mb="0" cb="0"/><line nr="3627" mi="0" ci="2" mb="0" cb="0"/><line nr="3628" mi="0" ci="4" mb="0" cb="0"/><line nr="3629" mi="0" ci="5" mb="0" cb="0"/><line nr="3631" mi="0" ci="4" mb="0" cb="2"/><line nr="3632" mi="0" ci="4" mb="0" cb="0"/><line nr="3635" mi="0" ci="4" mb="1" cb="1"/><line nr="3638" mi="1" ci="0" mb="0" cb="0"/><line nr="3640" mi="0" ci="6" mb="0" cb="0"/><line nr="3641" mi="0" ci="1" mb="0" cb="0"/><line nr="3643" mi="2" ci="0" mb="0" cb="0"/><line nr="3644" mi="3" ci="0" mb="0" cb="0"/><line nr="3646" mi="0" ci="2" mb="0" cb="0"/><line nr="3647" mi="0" ci="4" mb="0" cb="0"/><line nr="3648" mi="0" ci="3" mb="0" cb="0"/><line nr="3650" mi="0" ci="4" mb="1" cb="1"/><line nr="3652" mi="0" ci="4" mb="0" cb="0"/><line nr="3655" mi="0" ci="4" mb="0" cb="2"/><line nr="3658" mi="0" ci="1" mb="0" cb="0"/><line nr="3660" mi="0" ci="6" mb="0" cb="0"/><line nr="3661" mi="0" ci="1" mb="0" cb="0"/><line nr="3663" mi="0" ci="2" mb="0" cb="0"/><line nr="3664" mi="0" ci="3" mb="0" cb="0"/><line nr="3666" mi="0" ci="2" mb="0" cb="0"/><line nr="3669" mi="0" ci="4" mb="0" cb="2"/><line nr="3672" mi="0" ci="1" mb="0" cb="0"/><line nr="3674" mi="0" ci="6" mb="0" cb="0"/><line nr="3675" mi="0" ci="1" mb="0" cb="0"/><line nr="3677" mi="0" ci="4" mb="0" cb="0"/><line nr="3678" mi="0" ci="5" mb="0" cb="0"/><line nr="3679" mi="0" ci="3" mb="0" cb="0"/><line nr="3681" mi="0" ci="4" mb="0" cb="0"/><line nr="3682" mi="0" ci="2" mb="0" cb="0"/><line nr="3683" mi="0" ci="1" mb="0" cb="0"/><line nr="3685" mi="6" ci="0" mb="0" cb="0"/><line nr="3686" mi="4" ci="0" mb="0" cb="0"/><line nr="3687" mi="4" ci="0" mb="0" cb="0"/><line nr="3690" mi="0" ci="1" mb="0" cb="0"/><line nr="3691" mi="0" ci="2" mb="1" cb="1"/><line nr="3692" mi="0" ci="4" mb="0" cb="0"/><line nr="3693" mi="0" ci="3" mb="0" cb="0"/><line nr="3695" mi="4" ci="0" mb="0" cb="0"/><line nr="3697" mi="0" ci="3" mb="1" cb="1"/><line nr="3698" mi="0" ci="3" mb="0" cb="0"/><line nr="3700" mi="3" ci="0" mb="2" cb="0"/><line nr="3701" mi="3" ci="0" mb="0" cb="0"/><line nr="3703" mi="3" ci="0" mb="0" cb="0"/><line nr="3705" mi="0" ci="5" mb="2" cb="2"/><line nr="3706" mi="5" ci="5" mb="0" cb="0"/><line nr="3707" mi="5" ci="8" mb="0" cb="0"/><line nr="3710" mi="0" ci="1" mb="0" cb="0"/><line nr="3714" mi="0" ci="6" mb="0" cb="0"/><line nr="3715" mi="0" ci="2" mb="0" cb="0"/><line nr="3716" mi="0" ci="4" mb="0" cb="0"/><line nr="3717" mi="0" ci="5" mb="0" cb="0"/><line nr="3719" mi="0" ci="2" mb="0" cb="0"/><line nr="3722" mi="0" ci="4" mb="0" cb="2"/><line nr="3727" mi="0" ci="3" mb="0" cb="0"/><line nr="3729" mi="0" ci="1" mb="0" cb="0"/><line nr="3730" mi="0" ci="2" mb="1" cb="1"/><line nr="3731" mi="0" ci="4" mb="0" cb="0"/><line nr="3732" mi="0" ci="3" mb="0" cb="0"/><line nr="3734" mi="4" ci="0" mb="0" cb="0"/><line nr="3736" mi="0" ci="3" mb="1" cb="1"/><line nr="3737" mi="0" ci="3" mb="0" cb="0"/><line nr="3739" mi="3" ci="0" mb="2" cb="0"/><line nr="3740" mi="3" ci="0" mb="0" cb="0"/><line nr="3742" mi="3" ci="0" mb="0" cb="0"/><line nr="3744" mi="0" ci="5" mb="2" cb="2"/><line nr="3745" mi="5" ci="5" mb="0" cb="0"/><line nr="3746" mi="5" ci="8" mb="0" cb="0"/><line nr="3749" mi="0" ci="1" mb="0" cb="0"/><line nr="3753" mi="0" ci="6" mb="0" cb="0"/><line nr="3754" mi="0" ci="2" mb="0" cb="0"/><line nr="3755" mi="0" ci="4" mb="0" cb="0"/><line nr="3756" mi="0" ci="5" mb="0" cb="0"/><line nr="3758" mi="0" ci="4" mb="1" cb="2"/><line nr="3760" mi="0" ci="4" mb="0" cb="0"/><line nr="3761" mi="0" ci="2" mb="0" cb="0"/><line nr="3762" mi="0" ci="4" mb="0" cb="0"/><line nr="3763" mi="0" ci="5" mb="0" cb="0"/><line nr="3764" mi="0" ci="2" mb="0" cb="0"/><line nr="3765" mi="0" ci="5" mb="0" cb="0"/><line nr="3766" mi="0" ci="4" mb="0" cb="0"/><line nr="3767" mi="0" ci="1" mb="0" cb="0"/><line nr="3769" mi="0" ci="2" mb="0" cb="0"/><line nr="3770" mi="0" ci="1" mb="0" cb="0"/><line nr="3772" mi="6" ci="0" mb="0" cb="0"/><line nr="3773" mi="4" ci="0" mb="0" cb="0"/><line nr="3774" mi="4" ci="0" mb="0" cb="0"/><line nr="3776" mi="0" ci="1" mb="0" cb="0"/><line nr="3777" mi="0" ci="2" mb="1" cb="1"/><line nr="3778" mi="0" ci="4" mb="0" cb="0"/><line nr="3779" mi="0" ci="3" mb="0" cb="0"/><line nr="3781" mi="4" ci="0" mb="0" cb="0"/><line nr="3783" mi="0" ci="3" mb="1" cb="1"/><line nr="3784" mi="0" ci="3" mb="0" cb="0"/><line nr="3786" mi="3" ci="0" mb="2" cb="0"/><line nr="3787" mi="3" ci="0" mb="0" cb="0"/><line nr="3789" mi="3" ci="0" mb="0" cb="0"/><line nr="3791" mi="0" ci="5" mb="1" cb="3"/><line nr="3792" mi="5" ci="5" mb="0" cb="0"/><line nr="3793" mi="5" ci="8" mb="0" cb="0"/><line nr="3796" mi="0" ci="1" mb="0" cb="0"/><line nr="3800" mi="0" ci="6" mb="0" cb="0"/><line nr="3801" mi="0" ci="2" mb="0" cb="0"/><line nr="3802" mi="0" ci="4" mb="0" cb="0"/><line nr="3803" mi="0" ci="7" mb="0" cb="0"/><line nr="3805" mi="0" ci="4" mb="0" cb="0"/><line nr="3806" mi="0" ci="4" mb="0" cb="2"/><line nr="3808" mi="0" ci="2" mb="0" cb="0"/><line nr="3809" mi="0" ci="1" mb="0" cb="0"/><line nr="3811" mi="0" ci="6" mb="0" cb="0"/><line nr="3814" mi="0" ci="4" mb="1" cb="2"/><line nr="3816" mi="0" ci="4" mb="0" cb="0"/><line nr="3817" mi="0" ci="5" mb="0" cb="0"/><line nr="3818" mi="0" ci="2" mb="0" cb="0"/><line nr="3819" mi="0" ci="5" mb="0" cb="0"/><line nr="3820" mi="0" ci="3" mb="0" cb="0"/><line nr="3821" mi="0" ci="1" mb="0" cb="0"/><line nr="3823" mi="0" ci="4" mb="0" cb="0"/><line nr="3824" mi="0" ci="5" mb="0" cb="0"/><line nr="3825" mi="0" ci="2" mb="0" cb="0"/><line nr="3826" mi="0" ci="5" mb="0" cb="0"/><line nr="3827" mi="0" ci="4" mb="0" cb="0"/><line nr="3828" mi="0" ci="1" mb="0" cb="0"/><line nr="3830" mi="6" ci="0" mb="0" cb="0"/><line nr="3831" mi="4" ci="0" mb="0" cb="0"/><line nr="3832" mi="4" ci="0" mb="0" cb="0"/><line nr="3834" mi="1" ci="0" mb="0" cb="0"/><line nr="3835" mi="2" ci="0" mb="2" cb="0"/><line nr="3836" mi="4" ci="0" mb="0" cb="0"/><line nr="3837" mi="3" ci="0" mb="0" cb="0"/><line nr="3839" mi="4" ci="0" mb="0" cb="0"/><line nr="3841" mi="3" ci="0" mb="2" cb="0"/><line nr="3842" mi="3" ci="0" mb="0" cb="0"/><line nr="3844" mi="3" ci="0" mb="2" cb="0"/><line nr="3845" mi="3" ci="0" mb="0" cb="0"/><line nr="3847" mi="3" ci="0" mb="0" cb="0"/><line nr="3849" mi="3" ci="2" mb="3" cb="1"/><line nr="3850" mi="10" ci="0" mb="0" cb="0"/><line nr="3851" mi="13" ci="0" mb="0" cb="0"/><line nr="3854" mi="0" ci="1" mb="0" cb="0"/><line nr="3858" mi="0" ci="6" mb="0" cb="0"/><line nr="3859" mi="0" ci="2" mb="0" cb="0"/><line nr="3860" mi="0" ci="4" mb="0" cb="0"/><line nr="3861" mi="0" ci="5" mb="0" cb="0"/><line nr="3863" mi="0" ci="4" mb="0" cb="2"/><line nr="3872" mi="0" ci="2" mb="0" cb="0"/><line nr="3873" mi="0" ci="1" mb="0" cb="0"/><line nr="3875" mi="0" ci="6" mb="0" cb="0"/><line nr="3876" mi="0" ci="4" mb="0" cb="2"/><line nr="3877" mi="0" ci="4" mb="0" cb="0"/><line nr="3878" mi="0" ci="5" mb="0" cb="0"/><line nr="3879" mi="0" ci="2" mb="0" cb="0"/><line nr="3880" mi="0" ci="5" mb="0" cb="0"/><line nr="3881" mi="0" ci="3" mb="0" cb="0"/><line nr="3883" mi="0" ci="4" mb="0" cb="2"/><line nr="3885" mi="0" ci="4" mb="0" cb="0"/><line nr="3886" mi="0" ci="5" mb="0" cb="0"/><line nr="3887" mi="0" ci="2" mb="0" cb="0"/><line nr="3888" mi="0" ci="5" mb="0" cb="0"/><line nr="3889" mi="0" ci="2" mb="0" cb="0"/><line nr="3890" mi="0" ci="1" mb="0" cb="0"/><line nr="3892" mi="0" ci="6" mb="0" cb="0"/><line nr="3893" mi="0" ci="4" mb="0" cb="2"/><line nr="3894" mi="0" ci="3" mb="0" cb="0"/><line nr="3895" mi="0" ci="4" mb="0" cb="2"/><line nr="3896" mi="0" ci="3" mb="0" cb="0"/><line nr="3897" mi="0" ci="4" mb="0" cb="2"/><line nr="3898" mi="0" ci="3" mb="0" cb="0"/><line nr="3899" mi="0" ci="4" mb="0" cb="2"/><line nr="3900" mi="0" ci="4" mb="0" cb="0"/><line nr="3901" mi="0" ci="2" mb="0" cb="0"/><line nr="3902" mi="0" ci="5" mb="0" cb="0"/><line nr="3904" mi="0" ci="4" mb="0" cb="2"/><line nr="3906" mi="0" ci="2" mb="0" cb="0"/><line nr="3907" mi="0" ci="1" mb="0" cb="0"/><line nr="3909" mi="0" ci="6" mb="0" cb="0"/><line nr="3910" mi="0" ci="4" mb="0" cb="2"/><line nr="3911" mi="0" ci="2" mb="0" cb="0"/><line nr="3912" mi="0" ci="4" mb="0" cb="0"/><line nr="3913" mi="0" ci="5" mb="0" cb="0"/><line nr="3914" mi="0" ci="4" mb="0" cb="2"/><line nr="3915" mi="0" ci="3" mb="0" cb="0"/><line nr="3916" mi="0" ci="4" mb="0" cb="2"/><line nr="3917" mi="0" ci="2" mb="0" cb="0"/><line nr="3918" mi="0" ci="3" mb="0" cb="0"/><line nr="3920" mi="0" ci="4" mb="1" cb="1"/><line nr="3922" mi="0" ci="2" mb="0" cb="0"/><line nr="3923" mi="0" ci="1" mb="0" cb="0"/><line nr="3925" mi="6" ci="0" mb="0" cb="0"/><line nr="3926" mi="4" ci="0" mb="0" cb="0"/><line nr="3927" mi="4" ci="0" mb="0" cb="0"/><line nr="3935" mi="0" ci="1" mb="0" cb="0"/><line nr="3936" mi="0" ci="2" mb="1" cb="1"/><line nr="3937" mi="0" ci="4" mb="0" cb="0"/><line nr="3938" mi="0" ci="3" mb="0" cb="0"/><line nr="3940" mi="4" ci="0" mb="0" cb="0"/><line nr="3942" mi="0" ci="3" mb="1" cb="1"/><line nr="3943" mi="0" ci="3" mb="0" cb="0"/><line nr="3945" mi="3" ci="0" mb="2" cb="0"/><line nr="3946" mi="3" ci="0" mb="0" cb="0"/><line nr="3948" mi="3" ci="0" mb="0" cb="0"/><line nr="3950" mi="0" ci="5" mb="1" cb="3"/><line nr="3951" mi="5" ci="5" mb="0" cb="0"/><line nr="3952" mi="5" ci="8" mb="0" cb="0"/><line nr="3955" mi="0" ci="1" mb="0" cb="0"/><line nr="3959" mi="0" ci="6" mb="0" cb="0"/><line nr="3960" mi="0" ci="2" mb="0" cb="0"/><line nr="3961" mi="0" ci="4" mb="0" cb="0"/><line nr="3962" mi="0" ci="7" mb="0" cb="0"/><line nr="3964" mi="0" ci="4" mb="0" cb="2"/><line nr="3967" mi="0" ci="2" mb="0" cb="0"/><line nr="3968" mi="0" ci="4" mb="0" cb="0"/><line nr="3969" mi="0" ci="4" mb="1" cb="2"/><line nr="3998" mi="0" ci="2" mb="0" cb="0"/><line nr="3999" mi="0" ci="1" mb="0" cb="0"/><line nr="4001" mi="0" ci="2" mb="0" cb="0"/><line nr="4002" mi="0" ci="1" mb="0" cb="0"/><line nr="4004" mi="6" ci="0" mb="0" cb="0"/><line nr="4005" mi="4" ci="0" mb="0" cb="0"/><line nr="4006" mi="4" ci="0" mb="0" cb="0"/><line nr="4010" mi="0" ci="6" mb="0" cb="0"/><line nr="4011" mi="0" ci="4" mb="0" cb="2"/><line nr="4012" mi="0" ci="2" mb="0" cb="0"/><line nr="4013" mi="0" ci="4" mb="0" cb="0"/><line nr="4014" mi="0" ci="4" mb="1" cb="2"/><line nr="4043" mi="0" ci="2" mb="0" cb="0"/><line nr="4044" mi="0" ci="1" mb="0" cb="0"/><line nr="4046" mi="0" ci="2" mb="0" cb="0"/><line nr="4047" mi="0" ci="1" mb="0" cb="0"/><line nr="4049" mi="6" ci="0" mb="0" cb="0"/><line nr="4050" mi="4" ci="0" mb="0" cb="0"/><line nr="4051" mi="4" ci="0" mb="0" cb="0"/><line nr="4053" mi="0" ci="4" mb="1" cb="1"/><line nr="4054" mi="0" ci="4" mb="0" cb="0"/><line nr="4055" mi="0" ci="2" mb="0" cb="0"/><line nr="4058" mi="0" ci="4" mb="0" cb="2"/><line nr="4061" mi="0" ci="1" mb="0" cb="0"/><line nr="4063" mi="0" ci="6" mb="0" cb="0"/><line nr="4064" mi="0" ci="1" mb="0" cb="0"/><line nr="4066" mi="0" ci="4" mb="0" cb="0"/><line nr="4067" mi="0" ci="3" mb="0" cb="0"/><line nr="4069" mi="0" ci="4" mb="0" cb="0"/><line nr="4070" mi="0" ci="4" mb="0" cb="0"/><line nr="4071" mi="0" ci="4" mb="1" cb="2"/><line nr="4100" mi="0" ci="2" mb="0" cb="0"/><line nr="4101" mi="0" ci="1" mb="0" cb="0"/><line nr="4103" mi="0" ci="2" mb="0" cb="0"/><line nr="4104" mi="0" ci="1" mb="0" cb="0"/><line nr="4106" mi="6" ci="0" mb="0" cb="0"/><line nr="4107" mi="4" ci="0" mb="0" cb="0"/><line nr="4108" mi="4" ci="0" mb="0" cb="0"/><line nr="4111" mi="4" ci="0" mb="0" cb="0"/><line nr="4112" mi="4" ci="0" mb="0" cb="0"/><line nr="4115" mi="1" ci="0" mb="0" cb="0"/><line nr="4116" mi="2" ci="0" mb="2" cb="0"/><line nr="4117" mi="4" ci="0" mb="0" cb="0"/><line nr="4118" mi="3" ci="0" mb="0" cb="0"/><line nr="4120" mi="4" ci="0" mb="0" cb="0"/><line nr="4122" mi="3" ci="0" mb="2" cb="0"/><line nr="4123" mi="3" ci="0" mb="0" cb="0"/><line nr="4125" mi="3" ci="0" mb="2" cb="0"/><line nr="4126" mi="3" ci="0" mb="0" cb="0"/><line nr="4128" mi="3" ci="0" mb="0" cb="0"/><line nr="4130" mi="3" ci="2" mb="3" cb="1"/><line nr="4131" mi="5" ci="5" mb="0" cb="0"/><line nr="4132" mi="7" ci="6" mb="0" cb="0"/><line nr="4135" mi="0" ci="1" mb="0" cb="0"/><line nr="4139" mi="0" ci="6" mb="0" cb="0"/><line nr="4140" mi="0" ci="2" mb="0" cb="0"/><line nr="4141" mi="0" ci="4" mb="0" cb="0"/><line nr="4142" mi="0" ci="5" mb="0" cb="0"/><line nr="4144" mi="0" ci="4" mb="0" cb="2"/><line nr="4145" mi="0" ci="4" mb="0" cb="0"/><line nr="4146" mi="0" ci="5" mb="0" cb="0"/><line nr="4147" mi="0" ci="4" mb="0" cb="2"/><line nr="4148" mi="0" ci="4" mb="0" cb="0"/><line nr="4149" mi="0" ci="5" mb="0" cb="0"/><line nr="4150" mi="0" ci="4" mb="1" cb="1"/><line nr="4151" mi="4" ci="0" mb="0" cb="0"/><line nr="4152" mi="3" ci="0" mb="0" cb="0"/><line nr="4153" mi="0" ci="4" mb="0" cb="2"/><line nr="4154" mi="0" ci="3" mb="0" cb="0"/><line nr="4156" mi="0" ci="4" mb="1" cb="3"/><line nr="4158" mi="0" ci="4" mb="0" cb="0"/><line nr="4159" mi="0" ci="2" mb="0" cb="0"/><line nr="4160" mi="0" ci="4" mb="0" cb="0"/><line nr="4161" mi="0" ci="5" mb="0" cb="0"/><line nr="4162" mi="0" ci="2" mb="0" cb="0"/><line nr="4163" mi="0" ci="5" mb="0" cb="0"/><line nr="4164" mi="0" ci="2" mb="0" cb="0"/><line nr="4165" mi="0" ci="1" mb="0" cb="0"/><line nr="4167" mi="0" ci="4" mb="0" cb="0"/><line nr="4168" mi="0" ci="4" mb="0" cb="0"/><line nr="4169" mi="0" ci="5" mb="0" cb="0"/><line nr="4170" mi="0" ci="2" mb="0" cb="0"/><line nr="4171" mi="0" ci="5" mb="0" cb="0"/><line nr="4172" mi="0" ci="4" mb="0" cb="0"/><line nr="4173" mi="0" ci="1" mb="0" cb="0"/><line nr="4175" mi="0" ci="2" mb="0" cb="0"/><line nr="4176" mi="0" ci="5" mb="0" cb="0"/><line nr="4177" mi="0" ci="2" mb="0" cb="0"/><line nr="4178" mi="0" ci="5" mb="0" cb="0"/><line nr="4179" mi="0" ci="2" mb="0" cb="0"/><line nr="4180" mi="0" ci="1" mb="0" cb="0"/><line nr="4182" mi="6" ci="0" mb="0" cb="0"/><line nr="4183" mi="4" ci="0" mb="0" cb="0"/><line nr="4184" mi="4" ci="0" mb="0" cb="0"/><line nr="4187" mi="0" ci="1" mb="0" cb="0"/><line nr="4188" mi="0" ci="2" mb="1" cb="1"/><line nr="4189" mi="0" ci="4" mb="0" cb="0"/><line nr="4190" mi="0" ci="3" mb="0" cb="0"/><line nr="4192" mi="4" ci="0" mb="0" cb="0"/><line nr="4194" mi="0" ci="3" mb="1" cb="1"/><line nr="4195" mi="0" ci="3" mb="0" cb="0"/><line nr="4197" mi="3" ci="0" mb="2" cb="0"/><line nr="4198" mi="3" ci="0" mb="0" cb="0"/><line nr="4200" mi="3" ci="0" mb="0" cb="0"/><line nr="4202" mi="0" ci="5" mb="1" cb="3"/><line nr="4203" mi="5" ci="5" mb="0" cb="0"/><line nr="4204" mi="5" ci="8" mb="0" cb="0"/><line nr="4207" mi="0" ci="1" mb="0" cb="0"/><line nr="4211" mi="0" ci="6" mb="0" cb="0"/><line nr="4212" mi="0" ci="2" mb="0" cb="0"/><line nr="4213" mi="0" ci="4" mb="0" cb="0"/><line nr="4214" mi="0" ci="5" mb="0" cb="0"/><line nr="4216" mi="0" ci="4" mb="1" cb="7"/><line nr="4218" mi="0" ci="4" mb="0" cb="0"/><line nr="4219" mi="0" ci="5" mb="0" cb="0"/><line nr="4220" mi="0" ci="2" mb="0" cb="0"/><line nr="4221" mi="0" ci="5" mb="0" cb="0"/><line nr="4222" mi="0" ci="9" mb="0" cb="0"/><line nr="4223" mi="0" ci="1" mb="0" cb="0"/><line nr="4225" mi="0" ci="4" mb="0" cb="0"/><line nr="4226" mi="0" ci="5" mb="0" cb="0"/><line nr="4227" mi="0" ci="2" mb="0" cb="0"/><line nr="4228" mi="0" ci="5" mb="0" cb="0"/><line nr="4229" mi="0" ci="9" mb="0" cb="0"/><line nr="4230" mi="0" ci="1" mb="0" cb="0"/><line nr="4232" mi="0" ci="4" mb="0" cb="0"/><line nr="4233" mi="0" ci="5" mb="0" cb="0"/><line nr="4234" mi="0" ci="2" mb="0" cb="0"/><line nr="4235" mi="0" ci="5" mb="0" cb="0"/><line nr="4236" mi="0" ci="11" mb="0" cb="0"/><line nr="4237" mi="0" ci="1" mb="0" cb="0"/><line nr="4239" mi="0" ci="4" mb="0" cb="0"/><line nr="4240" mi="0" ci="5" mb="0" cb="0"/><line nr="4241" mi="0" ci="2" mb="0" cb="0"/><line nr="4242" mi="0" ci="5" mb="0" cb="0"/><line nr="4243" mi="0" ci="6" mb="0" cb="0"/><line nr="4244" mi="0" ci="1" mb="0" cb="0"/><line nr="4246" mi="0" ci="4" mb="0" cb="0"/><line nr="4247" mi="0" ci="5" mb="0" cb="0"/><line nr="4248" mi="0" ci="2" mb="0" cb="0"/><line nr="4249" mi="0" ci="5" mb="0" cb="0"/><line nr="4250" mi="0" ci="6" mb="0" cb="0"/><line nr="4251" mi="0" ci="1" mb="0" cb="0"/><line nr="4254" mi="0" ci="2" mb="0" cb="0"/><line nr="4255" mi="0" ci="1" mb="0" cb="0"/><line nr="4257" mi="0" ci="2" mb="0" cb="0"/><line nr="4258" mi="0" ci="1" mb="0" cb="0"/><line nr="4260" mi="6" ci="0" mb="0" cb="0"/><line nr="4261" mi="4" ci="0" mb="0" cb="0"/><line nr="4262" mi="4" ci="0" mb="0" cb="0"/><line nr="4264" mi="0" ci="1" mb="0" cb="0"/><line nr="4265" mi="0" ci="2" mb="1" cb="1"/><line nr="4266" mi="4" ci="0" mb="0" cb="0"/><line nr="4267" mi="3" ci="0" mb="0" cb="0"/><line nr="4269" mi="0" ci="4" mb="0" cb="0"/><line nr="4271" mi="0" ci="3" mb="1" cb="1"/><line nr="4272" mi="0" ci="3" mb="0" cb="0"/><line nr="4274" mi="3" ci="0" mb="2" cb="0"/><line nr="4275" mi="3" ci="0" mb="0" cb="0"/><line nr="4277" mi="3" ci="0" mb="0" cb="0"/><line nr="4279" mi="0" ci="5" mb="1" cb="3"/><line nr="4280" mi="5" ci="5" mb="0" cb="0"/><line nr="4281" mi="5" ci="8" mb="0" cb="0"/><line nr="4284" mi="0" ci="1" mb="0" cb="0"/><line nr="4288" mi="0" ci="6" mb="0" cb="0"/><line nr="4289" mi="0" ci="2" mb="0" cb="0"/><line nr="4290" mi="0" ci="4" mb="0" cb="0"/><line nr="4291" mi="0" ci="5" mb="0" cb="0"/><line nr="4293" mi="0" ci="4" mb="1" cb="2"/><line nr="4295" mi="0" ci="4" mb="0" cb="0"/><line nr="4296" mi="0" ci="5" mb="0" cb="0"/><line nr="4297" mi="0" ci="2" mb="0" cb="0"/><line nr="4298" mi="0" ci="5" mb="0" cb="0"/><line nr="4299" mi="0" ci="2" mb="0" cb="0"/><line nr="4300" mi="0" ci="1" mb="0" cb="0"/><line nr="4302" mi="0" ci="4" mb="0" cb="0"/><line nr="4303" mi="0" ci="1" mb="0" cb="0"/><line nr="4305" mi="6" ci="0" mb="0" cb="0"/><line nr="4306" mi="4" ci="0" mb="0" cb="0"/><line nr="4307" mi="4" ci="0" mb="0" cb="0"/><line nr="4310" mi="3" ci="2" mb="2" cb="2"/><line nr="4311" mi="5" ci="5" mb="0" cb="0"/><line nr="4312" mi="7" ci="6" mb="0" cb="0"/><line nr="4315" mi="0" ci="1" mb="0" cb="0"/><line nr="4319" mi="0" ci="6" mb="0" cb="0"/><line nr="4320" mi="0" ci="2" mb="0" cb="0"/><line nr="4321" mi="0" ci="4" mb="0" cb="0"/><line nr="4322" mi="0" ci="5" mb="0" cb="0"/><line nr="4324" mi="0" ci="4" mb="0" cb="0"/><line nr="4326" mi="3" ci="2" mb="3" cb="1"/><line nr="4327" mi="5" ci="5" mb="0" cb="0"/><line nr="4328" mi="7" ci="6" mb="0" cb="0"/><line nr="4331" mi="0" ci="1" mb="0" cb="0"/><line nr="4335" mi="0" ci="6" mb="0" cb="0"/><line nr="4336" mi="0" ci="2" mb="0" cb="0"/><line nr="4337" mi="0" ci="4" mb="0" cb="0"/><line nr="4338" mi="0" ci="5" mb="0" cb="0"/><line nr="4340" mi="0" ci="4" mb="0" cb="0"/><line nr="4341" mi="0" ci="4" mb="0" cb="2"/><line nr="4370" mi="0" ci="2" mb="0" cb="0"/><line nr="4371" mi="0" ci="1" mb="0" cb="0"/><line nr="4373" mi="0" ci="6" mb="0" cb="0"/><line nr="4376" mi="0" ci="4" mb="0" cb="0"/><line nr="4377" mi="0" ci="1" mb="0" cb="0"/><line nr="4378" mi="0" ci="2" mb="1" cb="1"/><line nr="4379" mi="0" ci="4" mb="0" cb="0"/><line nr="4380" mi="0" ci="3" mb="0" cb="0"/><line nr="4382" mi="4" ci="0" mb="0" cb="0"/><line nr="4384" mi="0" ci="3" mb="1" cb="1"/><line nr="4385" mi="0" ci="3" mb="0" cb="0"/><line nr="4387" mi="3" ci="0" mb="2" cb="0"/><line nr="4388" mi="3" ci="0" mb="0" cb="0"/><line nr="4390" mi="3" ci="0" mb="0" cb="0"/><line nr="4392" mi="0" ci="5" mb="2" cb="2"/><line nr="4393" mi="5" ci="5" mb="0" cb="0"/><line nr="4394" mi="5" ci="8" mb="0" cb="0"/><line nr="4397" mi="0" ci="1" mb="0" cb="0"/><line nr="4401" mi="0" ci="6" mb="0" cb="0"/><line nr="4402" mi="0" ci="2" mb="0" cb="0"/><line nr="4403" mi="0" ci="4" mb="0" cb="0"/><line nr="4404" mi="0" ci="5" mb="0" cb="0"/><line nr="4406" mi="0" ci="2" mb="0" cb="0"/><line nr="4409" mi="0" ci="4" mb="0" cb="2"/><line nr="4412" mi="0" ci="1" mb="0" cb="0"/><line nr="4414" mi="0" ci="6" mb="0" cb="0"/><line nr="4415" mi="0" ci="1" mb="0" cb="0"/><line nr="4417" mi="0" ci="4" mb="0" cb="0"/><line nr="4418" mi="0" ci="3" mb="0" cb="0"/><line nr="4420" mi="0" ci="1" mb="0" cb="0"/><line nr="4421" mi="0" ci="2" mb="1" cb="1"/><line nr="4422" mi="0" ci="4" mb="0" cb="0"/><line nr="4423" mi="0" ci="3" mb="0" cb="0"/><line nr="4425" mi="4" ci="0" mb="0" cb="0"/><line nr="4427" mi="0" ci="3" mb="1" cb="1"/><line nr="4428" mi="0" ci="3" mb="0" cb="0"/><line nr="4430" mi="3" ci="0" mb="2" cb="0"/><line nr="4431" mi="3" ci="0" mb="0" cb="0"/><line nr="4433" mi="3" ci="0" mb="0" cb="0"/><line nr="4435" mi="0" ci="5" mb="2" cb="2"/><line nr="4436" mi="5" ci="5" mb="0" cb="0"/><line nr="4437" mi="5" ci="8" mb="0" cb="0"/><line nr="4440" mi="0" ci="1" mb="0" cb="0"/><line nr="4444" mi="0" ci="6" mb="0" cb="0"/><line nr="4445" mi="0" ci="2" mb="0" cb="0"/><line nr="4446" mi="0" ci="4" mb="0" cb="0"/><line nr="4447" mi="0" ci="5" mb="0" cb="0"/><line nr="4449" mi="0" ci="4" mb="0" cb="0"/><line nr="4452" mi="0" ci="4" mb="0" cb="2"/><line nr="4455" mi="0" ci="1" mb="0" cb="0"/><line nr="4457" mi="0" ci="6" mb="0" cb="0"/><line nr="4458" mi="0" ci="1" mb="0" cb="0"/><line nr="4460" mi="0" ci="2" mb="0" cb="0"/><line nr="4461" mi="0" ci="3" mb="0" cb="0"/><line nr="4463" mi="0" ci="4" mb="0" cb="2"/><line nr="4464" mi="0" ci="2" mb="0" cb="0"/><line nr="4465" mi="0" ci="3" mb="0" cb="0"/><line nr="4467" mi="0" ci="4" mb="1" cb="1"/><line nr="4469" mi="0" ci="2" mb="0" cb="0"/><line nr="4470" mi="0" ci="4" mb="1" cb="1"/><line nr="4472" mi="2" ci="0" mb="0" cb="0"/><line nr="4473" mi="1" ci="0" mb="0" cb="0"/><line nr="4475" mi="0" ci="6" mb="0" cb="0"/><line nr="4478" mi="0" ci="4" mb="1" cb="2"/><line nr="4480" mi="0" ci="2" mb="0" cb="0"/><line nr="4481" mi="0" ci="1" mb="0" cb="0"/><line nr="4483" mi="0" ci="2" mb="0" cb="0"/><line nr="4484" mi="0" ci="4" mb="0" cb="2"/><line nr="4486" mi="0" ci="2" mb="0" cb="0"/><line nr="4487" mi="0" ci="1" mb="0" cb="0"/><line nr="4489" mi="0" ci="6" mb="0" cb="0"/><line nr="4492" mi="0" ci="1" mb="0" cb="0"/><line nr="4494" mi="6" ci="0" mb="0" cb="0"/><line nr="4495" mi="4" ci="0" mb="0" cb="0"/><line nr="4496" mi="4" ci="0" mb="0" cb="0"/><line nr="4500" mi="6" ci="0" mb="0" cb="0"/><line nr="4501" mi="4" ci="0" mb="0" cb="0"/><line nr="4502" mi="4" ci="0" mb="0" cb="0"/><line nr="4505" mi="0" ci="1" mb="0" cb="0"/><line nr="4506" mi="0" ci="2" mb="1" cb="1"/><line nr="4507" mi="0" ci="4" mb="0" cb="0"/><line nr="4508" mi="0" ci="3" mb="0" cb="0"/><line nr="4510" mi="4" ci="0" mb="0" cb="0"/><line nr="4512" mi="0" ci="3" mb="1" cb="1"/><line nr="4513" mi="0" ci="3" mb="0" cb="0"/><line nr="4515" mi="3" ci="0" mb="2" cb="0"/><line nr="4516" mi="3" ci="0" mb="0" cb="0"/><line nr="4518" mi="3" ci="0" mb="0" cb="0"/><line nr="4520" mi="0" ci="5" mb="2" cb="2"/><line nr="4521" mi="5" ci="5" mb="0" cb="0"/><line nr="4522" mi="5" ci="8" mb="0" cb="0"/><line nr="4525" mi="0" ci="1" mb="0" cb="0"/><line nr="4533" mi="0" ci="6" mb="0" cb="0"/><line nr="4534" mi="0" ci="2" mb="0" cb="0"/><line nr="4535" mi="0" ci="4" mb="0" cb="0"/><line nr="4536" mi="0" ci="5" mb="0" cb="0"/><line nr="4538" mi="0" ci="4" mb="0" cb="2"/><line nr="4541" mi="0" ci="4" mb="0" cb="0"/><line nr="4542" mi="0" ci="2" mb="0" cb="0"/><line nr="4543" mi="0" ci="4" mb="0" cb="0"/><line nr="4544" mi="1" ci="4" mb="1" cb="1"/><line nr="4552" mi="0" ci="4" mb="0" cb="2"/><line nr="4557" mi="0" ci="4" mb="0" cb="0"/><line nr="4558" mi="0" ci="5" mb="0" cb="0"/><line nr="4561" mi="0" ci="4" mb="1" cb="1"/><line nr="4565" mi="0" ci="4" mb="0" cb="0"/><line nr="4566" mi="0" ci="4" mb="0" cb="0"/><line nr="4567" mi="0" ci="4" mb="0" cb="2"/><line nr="4570" mi="0" ci="1" mb="0" cb="0"/><line nr="4572" mi="0" ci="6" mb="0" cb="0"/><line nr="4573" mi="0" ci="1" mb="0" cb="0"/><line nr="4576" mi="0" ci="2" mb="0" cb="0"/><line nr="4577" mi="0" ci="1" mb="0" cb="0"/><line nr="4579" mi="6" ci="0" mb="0" cb="0"/><line nr="4580" mi="4" ci="0" mb="0" cb="0"/><line nr="4581" mi="4" ci="0" mb="0" cb="0"/><line nr="4584" mi="1" ci="0" mb="0" cb="0"/><line nr="4585" mi="2" ci="0" mb="2" cb="0"/><line nr="4586" mi="4" ci="0" mb="0" cb="0"/><line nr="4587" mi="3" ci="0" mb="0" cb="0"/><line nr="4589" mi="4" ci="0" mb="0" cb="0"/><line nr="4591" mi="3" ci="0" mb="2" cb="0"/><line nr="4592" mi="3" ci="0" mb="0" cb="0"/><line nr="4594" mi="3" ci="0" mb="2" cb="0"/><line nr="4595" mi="3" ci="0" mb="0" cb="0"/><line nr="4597" mi="3" ci="0" mb="0" cb="0"/><line nr="4599" mi="3" ci="2" mb="3" cb="1"/><line nr="4600" mi="5" ci="5" mb="0" cb="0"/><line nr="4601" mi="7" ci="6" mb="0" cb="0"/><line nr="4604" mi="0" ci="1" mb="0" cb="0"/><line nr="4611" mi="0" ci="6" mb="0" cb="0"/><line nr="4612" mi="0" ci="2" mb="0" cb="0"/><line nr="4613" mi="0" ci="4" mb="0" cb="0"/><line nr="4614" mi="0" ci="5" mb="0" cb="0"/><line nr="4616" mi="0" ci="3" mb="1" cb="1"/><line nr="4617" mi="3" ci="0" mb="0" cb="0"/><line nr="4618" mi="0" ci="4" mb="0" cb="2"/><line nr="4619" mi="0" ci="3" mb="0" cb="0"/><line nr="4621" mi="0" ci="4" mb="1" cb="14"/><line nr="4623" mi="0" ci="2" mb="0" cb="0"/><line nr="4624" mi="0" ci="1" mb="0" cb="0"/><line nr="4626" mi="0" ci="2" mb="0" cb="0"/><line nr="4627" mi="0" ci="1" mb="0" cb="0"/><line nr="4652" mi="0" ci="2" mb="0" cb="0"/><line nr="4653" mi="0" ci="4" mb="0" cb="0"/><line nr="4654" mi="0" ci="1" mb="0" cb="0"/><line nr="4656" mi="0" ci="2" mb="0" cb="0"/><line nr="4657" mi="0" ci="1" mb="0" cb="0"/><line nr="4659" mi="0" ci="2" mb="0" cb="0"/><line nr="4660" mi="0" ci="1" mb="0" cb="0"/><line nr="4662" mi="0" ci="2" mb="0" cb="0"/><line nr="4663" mi="0" ci="1" mb="0" cb="0"/><line nr="4665" mi="0" ci="2" mb="0" cb="0"/><line nr="4666" mi="0" ci="1" mb="0" cb="0"/><line nr="4668" mi="0" ci="2" mb="0" cb="0"/><line nr="4669" mi="0" ci="1" mb="0" cb="0"/><line nr="4671" mi="0" ci="2" mb="0" cb="0"/><line nr="4672" mi="0" ci="1" mb="0" cb="0"/><line nr="4674" mi="0" ci="2" mb="0" cb="0"/><line nr="4675" mi="0" ci="1" mb="0" cb="0"/><line nr="4677" mi="0" ci="2" mb="0" cb="0"/><line nr="4678" mi="0" ci="1" mb="0" cb="0"/><line nr="4680" mi="0" ci="2" mb="0" cb="0"/><line nr="4681" mi="0" ci="1" mb="0" cb="0"/><line nr="4683" mi="0" ci="2" mb="0" cb="0"/><line nr="4684" mi="0" ci="1" mb="0" cb="0"/><line nr="4686" mi="0" ci="2" mb="0" cb="0"/><line nr="4687" mi="0" ci="1" mb="0" cb="0"/><line nr="4689" mi="6" ci="0" mb="0" cb="0"/><line nr="4690" mi="4" ci="0" mb="0" cb="0"/><line nr="4691" mi="4" ci="0" mb="0" cb="0"/><line nr="4694" mi="0" ci="1" mb="0" cb="0"/><line nr="4695" mi="0" ci="2" mb="1" cb="1"/><line nr="4696" mi="0" ci="4" mb="0" cb="0"/><line nr="4697" mi="0" ci="3" mb="0" cb="0"/><line nr="4699" mi="4" ci="0" mb="0" cb="0"/><line nr="4701" mi="0" ci="3" mb="1" cb="1"/><line nr="4702" mi="0" ci="3" mb="0" cb="0"/><line nr="4704" mi="3" ci="0" mb="2" cb="0"/><line nr="4705" mi="3" ci="0" mb="0" cb="0"/><line nr="4707" mi="3" ci="0" mb="0" cb="0"/><line nr="4709" mi="0" ci="5" mb="2" cb="2"/><line nr="4710" mi="5" ci="5" mb="0" cb="0"/><line nr="4711" mi="5" ci="8" mb="0" cb="0"/><line nr="4714" mi="0" ci="1" mb="0" cb="0"/><line nr="4718" mi="0" ci="6" mb="0" cb="0"/><line nr="4719" mi="0" ci="2" mb="0" cb="0"/><line nr="4720" mi="0" ci="4" mb="0" cb="0"/><line nr="4721" mi="0" ci="5" mb="0" cb="0"/><line nr="4723" mi="0" ci="4" mb="0" cb="0"/><line nr="4724" mi="0" ci="4" mb="0" cb="0"/><line nr="4725" mi="0" ci="4" mb="0" cb="0"/><line nr="4726" mi="0" ci="2" mb="0" cb="0"/><line nr="4727" mi="1" ci="0" mb="0" cb="0"/><line nr="4728" mi="2" ci="0" mb="2" cb="0"/><line nr="4729" mi="4" ci="0" mb="0" cb="0"/><line nr="4730" mi="3" ci="0" mb="0" cb="0"/><line nr="4732" mi="4" ci="0" mb="0" cb="0"/><line nr="4734" mi="3" ci="0" mb="2" cb="0"/><line nr="4735" mi="3" ci="0" mb="0" cb="0"/><line nr="4737" mi="3" ci="0" mb="2" cb="0"/><line nr="4738" mi="3" ci="0" mb="0" cb="0"/><line nr="4740" mi="3" ci="0" mb="0" cb="0"/><line nr="4742" mi="3" ci="2" mb="3" cb="1"/><line nr="4743" mi="5" ci="5" mb="0" cb="0"/><line nr="4744" mi="7" ci="6" mb="0" cb="0"/><line nr="4747" mi="0" ci="1" mb="0" cb="0"/><line nr="4751" mi="0" ci="6" mb="0" cb="0"/><line nr="4752" mi="0" ci="2" mb="0" cb="0"/><line nr="4753" mi="0" ci="4" mb="0" cb="0"/><line nr="4754" mi="0" ci="5" mb="0" cb="0"/><line nr="4756" mi="0" ci="4" mb="0" cb="0"/><line nr="4759" mi="0" ci="4" mb="0" cb="2"/><line nr="4764" mi="0" ci="3" mb="0" cb="0"/><line nr="4766" mi="0" ci="4" mb="0" cb="0"/><line nr="4767" mi="0" ci="5" mb="0" cb="0"/><line nr="4768" mi="0" ci="2" mb="0" cb="0"/><line nr="4769" mi="0" ci="5" mb="0" cb="0"/><line nr="4770" mi="0" ci="6" mb="0" cb="2"/><line nr="4771" mi="0" ci="1" mb="0" cb="0"/><line nr="4772" mi="0" ci="2" mb="1" cb="1"/><line nr="4773" mi="0" ci="4" mb="0" cb="0"/><line nr="4774" mi="0" ci="3" mb="0" cb="0"/><line nr="4776" mi="4" ci="0" mb="0" cb="0"/><line nr="4778" mi="0" ci="3" mb="1" cb="1"/><line nr="4779" mi="0" ci="3" mb="0" cb="0"/><line nr="4781" mi="3" ci="0" mb="2" cb="0"/><line nr="4782" mi="3" ci="0" mb="0" cb="0"/><line nr="4784" mi="3" ci="0" mb="0" cb="0"/><line nr="4786" mi="0" ci="5" mb="2" cb="2"/><line nr="4787" mi="10" ci="0" mb="0" cb="0"/><line nr="4788" mi="11" ci="2" mb="0" cb="0"/><line nr="4791" mi="0" ci="1" mb="0" cb="0"/><line nr="4795" mi="0" ci="6" mb="0" cb="0"/><line nr="4796" mi="0" ci="2" mb="0" cb="0"/><line nr="4797" mi="0" ci="4" mb="0" cb="0"/><line nr="4798" mi="0" ci="5" mb="0" cb="0"/><line nr="4800" mi="0" ci="3" mb="0" cb="2"/><line nr="4801" mi="0" ci="3" mb="0" cb="0"/><line nr="4802" mi="0" ci="4" mb="0" cb="2"/><line nr="4803" mi="0" ci="2" mb="0" cb="0"/><line nr="4804" mi="0" ci="5" mb="0" cb="0"/><line nr="4805" mi="0" ci="4" mb="0" cb="2"/><line nr="4806" mi="0" ci="3" mb="0" cb="0"/><line nr="4807" mi="0" ci="4" mb="1" cb="1"/><line nr="4810" mi="0" ci="4" mb="0" cb="2"/><line nr="4813" mi="0" ci="1" mb="0" cb="0"/><line nr="4815" mi="0" ci="6" mb="0" cb="0"/><line nr="4816" mi="0" ci="1" mb="0" cb="0"/><line nr="4818" mi="0" ci="3" mb="0" cb="0"/><line nr="4820" mi="0" ci="4" mb="0" cb="0"/><line nr="4822" mi="4" ci="0" mb="0" cb="0"/><line nr="4823" mi="4" ci="0" mb="0" cb="0"/><line nr="4825" mi="0" ci="1" mb="0" cb="0"/><line nr="4826" mi="0" ci="2" mb="1" cb="1"/><line nr="4827" mi="0" ci="4" mb="0" cb="0"/><line nr="4828" mi="0" ci="3" mb="0" cb="0"/><line nr="4830" mi="4" ci="0" mb="0" cb="0"/><line nr="4832" mi="0" ci="3" mb="1" cb="1"/><line nr="4833" mi="0" ci="3" mb="0" cb="0"/><line nr="4835" mi="3" ci="0" mb="2" cb="0"/><line nr="4836" mi="3" ci="0" mb="0" cb="0"/><line nr="4838" mi="3" ci="0" mb="0" cb="0"/><line nr="4840" mi="0" ci="5" mb="2" cb="2"/><line nr="4841" mi="5" ci="5" mb="0" cb="0"/><line nr="4842" mi="5" ci="8" mb="0" cb="0"/><line nr="4845" mi="0" ci="1" mb="0" cb="0"/><line nr="4849" mi="0" ci="6" mb="0" cb="0"/><line nr="4850" mi="0" ci="2" mb="0" cb="0"/><line nr="4851" mi="0" ci="4" mb="0" cb="0"/><line nr="4852" mi="0" ci="5" mb="0" cb="0"/><line nr="4856" mi="0" ci="4" mb="0" cb="2"/><line nr="4860" mi="0" ci="1" mb="0" cb="0"/><line nr="4862" mi="0" ci="6" mb="0" cb="0"/><line nr="4863" mi="0" ci="1" mb="0" cb="0"/><line nr="4865" mi="0" ci="4" mb="1" cb="2"/><line nr="4867" mi="0" ci="4" mb="0" cb="0"/><line nr="4868" mi="0" ci="3" mb="0" cb="0"/><line nr="4869" mi="0" ci="1" mb="0" cb="0"/><line nr="4871" mi="0" ci="2" mb="0" cb="0"/><line nr="4872" mi="0" ci="1" mb="0" cb="0"/><line nr="4874" mi="6" ci="0" mb="0" cb="0"/><line nr="4875" mi="4" ci="0" mb="0" cb="0"/><line nr="4876" mi="4" ci="0" mb="0" cb="0"/><line nr="4879" mi="0" ci="2" mb="0" cb="0"/><line nr="4880" mi="0" ci="2" mb="0" cb="0"/><line nr="4883" mi="0" ci="4" mb="0" cb="2"/><line nr="4886" mi="0" ci="1" mb="0" cb="0"/><line nr="4888" mi="0" ci="6" mb="0" cb="0"/><line nr="4889" mi="0" ci="1" mb="0" cb="0"/><line nr="4891" mi="0" ci="4" mb="0" cb="0"/><line nr="4892" mi="0" ci="3" mb="0" cb="0"/><line nr="4894" mi="0" ci="1" mb="0" cb="0"/><line nr="4895" mi="0" ci="2" mb="1" cb="1"/><line nr="4896" mi="0" ci="4" mb="0" cb="0"/><line nr="4897" mi="0" ci="3" mb="0" cb="0"/><line nr="4899" mi="4" ci="0" mb="0" cb="0"/><line nr="4901" mi="0" ci="3" mb="1" cb="1"/><line nr="4902" mi="0" ci="3" mb="0" cb="0"/><line nr="4904" mi="3" ci="0" mb="2" cb="0"/><line nr="4905" mi="3" ci="0" mb="0" cb="0"/><line nr="4907" mi="3" ci="0" mb="0" cb="0"/><line nr="4909" mi="0" ci="5" mb="2" cb="2"/><line nr="4910" mi="5" ci="5" mb="0" cb="0"/><line nr="4911" mi="5" ci="8" mb="0" cb="0"/><line nr="4914" mi="0" ci="1" mb="0" cb="0"/><line nr="4918" mi="0" ci="6" mb="0" cb="0"/><line nr="4919" mi="0" ci="2" mb="0" cb="0"/><line nr="4920" mi="0" ci="4" mb="0" cb="0"/><line nr="4921" mi="0" ci="5" mb="0" cb="0"/><line nr="4923" mi="0" ci="4" mb="0" cb="0"/><line nr="4925" mi="3" ci="2" mb="3" cb="1"/><line nr="4926" mi="5" ci="5" mb="0" cb="0"/><line nr="4927" mi="7" ci="6" mb="0" cb="0"/><line nr="4930" mi="0" ci="1" mb="0" cb="0"/><line nr="4934" mi="0" ci="6" mb="0" cb="0"/><line nr="4935" mi="0" ci="2" mb="0" cb="0"/><line nr="4936" mi="0" ci="4" mb="0" cb="0"/><line nr="4937" mi="0" ci="5" mb="0" cb="0"/><line nr="4939" mi="0" ci="4" mb="0" cb="3"/><line nr="4941" mi="0" ci="2" mb="0" cb="0"/><line nr="4942" mi="0" ci="1" mb="0" cb="0"/><line nr="4944" mi="0" ci="2" mb="0" cb="0"/><line nr="4945" mi="0" ci="1" mb="0" cb="0"/><line nr="4947" mi="0" ci="6" mb="0" cb="0"/><line nr="4948" mi="0" ci="4" mb="0" cb="2"/><line nr="4949" mi="0" ci="2" mb="0" cb="0"/><line nr="4950" mi="0" ci="2" mb="0" cb="0"/><line nr="4951" mi="0" ci="3" mb="0" cb="0"/><line nr="4953" mi="0" ci="4" mb="1" cb="1"/><line nr="4976" mi="0" ci="2" mb="0" cb="0"/><line nr="4977" mi="0" ci="1" mb="0" cb="0"/><line nr="4979" mi="6" ci="0" mb="0" cb="0"/><line nr="4980" mi="4" ci="0" mb="0" cb="0"/><line nr="4981" mi="4" ci="0" mb="0" cb="0"/><line nr="4985" mi="0" ci="1" mb="0" cb="0"/><line nr="4986" mi="0" ci="2" mb="1" cb="1"/><line nr="4987" mi="0" ci="4" mb="0" cb="0"/><line nr="4988" mi="0" ci="3" mb="0" cb="0"/><line nr="4990" mi="4" ci="0" mb="0" cb="0"/><line nr="4992" mi="0" ci="3" mb="1" cb="1"/><line nr="4993" mi="0" ci="3" mb="0" cb="0"/><line nr="4995" mi="3" ci="0" mb="2" cb="0"/><line nr="4996" mi="3" ci="0" mb="0" cb="0"/><line nr="4998" mi="3" ci="0" mb="0" cb="0"/><line nr="5000" mi="0" ci="5" mb="2" cb="2"/><line nr="5001" mi="5" ci="5" mb="0" cb="0"/><line nr="5002" mi="5" ci="8" mb="0" cb="0"/><line nr="5005" mi="0" ci="1" mb="0" cb="0"/><line nr="5009" mi="0" ci="6" mb="0" cb="0"/><line nr="5010" mi="0" ci="2" mb="0" cb="0"/><line nr="5011" mi="0" ci="4" mb="0" cb="0"/><line nr="5012" mi="0" ci="5" mb="0" cb="0"/><line nr="5014" mi="0" ci="4" mb="0" cb="0"/><line nr="5015" mi="0" ci="4" mb="0" cb="0"/><line nr="5016" mi="0" ci="2" mb="0" cb="0"/><line nr="5017" mi="0" ci="4" mb="0" cb="0"/><line nr="5018" mi="0" ci="4" mb="0" cb="0"/><line nr="5021" mi="0" ci="4" mb="0" cb="2"/><line nr="5025" mi="0" ci="1" mb="0" cb="0"/><line nr="5027" mi="0" ci="6" mb="0" cb="0"/><line nr="5028" mi="0" ci="1" mb="0" cb="0"/><line nr="5030" mi="0" ci="2" mb="0" cb="0"/><line nr="5033" mi="0" ci="4" mb="0" cb="2"/><line nr="5038" mi="0" ci="3" mb="0" cb="0"/><line nr="5041" mi="0" ci="4" mb="0" cb="0"/><line nr="5042" mi="1" ci="0" mb="0" cb="0"/><line nr="5043" mi="2" ci="0" mb="2" cb="0"/><line nr="5044" mi="4" ci="0" mb="0" cb="0"/><line nr="5045" mi="3" ci="0" mb="0" cb="0"/><line nr="5047" mi="4" ci="0" mb="0" cb="0"/><line nr="5049" mi="3" ci="0" mb="2" cb="0"/><line nr="5050" mi="3" ci="0" mb="0" cb="0"/><line nr="5052" mi="3" ci="0" mb="2" cb="0"/><line nr="5053" mi="3" ci="0" mb="0" cb="0"/><line nr="5055" mi="3" ci="0" mb="0" cb="0"/><line nr="5057" mi="3" ci="2" mb="3" cb="1"/><line nr="5058" mi="5" ci="5" mb="0" cb="0"/><line nr="5059" mi="7" ci="6" mb="0" cb="0"/><line nr="5062" mi="0" ci="1" mb="0" cb="0"/><line nr="5066" mi="0" ci="6" mb="0" cb="0"/><line nr="5067" mi="0" ci="2" mb="0" cb="0"/><line nr="5068" mi="0" ci="4" mb="0" cb="0"/><line nr="5069" mi="0" ci="5" mb="0" cb="0"/><line nr="5071" mi="0" ci="4" mb="1" cb="2"/><line nr="5073" mi="0" ci="4" mb="0" cb="0"/><line nr="5074" mi="0" ci="2" mb="0" cb="0"/><line nr="5075" mi="0" ci="4" mb="0" cb="0"/><line nr="5076" mi="0" ci="1" mb="0" cb="0"/><line nr="5078" mi="0" ci="4" mb="0" cb="0"/><line nr="5079" mi="0" ci="2" mb="0" cb="0"/><line nr="5080" mi="0" ci="4" mb="0" cb="0"/><line nr="5081" mi="0" ci="1" mb="0" cb="0"/><line nr="5083" mi="6" ci="0" mb="0" cb="0"/><line nr="5084" mi="4" ci="0" mb="0" cb="0"/><line nr="5085" mi="4" ci="0" mb="0" cb="0"/><line nr="5087" mi="1" ci="0" mb="0" cb="0"/><line nr="5088" mi="2" ci="0" mb="2" cb="0"/><line nr="5089" mi="4" ci="0" mb="0" cb="0"/><line nr="5090" mi="3" ci="0" mb="0" cb="0"/><line nr="5092" mi="4" ci="0" mb="0" cb="0"/><line nr="5094" mi="3" ci="0" mb="2" cb="0"/><line nr="5095" mi="3" ci="0" mb="0" cb="0"/><line nr="5097" mi="3" ci="0" mb="2" cb="0"/><line nr="5098" mi="3" ci="0" mb="0" cb="0"/><line nr="5100" mi="3" ci="0" mb="0" cb="0"/><line nr="5102" mi="3" ci="2" mb="3" cb="1"/><line nr="5103" mi="5" ci="5" mb="0" cb="0"/><line nr="5104" mi="7" ci="6" mb="0" cb="0"/><line nr="5107" mi="0" ci="1" mb="0" cb="0"/><line nr="5111" mi="0" ci="6" mb="0" cb="0"/><line nr="5112" mi="0" ci="2" mb="0" cb="0"/><line nr="5113" mi="0" ci="4" mb="0" cb="0"/><line nr="5114" mi="0" ci="5" mb="0" cb="0"/><line nr="5116" mi="0" ci="4" mb="0" cb="0"/><line nr="5117" mi="0" ci="4" mb="0" cb="0"/><line nr="5118" mi="0" ci="2" mb="0" cb="0"/><line nr="5119" mi="0" ci="4" mb="0" cb="0"/><line nr="5120" mi="0" ci="2" mb="0" cb="0"/><line nr="5121" mi="0" ci="4" mb="0" cb="2"/><line nr="5123" mi="0" ci="4" mb="0" cb="0"/><line nr="5124" mi="0" ci="2" mb="0" cb="0"/><line nr="5125" mi="0" ci="2" mb="0" cb="0"/><line nr="5126" mi="0" ci="1" mb="0" cb="0"/><line nr="5128" mi="0" ci="6" mb="0" cb="0"/><line nr="5131" mi="0" ci="5" mb="0" cb="0"/><line nr="5132" mi="0" ci="2" mb="0" cb="0"/><line nr="5133" mi="0" ci="5" mb="0" cb="0"/><line nr="5135" mi="0" ci="1" mb="0" cb="0"/><line nr="5136" mi="0" ci="2" mb="1" cb="1"/><line nr="5137" mi="0" ci="4" mb="0" cb="0"/><line nr="5138" mi="0" ci="3" mb="0" cb="0"/><line nr="5140" mi="4" ci="0" mb="0" cb="0"/><line nr="5142" mi="0" ci="3" mb="1" cb="1"/><line nr="5143" mi="0" ci="3" mb="0" cb="0"/><line nr="5145" mi="3" ci="0" mb="2" cb="0"/><line nr="5146" mi="3" ci="0" mb="0" cb="0"/><line nr="5148" mi="3" ci="0" mb="0" cb="0"/><line nr="5150" mi="0" ci="5" mb="2" cb="2"/><line nr="5151" mi="10" ci="0" mb="0" cb="0"/><line nr="5152" mi="11" ci="2" mb="0" cb="0"/><line nr="5155" mi="0" ci="1" mb="0" cb="0"/><line nr="5159" mi="0" ci="6" mb="0" cb="0"/><line nr="5160" mi="0" ci="2" mb="0" cb="0"/><line nr="5161" mi="0" ci="4" mb="0" cb="0"/><line nr="5162" mi="0" ci="5" mb="0" cb="0"/><line nr="5164" mi="0" ci="4" mb="0" cb="0"/><line nr="5165" mi="0" ci="4" mb="0" cb="0"/><line nr="5166" mi="0" ci="2" mb="0" cb="0"/><line nr="5167" mi="0" ci="4" mb="0" cb="0"/><line nr="5168" mi="0" ci="2" mb="0" cb="0"/><line nr="5169" mi="1" ci="0" mb="0" cb="0"/><line nr="5170" mi="2" ci="0" mb="2" cb="0"/><line nr="5171" mi="4" ci="0" mb="0" cb="0"/><line nr="5172" mi="3" ci="0" mb="0" cb="0"/><line nr="5174" mi="4" ci="0" mb="0" cb="0"/><line nr="5176" mi="3" ci="0" mb="2" cb="0"/><line nr="5177" mi="3" ci="0" mb="0" cb="0"/><line nr="5179" mi="3" ci="0" mb="2" cb="0"/><line nr="5180" mi="3" ci="0" mb="0" cb="0"/><line nr="5182" mi="3" ci="0" mb="0" cb="0"/><line nr="5184" mi="3" ci="2" mb="3" cb="1"/><line nr="5185" mi="5" ci="5" mb="0" cb="0"/><line nr="5186" mi="7" ci="6" mb="0" cb="0"/><line nr="5189" mi="0" ci="1" mb="0" cb="0"/><line nr="5193" mi="0" ci="6" mb="0" cb="0"/><line nr="5194" mi="0" ci="2" mb="0" cb="0"/><line nr="5195" mi="0" ci="4" mb="0" cb="0"/><line nr="5196" mi="0" ci="5" mb="0" cb="0"/><line nr="5198" mi="0" ci="4" mb="0" cb="0"/><line nr="5199" mi="0" ci="2" mb="0" cb="0"/><line nr="5200" mi="0" ci="4" mb="0" cb="0"/><line nr="5201" mi="0" ci="4" mb="0" cb="0"/><line nr="5202" mi="0" ci="2" mb="0" cb="0"/><line nr="5203" mi="0" ci="4" mb="0" cb="0"/><line nr="5204" mi="0" ci="4" mb="0" cb="0"/><line nr="5205" mi="1" ci="0" mb="0" cb="0"/><line nr="5206" mi="2" ci="0" mb="2" cb="0"/><line nr="5207" mi="4" ci="0" mb="0" cb="0"/><line nr="5208" mi="3" ci="0" mb="0" cb="0"/><line nr="5210" mi="4" ci="0" mb="0" cb="0"/><line nr="5212" mi="3" ci="0" mb="2" cb="0"/><line nr="5213" mi="3" ci="0" mb="0" cb="0"/><line nr="5215" mi="3" ci="0" mb="2" cb="0"/><line nr="5216" mi="3" ci="0" mb="0" cb="0"/><line nr="5218" mi="3" ci="0" mb="0" cb="0"/><line nr="5220" mi="3" ci="2" mb="3" cb="1"/><line nr="5221" mi="5" ci="5" mb="0" cb="0"/><line nr="5222" mi="7" ci="6" mb="0" cb="0"/><line nr="5225" mi="0" ci="1" mb="0" cb="0"/><line nr="5229" mi="0" ci="6" mb="0" cb="0"/><line nr="5230" mi="0" ci="2" mb="0" cb="0"/><line nr="5231" mi="0" ci="4" mb="0" cb="0"/><line nr="5232" mi="0" ci="5" mb="0" cb="0"/><line nr="5234" mi="0" ci="4" mb="0" cb="0"/><line nr="5235" mi="0" ci="4" mb="0" cb="0"/><line nr="5236" mi="0" ci="4" mb="0" cb="2"/><line nr="5237" mi="0" ci="2" mb="0" cb="0"/><line nr="5238" mi="0" ci="2" mb="0" cb="0"/><line nr="5239" mi="0" ci="4" mb="0" cb="0"/><line nr="5240" mi="0" ci="3" mb="0" cb="0"/><line nr="5242" mi="0" ci="4" mb="1" cb="1"/><line nr="5270" mi="0" ci="4" mb="0" cb="2"/><line nr="5297" mi="0" ci="2" mb="0" cb="0"/><line nr="5298" mi="0" ci="1" mb="0" cb="0"/><line nr="5300" mi="0" ci="6" mb="0" cb="0"/><line nr="5303" mi="0" ci="4" mb="0" cb="0"/><line nr="5304" mi="0" ci="4" mb="0" cb="2"/><line nr="5333" mi="0" ci="2" mb="0" cb="0"/><line nr="5334" mi="0" ci="1" mb="0" cb="0"/><line nr="5336" mi="0" ci="6" mb="0" cb="0"/><line nr="5339" mi="0" ci="4" mb="0" cb="0"/><line nr="5340" mi="0" ci="4" mb="0" cb="2"/><line nr="5365" mi="0" ci="2" mb="0" cb="0"/><line nr="5366" mi="0" ci="1" mb="0" cb="0"/><line nr="5368" mi="0" ci="6" mb="0" cb="0"/><line nr="5371" mi="0" ci="1" mb="0" cb="0"/><line nr="5373" mi="6" ci="0" mb="0" cb="0"/><line nr="5374" mi="4" ci="0" mb="0" cb="0"/><line nr="5375" mi="4" ci="0" mb="0" cb="0"/><line nr="5378" mi="0" ci="4" mb="0" cb="0"/><line nr="5379" mi="0" ci="2" mb="0" cb="0"/><line nr="5380" mi="0" ci="1" mb="0" cb="0"/><line nr="5381" mi="0" ci="2" mb="1" cb="1"/><line nr="5382" mi="0" ci="4" mb="0" cb="0"/><line nr="5383" mi="0" ci="3" mb="0" cb="0"/><line nr="5385" mi="4" ci="0" mb="0" cb="0"/><line nr="5387" mi="0" ci="3" mb="1" cb="1"/><line nr="5388" mi="0" ci="3" mb="0" cb="0"/><line nr="5390" mi="3" ci="0" mb="2" cb="0"/><line nr="5391" mi="3" ci="0" mb="0" cb="0"/><line nr="5393" mi="3" ci="0" mb="0" cb="0"/><line nr="5395" mi="0" ci="5" mb="2" cb="2"/><line nr="5396" mi="5" ci="5" mb="0" cb="0"/><line nr="5397" mi="5" ci="8" mb="0" cb="0"/><line nr="5400" mi="0" ci="1" mb="0" cb="0"/><line nr="5404" mi="0" ci="6" mb="0" cb="0"/><line nr="5405" mi="0" ci="2" mb="0" cb="0"/><line nr="5406" mi="0" ci="4" mb="0" cb="0"/><line nr="5407" mi="0" ci="5" mb="0" cb="0"/><line nr="5409" mi="0" ci="4" mb="0" cb="2"/><line nr="5410" mi="0" ci="3" mb="0" cb="0"/><line nr="5412" mi="0" ci="4" mb="1" cb="1"/><line nr="5437" mi="0" ci="2" mb="0" cb="0"/><line nr="5438" mi="0" ci="1" mb="0" cb="0"/><line nr="5440" mi="6" ci="0" mb="0" cb="0"/><line nr="5441" mi="4" ci="0" mb="0" cb="0"/><line nr="5442" mi="4" ci="0" mb="0" cb="0"/><line nr="5445" mi="1" ci="0" mb="0" cb="0"/><line nr="5446" mi="2" ci="0" mb="2" cb="0"/><line nr="5447" mi="4" ci="0" mb="0" cb="0"/><line nr="5448" mi="3" ci="0" mb="0" cb="0"/><line nr="5450" mi="4" ci="0" mb="0" cb="0"/><line nr="5452" mi="3" ci="0" mb="2" cb="0"/><line nr="5453" mi="3" ci="0" mb="0" cb="0"/><line nr="5455" mi="3" ci="0" mb="2" cb="0"/><line nr="5456" mi="3" ci="0" mb="0" cb="0"/><line nr="5458" mi="3" ci="0" mb="0" cb="0"/><line nr="5460" mi="3" ci="2" mb="3" cb="1"/><line nr="5461" mi="5" ci="5" mb="0" cb="0"/><line nr="5462" mi="7" ci="6" mb="0" cb="0"/><line nr="5465" mi="0" ci="1" mb="0" cb="0"/><line nr="5469" mi="0" ci="6" mb="0" cb="0"/><line nr="5470" mi="0" ci="2" mb="0" cb="0"/><line nr="5471" mi="0" ci="4" mb="0" cb="0"/><line nr="5472" mi="0" ci="5" mb="0" cb="0"/><line nr="5474" mi="0" ci="2" mb="0" cb="0"/><line nr="5477" mi="0" ci="4" mb="0" cb="2"/><line nr="5480" mi="0" ci="1" mb="0" cb="0"/><line nr="5482" mi="0" ci="6" mb="0" cb="0"/><line nr="5483" mi="0" ci="1" mb="0" cb="0"/><line nr="5485" mi="0" ci="4" mb="0" cb="0"/><line nr="5486" mi="0" ci="3" mb="0" cb="0"/><line nr="5488" mi="1" ci="0" mb="0" cb="0"/><line nr="5489" mi="2" ci="0" mb="2" cb="0"/><line nr="5490" mi="4" ci="0" mb="0" cb="0"/><line nr="5491" mi="3" ci="0" mb="0" cb="0"/><line nr="5493" mi="4" ci="0" mb="0" cb="0"/><line nr="5495" mi="3" ci="0" mb="2" cb="0"/><line nr="5496" mi="3" ci="0" mb="0" cb="0"/><line nr="5498" mi="3" ci="0" mb="2" cb="0"/><line nr="5499" mi="3" ci="0" mb="0" cb="0"/><line nr="5501" mi="3" ci="0" mb="0" cb="0"/><line nr="5503" mi="3" ci="2" mb="3" cb="1"/><line nr="5504" mi="5" ci="5" mb="0" cb="0"/><line nr="5505" mi="7" ci="6" mb="0" cb="0"/><line nr="5508" mi="0" ci="1" mb="0" cb="0"/><line nr="5512" mi="0" ci="6" mb="0" cb="0"/><line nr="5513" mi="0" ci="2" mb="0" cb="0"/><line nr="5514" mi="0" ci="4" mb="0" cb="0"/><line nr="5515" mi="0" ci="5" mb="0" cb="0"/><line nr="5517" mi="0" ci="2" mb="0" cb="0"/><line nr="5518" mi="1" ci="0" mb="0" cb="0"/><line nr="5519" mi="2" ci="0" mb="2" cb="0"/><line nr="5520" mi="4" ci="0" mb="0" cb="0"/><line nr="5521" mi="3" ci="0" mb="0" cb="0"/><line nr="5523" mi="4" ci="0" mb="0" cb="0"/><line nr="5525" mi="3" ci="0" mb="2" cb="0"/><line nr="5526" mi="3" ci="0" mb="0" cb="0"/><line nr="5528" mi="3" ci="0" mb="2" cb="0"/><line nr="5529" mi="3" ci="0" mb="0" cb="0"/><line nr="5531" mi="3" ci="0" mb="0" cb="0"/><line nr="5533" mi="3" ci="2" mb="3" cb="1"/><line nr="5534" mi="5" ci="5" mb="0" cb="0"/><line nr="5535" mi="7" ci="6" mb="0" cb="0"/><line nr="5538" mi="0" ci="1" mb="0" cb="0"/><line nr="5542" mi="0" ci="6" mb="0" cb="0"/><line nr="5543" mi="0" ci="2" mb="0" cb="0"/><line nr="5544" mi="0" ci="4" mb="0" cb="0"/><line nr="5545" mi="0" ci="5" mb="0" cb="0"/><line nr="5547" mi="0" ci="4" mb="0" cb="0"/><line nr="5548" mi="0" ci="4" mb="0" cb="2"/><line nr="5550" mi="0" ci="4" mb="0" cb="0"/><line nr="5551" mi="0" ci="4" mb="0" cb="0"/><line nr="5552" mi="0" ci="1" mb="0" cb="0"/><line nr="5554" mi="0" ci="6" mb="0" cb="0"/><line nr="5557" mi="0" ci="4" mb="0" cb="0"/><line nr="5559" mi="3" ci="2" mb="3" cb="1"/><line nr="5560" mi="5" ci="5" mb="0" cb="0"/><line nr="5561" mi="7" ci="6" mb="0" cb="0"/><line nr="5564" mi="0" ci="1" mb="0" cb="0"/><line nr="5568" mi="0" ci="6" mb="0" cb="0"/><line nr="5569" mi="0" ci="2" mb="0" cb="0"/><line nr="5570" mi="0" ci="4" mb="0" cb="0"/><line nr="5571" mi="0" ci="5" mb="0" cb="0"/><line nr="5573" mi="0" ci="4" mb="0" cb="0"/><line nr="5574" mi="0" ci="4" mb="1" cb="1"/><line nr="5576" mi="4" ci="0" mb="0" cb="0"/><line nr="5577" mi="4" ci="0" mb="0" cb="0"/><line nr="5578" mi="1" ci="0" mb="0" cb="0"/><line nr="5580" mi="0" ci="6" mb="0" cb="0"/><line nr="5583" mi="0" ci="4" mb="0" cb="0"/><line nr="5585" mi="3" ci="2" mb="3" cb="1"/><line nr="5586" mi="5" ci="5" mb="0" cb="0"/><line nr="5587" mi="7" ci="6" mb="0" cb="0"/><line nr="5590" mi="0" ci="1" mb="0" cb="0"/><line nr="5594" mi="0" ci="6" mb="0" cb="0"/><line nr="5595" mi="0" ci="2" mb="0" cb="0"/><line nr="5596" mi="0" ci="4" mb="0" cb="0"/><line nr="5597" mi="0" ci="5" mb="0" cb="0"/><line nr="5599" mi="0" ci="4" mb="0" cb="0"/><line nr="5600" mi="0" ci="4" mb="0" cb="2"/><line nr="5629" mi="0" ci="2" mb="0" cb="0"/><line nr="5630" mi="0" ci="1" mb="0" cb="0"/><line nr="5632" mi="0" ci="6" mb="0" cb="0"/><line nr="5635" mi="0" ci="4" mb="0" cb="0"/><line nr="5636" mi="0" ci="1" mb="0" cb="0"/><line nr="5637" mi="0" ci="2" mb="1" cb="1"/><line nr="5638" mi="0" ci="4" mb="0" cb="0"/><line nr="5639" mi="0" ci="3" mb="0" cb="0"/><line nr="5641" mi="4" ci="0" mb="0" cb="0"/><line nr="5643" mi="0" ci="3" mb="1" cb="1"/><line nr="5644" mi="0" ci="3" mb="0" cb="0"/><line nr="5646" mi="3" ci="0" mb="2" cb="0"/><line nr="5647" mi="3" ci="0" mb="0" cb="0"/><line nr="5649" mi="3" ci="0" mb="0" cb="0"/><line nr="5651" mi="0" ci="5" mb="2" cb="2"/><line nr="5652" mi="5" ci="5" mb="0" cb="0"/><line nr="5653" mi="5" ci="8" mb="0" cb="0"/><line nr="5656" mi="0" ci="1" mb="0" cb="0"/><line nr="5660" mi="0" ci="6" mb="0" cb="0"/><line nr="5661" mi="0" ci="2" mb="0" cb="0"/><line nr="5662" mi="0" ci="4" mb="0" cb="0"/><line nr="5663" mi="0" ci="5" mb="0" cb="0"/><line nr="5665" mi="0" ci="4" mb="0" cb="0"/><line nr="5666" mi="0" ci="2" mb="0" cb="0"/><line nr="5667" mi="0" ci="4" mb="0" cb="0"/><line nr="5668" mi="1" ci="0" mb="0" cb="0"/><line nr="5669" mi="2" ci="0" mb="2" cb="0"/><line nr="5670" mi="4" ci="0" mb="0" cb="0"/><line nr="5671" mi="3" ci="0" mb="0" cb="0"/><line nr="5673" mi="4" ci="0" mb="0" cb="0"/><line nr="5675" mi="3" ci="0" mb="2" cb="0"/><line nr="5676" mi="3" ci="0" mb="0" cb="0"/><line nr="5678" mi="3" ci="0" mb="2" cb="0"/><line nr="5679" mi="3" ci="0" mb="0" cb="0"/><line nr="5681" mi="3" ci="0" mb="0" cb="0"/><line nr="5683" mi="3" ci="2" mb="3" cb="1"/><line nr="5684" mi="5" ci="5" mb="0" cb="0"/><line nr="5685" mi="7" ci="6" mb="0" cb="0"/><line nr="5688" mi="0" ci="1" mb="0" cb="0"/><line nr="5692" mi="0" ci="6" mb="0" cb="0"/><line nr="5693" mi="0" ci="2" mb="0" cb="0"/><line nr="5694" mi="0" ci="4" mb="0" cb="0"/><line nr="5695" mi="0" ci="5" mb="0" cb="0"/><line nr="5697" mi="0" ci="4" mb="0" cb="0"/><line nr="5698" mi="0" ci="4" mb="0" cb="0"/><line nr="5699" mi="0" ci="2" mb="0" cb="0"/><line nr="5700" mi="0" ci="4" mb="0" cb="0"/><line nr="5701" mi="0" ci="2" mb="0" cb="0"/><line nr="5702" mi="1" ci="0" mb="0" cb="0"/><line nr="5703" mi="2" ci="0" mb="2" cb="0"/><line nr="5704" mi="4" ci="0" mb="0" cb="0"/><line nr="5705" mi="3" ci="0" mb="0" cb="0"/><line nr="5707" mi="4" ci="0" mb="0" cb="0"/><line nr="5709" mi="3" ci="0" mb="2" cb="0"/><line nr="5710" mi="3" ci="0" mb="0" cb="0"/><line nr="5712" mi="3" ci="0" mb="2" cb="0"/><line nr="5713" mi="3" ci="0" mb="0" cb="0"/><line nr="5715" mi="3" ci="0" mb="0" cb="0"/><line nr="5717" mi="3" ci="2" mb="3" cb="1"/><line nr="5718" mi="5" ci="5" mb="0" cb="0"/><line nr="5719" mi="7" ci="6" mb="0" cb="0"/><line nr="5722" mi="0" ci="1" mb="0" cb="0"/><line nr="5726" mi="0" ci="6" mb="0" cb="0"/><line nr="5727" mi="0" ci="2" mb="0" cb="0"/><line nr="5728" mi="0" ci="4" mb="0" cb="0"/><line nr="5729" mi="0" ci="5" mb="0" cb="0"/><line nr="5731" mi="0" ci="4" mb="0" cb="0"/><line nr="5732" mi="0" ci="4" mb="0" cb="2"/><line nr="5734" mi="0" ci="2" mb="0" cb="0"/><line nr="5735" mi="0" ci="1" mb="0" cb="0"/><line nr="5737" mi="0" ci="6" mb="0" cb="0"/><line nr="5740" mi="0" ci="2" mb="0" cb="0"/><line nr="5743" mi="0" ci="4" mb="0" cb="2"/><line nr="5746" mi="0" ci="1" mb="0" cb="0"/><line nr="5748" mi="0" ci="6" mb="0" cb="0"/><line nr="5749" mi="0" ci="1" mb="0" cb="0"/><line nr="5751" mi="0" ci="3" mb="0" cb="0"/><line nr="5753" mi="0" ci="4" mb="0" cb="2"/><line nr="5755" mi="0" ci="2" mb="0" cb="0"/><line nr="5756" mi="0" ci="1" mb="0" cb="0"/><line nr="5758" mi="0" ci="6" mb="0" cb="0"/><line nr="5761" mi="0" ci="1" mb="0" cb="0"/><line nr="5762" mi="0" ci="2" mb="1" cb="1"/><line nr="5763" mi="0" ci="4" mb="0" cb="0"/><line nr="5764" mi="0" ci="3" mb="0" cb="0"/><line nr="5766" mi="4" ci="0" mb="0" cb="0"/><line nr="5768" mi="0" ci="3" mb="1" cb="1"/><line nr="5769" mi="0" ci="3" mb="0" cb="0"/><line nr="5771" mi="3" ci="0" mb="2" cb="0"/><line nr="5772" mi="3" ci="0" mb="0" cb="0"/><line nr="5774" mi="3" ci="0" mb="0" cb="0"/><line nr="5776" mi="0" ci="5" mb="2" cb="2"/><line nr="5777" mi="5" ci="5" mb="0" cb="0"/><line nr="5778" mi="5" ci="8" mb="0" cb="0"/><line nr="5781" mi="0" ci="1" mb="0" cb="0"/><line nr="5785" mi="0" ci="6" mb="0" cb="0"/><line nr="5786" mi="0" ci="2" mb="0" cb="0"/><line nr="5787" mi="0" ci="4" mb="0" cb="0"/><line nr="5788" mi="0" ci="5" mb="0" cb="0"/><line nr="5790" mi="0" ci="2" mb="0" cb="0"/><line nr="5791" mi="0" ci="4" mb="0" cb="0"/><line nr="5792" mi="0" ci="2" mb="0" cb="0"/><line nr="5793" mi="0" ci="4" mb="0" cb="2"/><line nr="5794" mi="0" ci="4" mb="0" cb="0"/><line nr="5798" mi="0" ci="4" mb="0" cb="0"/><line nr="5799" mi="1" ci="0" mb="0" cb="0"/><line nr="5800" mi="2" ci="0" mb="2" cb="0"/><line nr="5801" mi="4" ci="0" mb="0" cb="0"/><line nr="5802" mi="3" ci="0" mb="0" cb="0"/><line nr="5804" mi="4" ci="0" mb="0" cb="0"/><line nr="5806" mi="3" ci="0" mb="2" cb="0"/><line nr="5807" mi="3" ci="0" mb="0" cb="0"/><line nr="5809" mi="3" ci="0" mb="2" cb="0"/><line nr="5810" mi="3" ci="0" mb="0" cb="0"/><line nr="5812" mi="3" ci="0" mb="0" cb="0"/><line nr="5814" mi="3" ci="2" mb="3" cb="1"/><line nr="5815" mi="5" ci="5" mb="0" cb="0"/><line nr="5816" mi="7" ci="6" mb="0" cb="0"/><line nr="5819" mi="0" ci="1" mb="0" cb="0"/><line nr="5823" mi="0" ci="6" mb="0" cb="0"/><line nr="5824" mi="0" ci="2" mb="0" cb="0"/><line nr="5825" mi="0" ci="4" mb="0" cb="0"/><line nr="5826" mi="0" ci="5" mb="0" cb="0"/><line nr="5828" mi="0" ci="2" mb="0" cb="0"/><line nr="5831" mi="0" ci="4" mb="0" cb="2"/><line nr="5836" mi="0" ci="4" mb="0" cb="0"/><line nr="5837" mi="0" ci="3" mb="0" cb="0"/><line nr="5839" mi="1" ci="0" mb="0" cb="0"/><line nr="5840" mi="2" ci="0" mb="2" cb="0"/><line nr="5841" mi="4" ci="0" mb="0" cb="0"/><line nr="5842" mi="3" ci="0" mb="0" cb="0"/><line nr="5844" mi="4" ci="0" mb="0" cb="0"/><line nr="5846" mi="3" ci="0" mb="2" cb="0"/><line nr="5847" mi="3" ci="0" mb="0" cb="0"/><line nr="5849" mi="3" ci="0" mb="2" cb="0"/><line nr="5850" mi="3" ci="0" mb="0" cb="0"/><line nr="5852" mi="3" ci="0" mb="0" cb="0"/><line nr="5854" mi="3" ci="2" mb="3" cb="1"/><line nr="5855" mi="5" ci="5" mb="0" cb="0"/><line nr="5856" mi="7" ci="6" mb="0" cb="0"/><line nr="5859" mi="0" ci="1" mb="0" cb="0"/><line nr="5863" mi="0" ci="6" mb="0" cb="0"/><line nr="5864" mi="0" ci="2" mb="0" cb="0"/><line nr="5865" mi="0" ci="4" mb="0" cb="0"/><line nr="5866" mi="0" ci="5" mb="0" cb="0"/><line nr="5870" mi="0" ci="4" mb="0" cb="2"/><line nr="5874" mi="0" ci="1" mb="0" cb="0"/><line nr="5876" mi="0" ci="6" mb="0" cb="0"/><line nr="5877" mi="0" ci="1" mb="0" cb="0"/><line nr="5879" mi="0" ci="4" mb="1" cb="2"/><line nr="5881" mi="0" ci="4" mb="0" cb="0"/><line nr="5882" mi="0" ci="1" mb="0" cb="0"/><line nr="5884" mi="0" ci="2" mb="0" cb="0"/><line nr="5885" mi="0" ci="1" mb="0" cb="0"/><line nr="5887" mi="6" ci="0" mb="0" cb="0"/><line nr="5888" mi="4" ci="0" mb="0" cb="0"/><line nr="5889" mi="4" ci="0" mb="0" cb="0"/><line nr="5892" mi="0" ci="2" mb="0" cb="0"/><line nr="5893" mi="0" ci="2" mb="0" cb="0"/><line nr="5894" mi="0" ci="4" mb="0" cb="0"/><line nr="5895" mi="0" ci="2" mb="0" cb="0"/><line nr="5896" mi="1" ci="0" mb="0" cb="0"/><line nr="5897" mi="2" ci="0" mb="2" cb="0"/><line nr="5898" mi="4" ci="0" mb="0" cb="0"/><line nr="5899" mi="3" ci="0" mb="0" cb="0"/><line nr="5901" mi="4" ci="0" mb="0" cb="0"/><line nr="5903" mi="3" ci="0" mb="2" cb="0"/><line nr="5904" mi="3" ci="0" mb="0" cb="0"/><line nr="5906" mi="3" ci="0" mb="2" cb="0"/><line nr="5907" mi="3" ci="0" mb="0" cb="0"/><line nr="5909" mi="3" ci="0" mb="0" cb="0"/><line nr="5911" mi="3" ci="2" mb="3" cb="1"/><line nr="5912" mi="5" ci="5" mb="0" cb="0"/><line nr="5913" mi="7" ci="6" mb="0" cb="0"/><line nr="5916" mi="0" ci="1" mb="0" cb="0"/><line nr="5920" mi="0" ci="6" mb="0" cb="0"/><line nr="5921" mi="0" ci="2" mb="0" cb="0"/><line nr="5922" mi="0" ci="4" mb="0" cb="0"/><line nr="5923" mi="0" ci="5" mb="0" cb="0"/><line nr="5925" mi="0" ci="4" mb="0" cb="0"/><line nr="5926" mi="0" ci="4" mb="0" cb="0"/><line nr="5927" mi="0" ci="2" mb="0" cb="0"/><line nr="5928" mi="0" ci="4" mb="0" cb="0"/><line nr="5929" mi="0" ci="2" mb="0" cb="0"/><line nr="5930" mi="0" ci="1" mb="0" cb="0"/><line nr="5931" mi="0" ci="2" mb="1" cb="1"/><line nr="5932" mi="0" ci="4" mb="0" cb="0"/><line nr="5933" mi="0" ci="3" mb="0" cb="0"/><line nr="5935" mi="4" ci="0" mb="0" cb="0"/><line nr="5937" mi="0" ci="3" mb="1" cb="1"/><line nr="5938" mi="0" ci="3" mb="0" cb="0"/><line nr="5940" mi="3" ci="0" mb="2" cb="0"/><line nr="5941" mi="3" ci="0" mb="0" cb="0"/><line nr="5943" mi="3" ci="0" mb="0" cb="0"/><line nr="5945" mi="0" ci="5" mb="2" cb="2"/><line nr="5946" mi="5" ci="5" mb="0" cb="0"/><line nr="5947" mi="5" ci="8" mb="0" cb="0"/><line nr="5950" mi="0" ci="1" mb="0" cb="0"/><line nr="5954" mi="0" ci="6" mb="0" cb="0"/><line nr="5955" mi="0" ci="2" mb="0" cb="0"/><line nr="5956" mi="0" ci="4" mb="0" cb="0"/><line nr="5957" mi="0" ci="5" mb="0" cb="0"/><line nr="5959" mi="0" ci="4" mb="0" cb="0"/><line nr="5960" mi="0" ci="2" mb="0" cb="0"/><line nr="5961" mi="1" ci="0" mb="0" cb="0"/><line nr="5962" mi="2" ci="0" mb="2" cb="0"/><line nr="5963" mi="4" ci="0" mb="0" cb="0"/><line nr="5964" mi="3" ci="0" mb="0" cb="0"/><line nr="5966" mi="4" ci="0" mb="0" cb="0"/><line nr="5968" mi="3" ci="0" mb="2" cb="0"/><line nr="5969" mi="3" ci="0" mb="0" cb="0"/><line nr="5971" mi="3" ci="0" mb="2" cb="0"/><line nr="5972" mi="3" ci="0" mb="0" cb="0"/><line nr="5974" mi="3" ci="0" mb="0" cb="0"/><line nr="5976" mi="3" ci="2" mb="3" cb="1"/><line nr="5977" mi="5" ci="5" mb="0" cb="0"/><line nr="5978" mi="7" ci="6" mb="0" cb="0"/><line nr="5981" mi="0" ci="1" mb="0" cb="0"/><line nr="5985" mi="0" ci="6" mb="0" cb="0"/><line nr="5986" mi="0" ci="2" mb="0" cb="0"/><line nr="5987" mi="0" ci="4" mb="0" cb="0"/><line nr="5988" mi="0" ci="9" mb="1" cb="1"/><line nr="5989" mi="5" ci="0" mb="0" cb="0"/><line nr="5992" mi="0" ci="4" mb="0" cb="0"/><line nr="5993" mi="0" ci="2" mb="0" cb="0"/><line nr="5994" mi="0" ci="4" mb="0" cb="2"/><line nr="5996" mi="0" ci="4" mb="0" cb="0"/><line nr="5997" mi="0" ci="2" mb="0" cb="0"/><line nr="5998" mi="0" ci="1" mb="0" cb="0"/><line nr="6000" mi="0" ci="6" mb="0" cb="0"/><line nr="6003" mi="0" ci="4" mb="0" cb="0"/><line nr="6004" mi="1" ci="0" mb="0" cb="0"/><line nr="6005" mi="2" ci="0" mb="2" cb="0"/><line nr="6006" mi="4" ci="0" mb="0" cb="0"/><line nr="6007" mi="3" ci="0" mb="0" cb="0"/><line nr="6009" mi="4" ci="0" mb="0" cb="0"/><line nr="6011" mi="3" ci="0" mb="2" cb="0"/><line nr="6012" mi="3" ci="0" mb="0" cb="0"/><line nr="6014" mi="3" ci="0" mb="2" cb="0"/><line nr="6015" mi="3" ci="0" mb="0" cb="0"/><line nr="6017" mi="3" ci="0" mb="0" cb="0"/><line nr="6019" mi="3" ci="2" mb="3" cb="1"/><line nr="6020" mi="5" ci="5" mb="0" cb="0"/><line nr="6021" mi="7" ci="6" mb="0" cb="0"/><line nr="6024" mi="0" ci="1" mb="0" cb="0"/><line nr="6031" mi="0" ci="6" mb="0" cb="0"/><line nr="6032" mi="0" ci="2" mb="0" cb="0"/><line nr="6033" mi="0" ci="4" mb="0" cb="0"/><line nr="6034" mi="0" ci="5" mb="0" cb="0"/><line nr="6036" mi="0" ci="14" mb="2" cb="2"/><line nr="6040" mi="4" ci="0" mb="0" cb="0"/><line nr="6041" mi="4" ci="0" mb="0" cb="0"/><line nr="6043" mi="0" ci="4" mb="0" cb="0"/><line nr="6044" mi="0" ci="4" mb="0" cb="0"/><line nr="6045" mi="0" ci="4" mb="0" cb="0"/><line nr="6047" mi="3" ci="2" mb="3" cb="1"/><line nr="6048" mi="5" ci="5" mb="0" cb="0"/><line nr="6049" mi="7" ci="6" mb="0" cb="0"/><line nr="6052" mi="0" ci="1" mb="0" cb="0"/><line nr="6056" mi="0" ci="6" mb="0" cb="0"/><line nr="6057" mi="0" ci="2" mb="0" cb="0"/><line nr="6058" mi="0" ci="4" mb="0" cb="0"/><line nr="6059" mi="0" ci="5" mb="0" cb="0"/><line nr="6061" mi="0" ci="14" mb="2" cb="2"/><line nr="6065" mi="4" ci="0" mb="0" cb="0"/><line nr="6066" mi="4" ci="0" mb="0" cb="0"/><line nr="6068" mi="0" ci="4" mb="0" cb="0"/><line nr="6069" mi="0" ci="4" mb="0" cb="0"/><line nr="6071" mi="3" ci="2" mb="3" cb="1"/><line nr="6072" mi="5" ci="5" mb="0" cb="0"/><line nr="6073" mi="7" ci="6" mb="0" cb="0"/><line nr="6076" mi="0" ci="1" mb="0" cb="0"/><line nr="6081" mi="0" ci="6" mb="0" cb="0"/><line nr="6082" mi="0" ci="2" mb="0" cb="0"/><line nr="6083" mi="0" ci="4" mb="0" cb="0"/><line nr="6084" mi="0" ci="5" mb="0" cb="0"/><line nr="6086" mi="0" ci="4" mb="0" cb="2"/><line nr="6087" mi="0" ci="3" mb="0" cb="0"/><line nr="6088" mi="0" ci="4" mb="0" cb="2"/><line nr="6089" mi="0" ci="3" mb="0" cb="0"/><line nr="6091" mi="0" ci="4" mb="1" cb="1"/><line nr="6093" mi="0" ci="2" mb="0" cb="0"/><line nr="6094" mi="0" ci="1" mb="0" cb="0"/><line nr="6096" mi="6" ci="0" mb="0" cb="0"/><line nr="6097" mi="4" ci="0" mb="0" cb="0"/><line nr="6098" mi="4" ci="0" mb="0" cb="0"/><line nr="6101" mi="0" ci="1" mb="0" cb="0"/><line nr="6102" mi="0" ci="2" mb="1" cb="1"/><line nr="6103" mi="0" ci="4" mb="0" cb="0"/><line nr="6104" mi="0" ci="3" mb="0" cb="0"/><line nr="6106" mi="4" ci="0" mb="0" cb="0"/><line nr="6108" mi="0" ci="3" mb="1" cb="1"/><line nr="6109" mi="0" ci="3" mb="0" cb="0"/><line nr="6111" mi="3" ci="0" mb="2" cb="0"/><line nr="6112" mi="3" ci="0" mb="0" cb="0"/><line nr="6114" mi="3" ci="0" mb="0" cb="0"/><line nr="6116" mi="0" ci="5" mb="2" cb="2"/><line nr="6117" mi="5" ci="5" mb="0" cb="0"/><line nr="6118" mi="5" ci="8" mb="0" cb="0"/><line nr="6121" mi="0" ci="1" mb="0" cb="0"/><line nr="6125" mi="0" ci="6" mb="0" cb="0"/><line nr="6126" mi="0" ci="2" mb="0" cb="0"/><line nr="6127" mi="0" ci="4" mb="0" cb="0"/><line nr="6128" mi="0" ci="5" mb="0" cb="0"/><line nr="6130" mi="0" ci="4" mb="0" cb="0"/><line nr="6131" mi="0" ci="2" mb="0" cb="0"/><line nr="6132" mi="0" ci="4" mb="0" cb="0"/><line nr="6133" mi="0" ci="4" mb="1" cb="1"/><line nr="6135" mi="0" ci="2" mb="0" cb="0"/><line nr="6136" mi="0" ci="1" mb="0" cb="0"/><line nr="6138" mi="6" ci="0" mb="0" cb="0"/><line nr="6141" mi="0" ci="4" mb="0" cb="0"/><line nr="6142" mi="0" ci="5" mb="0" cb="0"/><line nr="6143" mi="0" ci="2" mb="0" cb="0"/><line nr="6144" mi="0" ci="5" mb="0" cb="0"/><line nr="6145" mi="0" ci="2" mb="0" cb="0"/><line nr="6146" mi="1" ci="0" mb="0" cb="0"/><line nr="6147" mi="2" ci="0" mb="2" cb="0"/><line nr="6148" mi="4" ci="0" mb="0" cb="0"/><line nr="6149" mi="3" ci="0" mb="0" cb="0"/><line nr="6151" mi="4" ci="0" mb="0" cb="0"/><line nr="6153" mi="3" ci="0" mb="2" cb="0"/><line nr="6154" mi="3" ci="0" mb="0" cb="0"/><line nr="6156" mi="3" ci="0" mb="2" cb="0"/><line nr="6157" mi="3" ci="0" mb="0" cb="0"/><line nr="6159" mi="3" ci="0" mb="0" cb="0"/><line nr="6161" mi="3" ci="2" mb="3" cb="1"/><line nr="6162" mi="10" ci="0" mb="0" cb="0"/><line nr="6163" mi="13" ci="0" mb="0" cb="0"/><line nr="6166" mi="0" ci="1" mb="0" cb="0"/><line nr="6170" mi="0" ci="6" mb="0" cb="0"/><line nr="6171" mi="0" ci="2" mb="0" cb="0"/><line nr="6172" mi="0" ci="4" mb="0" cb="0"/><line nr="6173" mi="0" ci="5" mb="0" cb="0"/><line nr="6175" mi="0" ci="4" mb="0" cb="0"/><line nr="6176" mi="0" ci="2" mb="0" cb="0"/><line nr="6177" mi="0" ci="5" mb="0" cb="0"/><line nr="6178" mi="0" ci="2" mb="0" cb="0"/><line nr="6179" mi="0" ci="5" mb="0" cb="0"/><line nr="6180" mi="0" ci="2" mb="0" cb="0"/><line nr="6181" mi="0" ci="1" mb="0" cb="0"/><line nr="6182" mi="0" ci="2" mb="1" cb="1"/><line nr="6183" mi="4" ci="0" mb="0" cb="0"/><line nr="6184" mi="3" ci="0" mb="0" cb="0"/><line nr="6186" mi="0" ci="4" mb="0" cb="0"/><line nr="6188" mi="0" ci="3" mb="1" cb="1"/><line nr="6189" mi="0" ci="3" mb="0" cb="0"/><line nr="6191" mi="3" ci="0" mb="2" cb="0"/><line nr="6192" mi="3" ci="0" mb="0" cb="0"/><line nr="6194" mi="3" ci="0" mb="0" cb="0"/><line nr="6196" mi="0" ci="5" mb="2" cb="2"/><line nr="6197" mi="10" ci="0" mb="0" cb="0"/><line nr="6198" mi="11" ci="2" mb="0" cb="0"/><line nr="6201" mi="0" ci="1" mb="0" cb="0"/><line nr="6205" mi="0" ci="6" mb="0" cb="0"/><line nr="6206" mi="0" ci="2" mb="0" cb="0"/><line nr="6207" mi="0" ci="4" mb="0" cb="0"/><line nr="6208" mi="0" ci="5" mb="0" cb="0"/><line nr="6210" mi="0" ci="4" mb="0" cb="0"/><line nr="6211" mi="0" ci="2" mb="0" cb="0"/><line nr="6212" mi="0" ci="4" mb="0" cb="0"/><line nr="6213" mi="0" ci="2" mb="0" cb="0"/><line nr="6214" mi="0" ci="4" mb="0" cb="0"/><line nr="6215" mi="0" ci="5" mb="0" cb="0"/><line nr="6216" mi="0" ci="2" mb="0" cb="0"/><line nr="6217" mi="0" ci="5" mb="0" cb="0"/><line nr="6218" mi="0" ci="2" mb="0" cb="0"/><line nr="6219" mi="1" ci="0" mb="0" cb="0"/><line nr="6220" mi="2" ci="0" mb="2" cb="0"/><line nr="6221" mi="4" ci="0" mb="0" cb="0"/><line nr="6222" mi="3" ci="0" mb="0" cb="0"/><line nr="6224" mi="4" ci="0" mb="0" cb="0"/><line nr="6226" mi="3" ci="0" mb="2" cb="0"/><line nr="6227" mi="3" ci="0" mb="0" cb="0"/><line nr="6229" mi="3" ci="0" mb="2" cb="0"/><line nr="6230" mi="3" ci="0" mb="0" cb="0"/><line nr="6232" mi="3" ci="0" mb="0" cb="0"/><line nr="6234" mi="3" ci="2" mb="3" cb="1"/><line nr="6235" mi="10" ci="0" mb="0" cb="0"/><line nr="6236" mi="13" ci="0" mb="0" cb="0"/><line nr="6239" mi="0" ci="1" mb="0" cb="0"/><line nr="6243" mi="0" ci="6" mb="0" cb="0"/><line nr="6244" mi="0" ci="2" mb="0" cb="0"/><line nr="6245" mi="0" ci="4" mb="0" cb="0"/><line nr="6246" mi="0" ci="5" mb="0" cb="0"/><line nr="6248" mi="0" ci="2" mb="0" cb="0"/><line nr="6251" mi="0" ci="4" mb="0" cb="2"/><line nr="6254" mi="0" ci="1" mb="0" cb="0"/><line nr="6256" mi="0" ci="6" mb="0" cb="0"/><line nr="6257" mi="0" ci="1" mb="0" cb="0"/><line nr="6259" mi="0" ci="4" mb="0" cb="0"/><line nr="6260" mi="0" ci="3" mb="0" cb="0"/><line nr="6262" mi="1" ci="0" mb="0" cb="0"/><line nr="6263" mi="2" ci="0" mb="2" cb="0"/><line nr="6264" mi="4" ci="0" mb="0" cb="0"/><line nr="6265" mi="3" ci="0" mb="0" cb="0"/><line nr="6267" mi="4" ci="0" mb="0" cb="0"/><line nr="6269" mi="3" ci="0" mb="2" cb="0"/><line nr="6270" mi="3" ci="0" mb="0" cb="0"/><line nr="6272" mi="3" ci="0" mb="2" cb="0"/><line nr="6273" mi="3" ci="0" mb="0" cb="0"/><line nr="6275" mi="3" ci="0" mb="0" cb="0"/><line nr="6277" mi="3" ci="2" mb="3" cb="1"/><line nr="6278" mi="5" ci="5" mb="0" cb="0"/><line nr="6279" mi="7" ci="6" mb="0" cb="0"/><line nr="6282" mi="0" ci="1" mb="0" cb="0"/><line nr="6286" mi="0" ci="6" mb="0" cb="0"/><line nr="6287" mi="0" ci="2" mb="0" cb="0"/><line nr="6288" mi="0" ci="4" mb="0" cb="0"/><line nr="6289" mi="0" ci="5" mb="0" cb="0"/><line nr="6291" mi="0" ci="4" mb="0" cb="0"/><line nr="6292" mi="0" ci="4" mb="0" cb="0"/><line nr="6293" mi="0" ci="4" mb="0" cb="0"/><line nr="6294" mi="0" ci="2" mb="0" cb="0"/><line nr="6295" mi="1" ci="0" mb="0" cb="0"/><line nr="6296" mi="2" ci="0" mb="2" cb="0"/><line nr="6297" mi="4" ci="0" mb="0" cb="0"/><line nr="6298" mi="3" ci="0" mb="0" cb="0"/><line nr="6300" mi="4" ci="0" mb="0" cb="0"/><line nr="6302" mi="3" ci="0" mb="2" cb="0"/><line nr="6303" mi="3" ci="0" mb="0" cb="0"/><line nr="6305" mi="3" ci="0" mb="2" cb="0"/><line nr="6306" mi="3" ci="0" mb="0" cb="0"/><line nr="6308" mi="3" ci="0" mb="0" cb="0"/><line nr="6310" mi="3" ci="2" mb="3" cb="1"/><line nr="6311" mi="5" ci="5" mb="0" cb="0"/><line nr="6312" mi="7" ci="6" mb="0" cb="0"/><line nr="6315" mi="0" ci="1" mb="0" cb="0"/><line nr="6319" mi="0" ci="6" mb="0" cb="0"/><line nr="6320" mi="0" ci="2" mb="0" cb="0"/><line nr="6321" mi="0" ci="4" mb="0" cb="0"/><line nr="6322" mi="0" ci="5" mb="0" cb="0"/><line nr="6324" mi="0" ci="4" mb="2" cb="2"/><line nr="6326" mi="2" ci="0" mb="0" cb="0"/><line nr="6327" mi="1" ci="0" mb="0" cb="0"/><line nr="6329" mi="0" ci="2" mb="0" cb="0"/><line nr="6330" mi="0" ci="1" mb="0" cb="0"/><line nr="6359" mi="0" ci="2" mb="0" cb="0"/><line nr="6360" mi="0" ci="1" mb="0" cb="0"/><line nr="6362" mi="6" ci="0" mb="0" cb="0"/><line nr="6363" mi="4" ci="0" mb="0" cb="0"/><line nr="6364" mi="4" ci="0" mb="0" cb="0"/><line nr="6366" mi="1" ci="0" mb="0" cb="0"/><line nr="6367" mi="2" ci="0" mb="2" cb="0"/><line nr="6368" mi="4" ci="0" mb="0" cb="0"/><line nr="6369" mi="3" ci="0" mb="0" cb="0"/><line nr="6371" mi="4" ci="0" mb="0" cb="0"/><line nr="6373" mi="3" ci="0" mb="2" cb="0"/><line nr="6374" mi="3" ci="0" mb="0" cb="0"/><line nr="6376" mi="3" ci="0" mb="2" cb="0"/><line nr="6377" mi="3" ci="0" mb="0" cb="0"/><line nr="6379" mi="3" ci="0" mb="0" cb="0"/><line nr="6381" mi="3" ci="2" mb="3" cb="1"/><line nr="6382" mi="5" ci="5" mb="0" cb="0"/><line nr="6383" mi="7" ci="6" mb="0" cb="0"/><line nr="6386" mi="0" ci="1" mb="0" cb="0"/><line nr="6390" mi="0" ci="6" mb="0" cb="0"/><line nr="6391" mi="0" ci="2" mb="0" cb="0"/><line nr="6392" mi="0" ci="4" mb="0" cb="0"/><line nr="6393" mi="0" ci="5" mb="0" cb="0"/><line nr="6395" mi="0" ci="4" mb="0" cb="0"/><line nr="6396" mi="0" ci="4" mb="1" cb="1"/><line nr="6427" mi="0" ci="2" mb="0" cb="0"/><line nr="6430" mi="0" ci="4" mb="0" cb="2"/><line nr="6435" mi="0" ci="4" mb="0" cb="0"/><line nr="6436" mi="0" ci="3" mb="0" cb="0"/><line nr="6438" mi="0" ci="4" mb="1" cb="1"/><line nr="6440" mi="4" ci="0" mb="0" cb="0"/><line nr="6441" mi="1" ci="0" mb="0" cb="0"/><line nr="6443" mi="0" ci="6" mb="0" cb="0"/><line nr="6446" mi="0" ci="1" mb="0" cb="0"/><line nr="6448" mi="6" ci="0" mb="0" cb="0"/><line nr="6451" mi="0" ci="4" mb="0" cb="0"/><line nr="6452" mi="1" ci="0" mb="0" cb="0"/><line nr="6453" mi="2" ci="0" mb="2" cb="0"/><line nr="6454" mi="4" ci="0" mb="0" cb="0"/><line nr="6455" mi="3" ci="0" mb="0" cb="0"/><line nr="6457" mi="4" ci="0" mb="0" cb="0"/><line nr="6459" mi="3" ci="0" mb="2" cb="0"/><line nr="6460" mi="3" ci="0" mb="0" cb="0"/><line nr="6462" mi="3" ci="0" mb="2" cb="0"/><line nr="6463" mi="3" ci="0" mb="0" cb="0"/><line nr="6465" mi="3" ci="0" mb="0" cb="0"/><line nr="6467" mi="3" ci="2" mb="3" cb="1"/><line nr="6468" mi="5" ci="5" mb="0" cb="0"/><line nr="6469" mi="7" ci="6" mb="0" cb="0"/><line nr="6472" mi="0" ci="1" mb="0" cb="0"/><line nr="6477" mi="0" ci="6" mb="0" cb="0"/><line nr="6478" mi="0" ci="2" mb="0" cb="0"/><line nr="6479" mi="0" ci="4" mb="0" cb="0"/><line nr="6480" mi="0" ci="5" mb="0" cb="0"/><line nr="6481" mi="0" ci="3" mb="0" cb="0"/><line nr="6483" mi="0" ci="4" mb="0" cb="0"/><line nr="6484" mi="0" ci="4" mb="0" cb="0"/><line nr="6485" mi="0" ci="4" mb="0" cb="0"/><line nr="6486" mi="0" ci="6" mb="0" cb="0"/><line nr="6487" mi="0" ci="2" mb="0" cb="0"/><line nr="6488" mi="1" ci="0" mb="0" cb="0"/><line nr="6489" mi="2" ci="0" mb="2" cb="0"/><line nr="6490" mi="4" ci="0" mb="0" cb="0"/><line nr="6491" mi="3" ci="0" mb="0" cb="0"/><line nr="6493" mi="4" ci="0" mb="0" cb="0"/><line nr="6495" mi="3" ci="0" mb="2" cb="0"/><line nr="6496" mi="3" ci="0" mb="0" cb="0"/><line nr="6498" mi="3" ci="0" mb="2" cb="0"/><line nr="6499" mi="3" ci="0" mb="0" cb="0"/><line nr="6501" mi="3" ci="0" mb="0" cb="0"/><line nr="6503" mi="3" ci="2" mb="3" cb="1"/><line nr="6504" mi="5" ci="5" mb="0" cb="0"/><line nr="6505" mi="7" ci="6" mb="0" cb="0"/><line nr="6508" mi="0" ci="1" mb="0" cb="0"/><line nr="6512" mi="0" ci="6" mb="0" cb="0"/><line nr="6513" mi="0" ci="2" mb="0" cb="0"/><line nr="6514" mi="0" ci="4" mb="0" cb="0"/><line nr="6515" mi="0" ci="5" mb="0" cb="0"/><line nr="6517" mi="0" ci="4" mb="0" cb="0"/><line nr="6520" mi="0" ci="4" mb="0" cb="2"/><line nr="6547" mi="0" ci="1" mb="0" cb="0"/><line nr="6549" mi="0" ci="6" mb="0" cb="0"/><line nr="6550" mi="0" ci="1" mb="0" cb="0"/><line nr="6552" mi="0" ci="3" mb="0" cb="0"/><line nr="6554" mi="0" ci="4" mb="0" cb="0"/><line nr="6555" mi="1" ci="0" mb="0" cb="0"/><line nr="6556" mi="2" ci="0" mb="2" cb="0"/><line nr="6557" mi="4" ci="0" mb="0" cb="0"/><line nr="6558" mi="3" ci="0" mb="0" cb="0"/><line nr="6560" mi="4" ci="0" mb="0" cb="0"/><line nr="6562" mi="3" ci="0" mb="2" cb="0"/><line nr="6563" mi="3" ci="0" mb="0" cb="0"/><line nr="6565" mi="3" ci="0" mb="2" cb="0"/><line nr="6566" mi="3" ci="0" mb="0" cb="0"/><line nr="6568" mi="3" ci="0" mb="0" cb="0"/><line nr="6570" mi="3" ci="2" mb="3" cb="1"/><line nr="6571" mi="5" ci="5" mb="0" cb="0"/><line nr="6572" mi="7" ci="6" mb="0" cb="0"/><line nr="6575" mi="0" ci="1" mb="0" cb="0"/><line nr="6579" mi="0" ci="6" mb="0" cb="0"/><line nr="6580" mi="0" ci="2" mb="0" cb="0"/><line nr="6581" mi="0" ci="4" mb="0" cb="0"/><line nr="6582" mi="0" ci="5" mb="0" cb="0"/><line nr="6584" mi="0" ci="4" mb="1" cb="2"/><line nr="6609" mi="0" ci="3" mb="0" cb="0"/><line nr="6610" mi="0" ci="4" mb="0" cb="2"/><line nr="6611" mi="0" ci="4" mb="0" cb="0"/><line nr="6613" mi="0" ci="4" mb="0" cb="2"/><line nr="6618" mi="0" ci="3" mb="0" cb="0"/><line nr="6619" mi="0" ci="1" mb="0" cb="0"/><line nr="6621" mi="0" ci="6" mb="0" cb="0"/><line nr="6622" mi="0" ci="4" mb="0" cb="2"/><line nr="6623" mi="0" ci="4" mb="0" cb="0"/><line nr="6625" mi="0" ci="4" mb="1" cb="2"/><line nr="6627" mi="0" ci="3" mb="0" cb="0"/><line nr="6628" mi="0" ci="1" mb="0" cb="0"/><line nr="6638" mi="0" ci="3" mb="0" cb="0"/><line nr="6639" mi="0" ci="1" mb="0" cb="0"/><line nr="6641" mi="6" ci="0" mb="0" cb="0"/><line nr="6642" mi="4" ci="0" mb="0" cb="0"/><line nr="6643" mi="4" ci="0" mb="0" cb="0"/><line nr="6650" mi="0" ci="4" mb="0" cb="0"/><line nr="6651" mi="0" ci="1" mb="0" cb="0"/><line nr="6653" mi="6" ci="0" mb="0" cb="0"/><line nr="6654" mi="4" ci="0" mb="0" cb="0"/><line nr="6655" mi="4" ci="0" mb="0" cb="0"/><line nr="6657" mi="1" ci="0" mb="0" cb="0"/><line nr="6658" mi="2" ci="0" mb="2" cb="0"/><line nr="6659" mi="4" ci="0" mb="0" cb="0"/><line nr="6660" mi="3" ci="0" mb="0" cb="0"/><line nr="6662" mi="4" ci="0" mb="0" cb="0"/><line nr="6664" mi="3" ci="0" mb="2" cb="0"/><line nr="6665" mi="3" ci="0" mb="0" cb="0"/><line nr="6667" mi="3" ci="0" mb="2" cb="0"/><line nr="6668" mi="3" ci="0" mb="0" cb="0"/><line nr="6670" mi="3" ci="0" mb="0" cb="0"/><line nr="6672" mi="3" ci="2" mb="3" cb="1"/><line nr="6673" mi="5" ci="5" mb="0" cb="0"/><line nr="6674" mi="7" ci="6" mb="0" cb="0"/><line nr="6677" mi="0" ci="1" mb="0" cb="0"/><line nr="6681" mi="0" ci="6" mb="0" cb="0"/><line nr="6682" mi="0" ci="2" mb="0" cb="0"/><line nr="6683" mi="0" ci="4" mb="0" cb="0"/><line nr="6684" mi="0" ci="5" mb="0" cb="0"/><line nr="6685" mi="0" ci="3" mb="0" cb="0"/><line nr="6687" mi="0" ci="2" mb="0" cb="0"/><line nr="6688" mi="0" ci="4" mb="0" cb="0"/><line nr="6689" mi="0" ci="4" mb="0" cb="0"/><line nr="6690" mi="0" ci="4" mb="0" cb="0"/><line nr="6691" mi="0" ci="4" mb="1" cb="1"/><line nr="6693" mi="2" ci="0" mb="0" cb="0"/><line nr="6694" mi="1" ci="0" mb="0" cb="0"/><line nr="6696" mi="0" ci="6" mb="0" cb="0"/><line nr="6699" mi="0" ci="4" mb="0" cb="0"/><line nr="6700" mi="0" ci="5" mb="0" cb="0"/><line nr="6701" mi="0" ci="2" mb="0" cb="0"/><line nr="6702" mi="0" ci="5" mb="0" cb="0"/><line nr="6703" mi="0" ci="4" mb="0" cb="0"/><line nr="6704" mi="1" ci="0" mb="0" cb="0"/><line nr="6705" mi="2" ci="0" mb="2" cb="0"/><line nr="6706" mi="4" ci="0" mb="0" cb="0"/><line nr="6707" mi="3" ci="0" mb="0" cb="0"/><line nr="6709" mi="4" ci="0" mb="0" cb="0"/><line nr="6711" mi="3" ci="0" mb="2" cb="0"/><line nr="6712" mi="3" ci="0" mb="0" cb="0"/><line nr="6714" mi="3" ci="0" mb="2" cb="0"/><line nr="6715" mi="3" ci="0" mb="0" cb="0"/><line nr="6717" mi="3" ci="0" mb="0" cb="0"/><line nr="6719" mi="3" ci="2" mb="3" cb="1"/><line nr="6720" mi="10" ci="0" mb="0" cb="0"/><line nr="6721" mi="13" ci="0" mb="0" cb="0"/><line nr="6724" mi="0" ci="1" mb="0" cb="0"/><line nr="6728" mi="6" ci="0" mb="0" cb="0"/><line nr="6729" mi="2" ci="0" mb="0" cb="0"/><line nr="6730" mi="4" ci="0" mb="0" cb="0"/><line nr="6731" mi="5" ci="0" mb="0" cb="0"/><line nr="6733" mi="4" ci="0" mb="0" cb="0"/><line nr="6734" mi="2" ci="0" mb="0" cb="0"/><line nr="6735" mi="1" ci="0" mb="0" cb="0"/><line nr="6736" mi="2" ci="0" mb="2" cb="0"/><line nr="6737" mi="4" ci="0" mb="0" cb="0"/><line nr="6738" mi="3" ci="0" mb="0" cb="0"/><line nr="6740" mi="4" ci="0" mb="0" cb="0"/><line nr="6742" mi="3" ci="0" mb="2" cb="0"/><line nr="6743" mi="3" ci="0" mb="0" cb="0"/><line nr="6745" mi="3" ci="0" mb="2" cb="0"/><line nr="6746" mi="3" ci="0" mb="0" cb="0"/><line nr="6748" mi="3" ci="0" mb="0" cb="0"/><line nr="6750" mi="5" ci="0" mb="4" cb="0"/><line nr="6751" mi="10" ci="0" mb="0" cb="0"/><line nr="6752" mi="13" ci="0" mb="0" cb="0"/><line nr="6755" mi="1" ci="0" mb="0" cb="0"/><line nr="6758" mi="0" ci="10" mb="0" cb="0"/><line nr="6759" mi="0" ci="7" mb="0" cb="2"/><line nr="6760" mi="3" ci="0" mb="0" cb="0"/><line nr="6761" mi="13" ci="6" mb="0" cb="0"/><line nr="6765" mi="0" ci="10" mb="0" cb="0"/><line nr="6766" mi="0" ci="7" mb="0" cb="2"/><line nr="6767" mi="0" ci="3" mb="0" cb="0"/><line nr="6768" mi="7" ci="12" mb="0" cb="0"/><line nr="6772" mi="0" ci="10" mb="0" cb="0"/><line nr="6773" mi="2" ci="5" mb="1" cb="1"/><line nr="6774" mi="0" ci="3" mb="0" cb="0"/><line nr="6775" mi="7" ci="12" mb="0" cb="0"/><line nr="6779" mi="0" ci="10" mb="0" cb="0"/><line nr="6780" mi="2" ci="5" mb="1" cb="1"/><line nr="6781" mi="0" ci="3" mb="0" cb="0"/><line nr="6782" mi="7" ci="12" mb="0" cb="0"/><line nr="6786" mi="0" ci="10" mb="0" cb="0"/><line nr="6787" mi="2" ci="5" mb="1" cb="1"/><line nr="6788" mi="0" ci="3" mb="0" cb="0"/><line nr="6789" mi="7" ci="12" mb="0" cb="0"/><line nr="6793" mi="0" ci="10" mb="0" cb="0"/><line nr="6794" mi="0" ci="7" mb="0" cb="2"/><line nr="6795" mi="3" ci="0" mb="0" cb="0"/><line nr="6796" mi="13" ci="6" mb="0" cb="0"/><line nr="6800" mi="0" ci="10" mb="0" cb="0"/><line nr="6801" mi="0" ci="7" mb="0" cb="2"/><line nr="6802" mi="3" ci="0" mb="0" cb="0"/><line nr="6803" mi="13" ci="6" mb="0" cb="0"/><line nr="6807" mi="0" ci="10" mb="0" cb="0"/><line nr="6808" mi="0" ci="7" mb="0" cb="2"/><line nr="6809" mi="3" ci="0" mb="0" cb="0"/><line nr="6810" mi="13" ci="6" mb="0" cb="0"/><line nr="6814" mi="0" ci="10" mb="0" cb="0"/><line nr="6815" mi="2" ci="5" mb="1" cb="1"/><line nr="6816" mi="0" ci="3" mb="0" cb="0"/><line nr="6817" mi="0" ci="19" mb="0" cb="0"/><line nr="6821" mi="0" ci="10" mb="0" cb="0"/><line nr="6822" mi="2" ci="5" mb="1" cb="1"/><line nr="6823" mi="0" ci="3" mb="0" cb="0"/><line nr="6824" mi="7" ci="12" mb="0" cb="0"/><line nr="6828" mi="0" ci="10" mb="0" cb="0"/><line nr="6829" mi="0" ci="7" mb="0" cb="2"/><line nr="6830" mi="3" ci="0" mb="0" cb="0"/><line nr="6831" mi="13" ci="6" mb="0" cb="0"/><line nr="6835" mi="0" ci="10" mb="0" cb="0"/><line nr="6836" mi="2" ci="5" mb="1" cb="1"/><line nr="6837" mi="0" ci="3" mb="0" cb="0"/><line nr="6838" mi="7" ci="12" mb="0" cb="0"/><line nr="6842" mi="0" ci="10" mb="0" cb="0"/><line nr="6843" mi="2" ci="5" mb="1" cb="1"/><line nr="6844" mi="3" ci="0" mb="0" cb="0"/><line nr="6845" mi="13" ci="6" mb="0" cb="0"/><line nr="6849" mi="0" ci="10" mb="0" cb="0"/><line nr="6850" mi="0" ci="7" mb="0" cb="2"/><line nr="6851" mi="3" ci="0" mb="0" cb="0"/><line nr="6852" mi="13" ci="6" mb="0" cb="0"/><line nr="6856" mi="0" ci="10" mb="0" cb="0"/><line nr="6857" mi="0" ci="7" mb="0" cb="2"/><line nr="6858" mi="3" ci="0" mb="0" cb="0"/><line nr="6859" mi="13" ci="6" mb="0" cb="0"/><line nr="6863" mi="0" ci="10" mb="0" cb="0"/><line nr="6864" mi="0" ci="7" mb="0" cb="2"/><line nr="6865" mi="0" ci="3" mb="0" cb="0"/><line nr="6866" mi="7" ci="12" mb="0" cb="0"/><line nr="6870" mi="0" ci="10" mb="0" cb="0"/><line nr="6871" mi="2" ci="5" mb="1" cb="1"/><line nr="6872" mi="0" ci="3" mb="0" cb="0"/><line nr="6873" mi="7" ci="12" mb="0" cb="0"/><line nr="6877" mi="0" ci="10" mb="0" cb="0"/><line nr="6878" mi="2" ci="5" mb="1" cb="1"/><line nr="6879" mi="0" ci="3" mb="0" cb="0"/><line nr="6880" mi="7" ci="12" mb="0" cb="0"/><line nr="6884" mi="0" ci="10" mb="0" cb="0"/><line nr="6885" mi="2" ci="5" mb="1" cb="1"/><line nr="6886" mi="0" ci="3" mb="0" cb="0"/><line nr="6887" mi="7" ci="12" mb="0" cb="0"/><line nr="6891" mi="0" ci="10" mb="0" cb="0"/><line nr="6892" mi="2" ci="5" mb="1" cb="1"/><line nr="6893" mi="0" ci="3" mb="0" cb="0"/><line nr="6894" mi="7" ci="12" mb="0" cb="0"/><line nr="6898" mi="0" ci="10" mb="0" cb="0"/><line nr="6899" mi="2" ci="5" mb="1" cb="1"/><line nr="6900" mi="0" ci="3" mb="0" cb="0"/><line nr="6901" mi="7" ci="12" mb="0" cb="0"/><line nr="6905" mi="0" ci="10" mb="0" cb="0"/><line nr="6906" mi="2" ci="5" mb="1" cb="1"/><line nr="6907" mi="0" ci="3" mb="0" cb="0"/><line nr="6908" mi="7" ci="12" mb="0" cb="0"/><line nr="6912" mi="0" ci="10" mb="0" cb="0"/><line nr="6913" mi="2" ci="5" mb="1" cb="1"/><line nr="6914" mi="0" ci="3" mb="0" cb="0"/><line nr="6915" mi="7" ci="12" mb="0" cb="0"/><line nr="6919" mi="0" ci="10" mb="0" cb="0"/><line nr="6920" mi="2" ci="5" mb="1" cb="1"/><line nr="6921" mi="0" ci="3" mb="0" cb="0"/><line nr="6922" mi="7" ci="12" mb="0" cb="0"/><line nr="6926" mi="0" ci="10" mb="0" cb="0"/><line nr="6927" mi="2" ci="5" mb="1" cb="1"/><line nr="6928" mi="0" ci="3" mb="0" cb="0"/><line nr="6929" mi="7" ci="12" mb="0" cb="0"/><line nr="6933" mi="0" ci="10" mb="0" cb="0"/><line nr="6934" mi="2" ci="5" mb="1" cb="1"/><line nr="6935" mi="0" ci="3" mb="0" cb="0"/><line nr="6936" mi="7" ci="12" mb="0" cb="0"/><line nr="6940" mi="0" ci="10" mb="0" cb="0"/><line nr="6941" mi="2" ci="5" mb="1" cb="1"/><line nr="6942" mi="0" ci="3" mb="0" cb="0"/><line nr="6943" mi="7" ci="12" mb="0" cb="0"/><line nr="6947" mi="0" ci="10" mb="0" cb="0"/><line nr="6948" mi="2" ci="5" mb="1" cb="1"/><line nr="6949" mi="0" ci="3" mb="0" cb="0"/><line nr="6950" mi="7" ci="12" mb="0" cb="0"/><line nr="6954" mi="0" ci="10" mb="0" cb="0"/><line nr="6955" mi="2" ci="5" mb="1" cb="1"/><line nr="6956" mi="0" ci="3" mb="0" cb="0"/><line nr="6957" mi="7" ci="12" mb="0" cb="0"/><line nr="6961" mi="0" ci="10" mb="0" cb="0"/><line nr="6962" mi="2" ci="5" mb="1" cb="1"/><line nr="6963" mi="0" ci="3" mb="0" cb="0"/><line nr="6964" mi="7" ci="12" mb="0" cb="0"/><line nr="6968" mi="0" ci="10" mb="0" cb="0"/><line nr="6969" mi="2" ci="5" mb="1" cb="1"/><line nr="6970" mi="0" ci="3" mb="0" cb="0"/><line nr="6971" mi="7" ci="12" mb="0" cb="0"/><line nr="6975" mi="0" ci="10" mb="0" cb="0"/><line nr="6976" mi="2" ci="5" mb="1" cb="1"/><line nr="6977" mi="0" ci="3" mb="0" cb="0"/><line nr="6978" mi="7" ci="12" mb="0" cb="0"/><line nr="6982" mi="0" ci="10" mb="0" cb="0"/><line nr="6983" mi="2" ci="5" mb="1" cb="1"/><line nr="6984" mi="0" ci="3" mb="0" cb="0"/><line nr="6985" mi="7" ci="12" mb="0" cb="0"/><line nr="6989" mi="0" ci="10" mb="0" cb="0"/><line nr="6990" mi="2" ci="5" mb="1" cb="1"/><line nr="6991" mi="0" ci="3" mb="0" cb="0"/><line nr="6992" mi="7" ci="12" mb="0" cb="0"/><line nr="6996" mi="0" ci="10" mb="0" cb="0"/><line nr="6997" mi="2" ci="5" mb="1" cb="1"/><line nr="6998" mi="0" ci="3" mb="0" cb="0"/><line nr="6999" mi="7" ci="12" mb="0" cb="0"/><line nr="7003" mi="0" ci="10" mb="0" cb="0"/><line nr="7004" mi="7" ci="0" mb="2" cb="0"/><line nr="7005" mi="0" ci="3" mb="0" cb="0"/><line nr="7006" mi="13" ci="6" mb="0" cb="0"/><line nr="7010" mi="0" ci="10" mb="0" cb="0"/><line nr="7011" mi="2" ci="5" mb="1" cb="1"/><line nr="7012" mi="0" ci="3" mb="0" cb="0"/><line nr="7013" mi="7" ci="12" mb="0" cb="0"/><line nr="7017" mi="0" ci="10" mb="0" cb="0"/><line nr="7018" mi="2" ci="5" mb="1" cb="1"/><line nr="7019" mi="0" ci="3" mb="0" cb="0"/><line nr="7020" mi="7" ci="12" mb="0" cb="0"/><line nr="7024" mi="0" ci="10" mb="0" cb="0"/><line nr="7025" mi="0" ci="7" mb="0" cb="2"/><line nr="7026" mi="3" ci="0" mb="0" cb="0"/><line nr="7027" mi="13" ci="6" mb="0" cb="0"/><line nr="7031" mi="0" ci="10" mb="0" cb="0"/><line nr="7032" mi="0" ci="7" mb="0" cb="2"/><line nr="7033" mi="3" ci="0" mb="0" cb="0"/><line nr="7034" mi="13" ci="6" mb="0" cb="0"/><line nr="7038" mi="0" ci="10" mb="0" cb="0"/><line nr="7039" mi="0" ci="7" mb="0" cb="2"/><line nr="7040" mi="3" ci="0" mb="0" cb="0"/><line nr="7041" mi="13" ci="6" mb="0" cb="0"/><line nr="7045" mi="0" ci="10" mb="0" cb="0"/><line nr="7046" mi="2" ci="5" mb="1" cb="1"/><line nr="7047" mi="0" ci="3" mb="0" cb="0"/><line nr="7048" mi="7" ci="12" mb="0" cb="0"/><line nr="7052" mi="0" ci="10" mb="0" cb="0"/><line nr="7053" mi="0" ci="7" mb="0" cb="2"/><line nr="7054" mi="3" ci="0" mb="0" cb="0"/><line nr="7055" mi="13" ci="6" mb="0" cb="0"/><line nr="7059" mi="0" ci="10" mb="0" cb="0"/><line nr="7060" mi="0" ci="7" mb="0" cb="2"/><line nr="7061" mi="3" ci="0" mb="0" cb="0"/><line nr="7062" mi="13" ci="6" mb="0" cb="0"/><line nr="7066" mi="0" ci="10" mb="0" cb="0"/><line nr="7067" mi="0" ci="7" mb="0" cb="2"/><line nr="7068" mi="3" ci="0" mb="0" cb="0"/><line nr="7069" mi="13" ci="6" mb="0" cb="0"/><line nr="7073" mi="0" ci="10" mb="0" cb="0"/><line nr="7074" mi="0" ci="7" mb="0" cb="2"/><line nr="7075" mi="3" ci="0" mb="0" cb="0"/><line nr="7076" mi="13" ci="6" mb="0" cb="0"/><line nr="7080" mi="0" ci="10" mb="0" cb="0"/><line nr="7081" mi="2" ci="5" mb="1" cb="1"/><line nr="7082" mi="0" ci="3" mb="0" cb="0"/><line nr="7083" mi="7" ci="12" mb="0" cb="0"/><line nr="7087" mi="0" ci="10" mb="0" cb="0"/><line nr="7088" mi="0" ci="7" mb="0" cb="2"/><line nr="7089" mi="3" ci="0" mb="0" cb="0"/><line nr="7090" mi="13" ci="6" mb="0" cb="0"/><line nr="7094" mi="0" ci="10" mb="0" cb="0"/><line nr="7095" mi="0" ci="7" mb="0" cb="2"/><line nr="7096" mi="3" ci="0" mb="0" cb="0"/><line nr="7097" mi="13" ci="6" mb="0" cb="0"/><line nr="7101" mi="0" ci="10" mb="0" cb="0"/><line nr="7102" mi="0" ci="7" mb="0" cb="2"/><line nr="7103" mi="3" ci="0" mb="0" cb="0"/><line nr="7104" mi="13" ci="6" mb="0" cb="0"/><line nr="7108" mi="0" ci="10" mb="0" cb="0"/><line nr="7109" mi="2" ci="5" mb="1" cb="1"/><line nr="7110" mi="0" ci="3" mb="0" cb="0"/><line nr="7111" mi="7" ci="12" mb="0" cb="0"/><line nr="7115" mi="0" ci="10" mb="0" cb="0"/><line nr="7116" mi="7" ci="0" mb="2" cb="0"/><line nr="7117" mi="0" ci="3" mb="0" cb="0"/><line nr="7118" mi="13" ci="6" mb="0" cb="0"/><line nr="7122" mi="0" ci="10" mb="0" cb="0"/><line nr="7123" mi="2" ci="5" mb="1" cb="1"/><line nr="7124" mi="0" ci="3" mb="0" cb="0"/><line nr="7125" mi="7" ci="12" mb="0" cb="0"/><line nr="7129" mi="0" ci="10" mb="0" cb="0"/><line nr="7130" mi="2" ci="5" mb="1" cb="1"/><line nr="7131" mi="0" ci="3" mb="0" cb="0"/><line nr="7132" mi="7" ci="12" mb="0" cb="0"/><line nr="7136" mi="0" ci="10" mb="0" cb="0"/><line nr="7137" mi="2" ci="5" mb="1" cb="1"/><line nr="7138" mi="3" ci="0" mb="0" cb="0"/><line nr="7139" mi="13" ci="6" mb="0" cb="0"/><line nr="7143" mi="0" ci="10" mb="0" cb="0"/><line nr="7144" mi="0" ci="7" mb="0" cb="2"/><line nr="7145" mi="0" ci="3" mb="0" cb="0"/><line nr="7146" mi="7" ci="12" mb="0" cb="0"/><line nr="7150" mi="0" ci="10" mb="0" cb="0"/><line nr="7151" mi="2" ci="5" mb="1" cb="1"/><line nr="7152" mi="0" ci="3" mb="0" cb="0"/><line nr="7153" mi="7" ci="12" mb="0" cb="0"/><line nr="7157" mi="0" ci="10" mb="0" cb="0"/><line nr="7158" mi="2" ci="5" mb="1" cb="1"/><line nr="7159" mi="3" ci="0" mb="0" cb="0"/><line nr="7160" mi="13" ci="6" mb="0" cb="0"/><line nr="7164" mi="0" ci="10" mb="0" cb="0"/><line nr="7165" mi="2" ci="5" mb="1" cb="1"/><line nr="7166" mi="0" ci="3" mb="0" cb="0"/><line nr="7167" mi="7" ci="12" mb="0" cb="0"/><line nr="7171" mi="0" ci="10" mb="0" cb="0"/><line nr="7172" mi="2" ci="5" mb="1" cb="1"/><line nr="7173" mi="0" ci="3" mb="0" cb="0"/><line nr="7174" mi="7" ci="12" mb="0" cb="0"/><line nr="7178" mi="0" ci="10" mb="0" cb="0"/><line nr="7179" mi="2" ci="5" mb="1" cb="1"/><line nr="7180" mi="0" ci="3" mb="0" cb="0"/><line nr="7181" mi="7" ci="12" mb="0" cb="0"/><line nr="7185" mi="0" ci="10" mb="0" cb="0"/><line nr="7186" mi="2" ci="5" mb="1" cb="1"/><line nr="7187" mi="0" ci="3" mb="0" cb="0"/><line nr="7188" mi="7" ci="12" mb="0" cb="0"/><line nr="7192" mi="0" ci="10" mb="0" cb="0"/><line nr="7193" mi="0" ci="7" mb="0" cb="2"/><line nr="7194" mi="3" ci="0" mb="0" cb="0"/><line nr="7195" mi="13" ci="6" mb="0" cb="0"/><line nr="7199" mi="0" ci="10" mb="0" cb="0"/><line nr="7200" mi="2" ci="5" mb="1" cb="1"/><line nr="7201" mi="0" ci="3" mb="0" cb="0"/><line nr="7202" mi="7" ci="12" mb="0" cb="0"/><line nr="7206" mi="0" ci="10" mb="0" cb="0"/><line nr="7207" mi="1" ci="6" mb="1" cb="1"/><line nr="7208" mi="3" ci="0" mb="0" cb="0"/><line nr="7209" mi="13" ci="6" mb="0" cb="0"/><line nr="7213" mi="0" ci="10" mb="0" cb="0"/><line nr="7214" mi="0" ci="7" mb="0" cb="2"/><line nr="7215" mi="3" ci="0" mb="0" cb="0"/><line nr="7216" mi="13" ci="6" mb="0" cb="0"/><line nr="7220" mi="0" ci="10" mb="0" cb="0"/><line nr="7221" mi="2" ci="5" mb="1" cb="1"/><line nr="7222" mi="0" ci="3" mb="0" cb="0"/><line nr="7223" mi="7" ci="12" mb="0" cb="0"/><line nr="7227" mi="0" ci="10" mb="0" cb="0"/><line nr="7228" mi="0" ci="7" mb="0" cb="2"/><line nr="7229" mi="3" ci="0" mb="0" cb="0"/><line nr="7230" mi="13" ci="6" mb="0" cb="0"/><line nr="7234" mi="0" ci="10" mb="0" cb="0"/><line nr="7235" mi="0" ci="7" mb="0" cb="2"/><line nr="7236" mi="3" ci="0" mb="0" cb="0"/><line nr="7237" mi="13" ci="6" mb="0" cb="0"/><line nr="7241" mi="0" ci="10" mb="0" cb="0"/><line nr="7242" mi="0" ci="7" mb="0" cb="2"/><line nr="7243" mi="3" ci="0" mb="0" cb="0"/><line nr="7244" mi="13" ci="6" mb="0" cb="0"/><line nr="7248" mi="0" ci="10" mb="0" cb="0"/><line nr="7249" mi="2" ci="5" mb="1" cb="1"/><line nr="7250" mi="0" ci="3" mb="0" cb="0"/><line nr="7251" mi="7" ci="12" mb="0" cb="0"/><line nr="7255" mi="0" ci="10" mb="0" cb="0"/><line nr="7256" mi="0" ci="7" mb="0" cb="2"/><line nr="7257" mi="3" ci="0" mb="0" cb="0"/><line nr="7258" mi="13" ci="6" mb="0" cb="0"/><line nr="7262" mi="0" ci="10" mb="0" cb="0"/><line nr="7263" mi="0" ci="7" mb="0" cb="2"/><line nr="7264" mi="3" ci="0" mb="0" cb="0"/><line nr="7265" mi="13" ci="6" mb="0" cb="0"/><line nr="7269" mi="0" ci="10" mb="0" cb="0"/><line nr="7270" mi="2" ci="5" mb="1" cb="1"/><line nr="7271" mi="0" ci="3" mb="0" cb="0"/><line nr="7272" mi="7" ci="12" mb="0" cb="0"/><line nr="7276" mi="0" ci="10" mb="0" cb="0"/><line nr="7277" mi="0" ci="7" mb="0" cb="2"/><line nr="7278" mi="3" ci="0" mb="0" cb="0"/><line nr="7279" mi="13" ci="6" mb="0" cb="0"/><line nr="7283" mi="0" ci="10" mb="0" cb="0"/><line nr="7284" mi="2" ci="5" mb="1" cb="1"/><line nr="7285" mi="0" ci="3" mb="0" cb="0"/><line nr="7286" mi="7" ci="12" mb="0" cb="0"/><line nr="7290" mi="0" ci="5" mb="1" cb="1"/><line nr="7291" mi="2" ci="0" mb="0" cb="0"/><line nr="7295" mi="0" ci="6" mb="1" cb="1"/><line nr="7296" mi="6" ci="0" mb="2" cb="0"/><line nr="7297" mi="6" ci="0" mb="2" cb="0"/><line nr="7298" mi="5" ci="0" mb="2" cb="0"/><line nr="7299" mi="2" ci="0" mb="0" cb="0"/><line nr="7304" mi="0" ci="3" mb="0" cb="0"/><line nr="7305" mi="0" ci="6" mb="1" cb="1"/><line nr="7306" mi="0" ci="6" mb="0" cb="2"/><line nr="7307" mi="0" ci="5" mb="1" cb="1"/><line nr="7308" mi="3" ci="0" mb="0" cb="0"/><line nr="7309" mi="6" ci="0" mb="2" cb="0"/><line nr="7310" mi="6" ci="0" mb="2" cb="0"/><line nr="7311" mi="3" ci="0" mb="0" cb="0"/><line nr="7312" mi="6" ci="0" mb="2" cb="0"/><line nr="7314" mi="3" ci="0" mb="0" cb="0"/><line nr="7315" mi="7" ci="0" mb="2" cb="0"/><line nr="7317" mi="6" ci="0" mb="2" cb="0"/><line nr="7318" mi="2" ci="0" mb="0" cb="0"/><line nr="7322" mi="0" ci="6" mb="0" cb="2"/><line nr="7323" mi="2" ci="3" mb="1" cb="1"/><line nr="7324" mi="0" ci="2" mb="0" cb="0"/><line nr="7328" mi="0" ci="6" mb="1" cb="1"/><line nr="7329" mi="6" ci="0" mb="2" cb="0"/><line nr="7330" mi="2" ci="0" mb="0" cb="0"/><line nr="7334" mi="0" ci="6" mb="0" cb="2"/><line nr="7335" mi="2" ci="3" mb="1" cb="1"/><line nr="7336" mi="0" ci="2" mb="0" cb="0"/><line nr="7340" mi="2" ci="3" mb="1" cb="1"/><line nr="7343" mi="0" ci="3" mb="0" cb="0"/><line nr="7344" mi="0" ci="7" mb="0" cb="2"/><line nr="7346" mi="0" ci="3" mb="0" cb="0"/><line nr="7347" mi="0" ci="7" mb="1" cb="1"/><line nr="7348" mi="0" ci="2" mb="0" cb="0"/><line nr="7352" mi="0" ci="6" mb="1" cb="1"/><line nr="7353" mi="2" ci="0" mb="0" cb="0"/><line nr="7357" mi="0" ci="6" mb="0" cb="2"/><line nr="7358" mi="0" ci="2" mb="0" cb="0"/><line nr="7363" mi="0" ci="3" mb="0" cb="0"/><line nr="7364" mi="0" ci="3" mb="0" cb="2"/><line nr="7365" mi="0" ci="3" mb="0" cb="0"/><line nr="7366" mi="0" ci="5" mb="1" cb="1"/><line nr="7368" mi="0" ci="2" mb="0" cb="0"/><line nr="7372" mi="0" ci="6" mb="0" cb="2"/><line nr="7374" mi="0" ci="3" mb="0" cb="0"/><line nr="7375" mi="3" ci="3" mb="1" cb="1"/><line nr="7376" mi="2" ci="4" mb="1" cb="1"/><line nr="7377" mi="0" ci="2" mb="0" cb="0"/><line nr="7383" mi="0" ci="3" mb="0" cb="0"/><line nr="7384" mi="0" ci="7" mb="0" cb="2"/><line nr="7386" mi="0" ci="5" mb="0" cb="2"/><line nr="7388" mi="0" ci="3" mb="0" cb="0"/><line nr="7389" mi="0" ci="7" mb="0" cb="2"/><line nr="7391" mi="0" ci="3" mb="0" cb="0"/><line nr="7392" mi="0" ci="6" mb="1" cb="1"/><line nr="7393" mi="0" ci="5" mb="0" cb="2"/><line nr="7394" mi="0" ci="2" mb="0" cb="0"/><line nr="7398" mi="0" ci="6" mb="0" cb="2"/><line nr="7399" mi="2" ci="3" mb="1" cb="1"/><line nr="7400" mi="0" ci="2" mb="0" cb="0"/><line nr="7404" mi="0" ci="5" mb="0" cb="2"/><line nr="7407" mi="0" ci="3" mb="0" cb="0"/><line nr="7408" mi="0" ci="7" mb="0" cb="2"/><line nr="7410" mi="0" ci="2" mb="0" cb="0"/><line nr="7414" mi="0" ci="6" mb="0" cb="2"/><line nr="7415" mi="0" ci="5" mb="0" cb="2"/><line nr="7416" mi="0" ci="2" mb="0" cb="0"/><line nr="7420" mi="2" ci="3" mb="1" cb="1"/><line nr="7421" mi="0" ci="2" mb="0" cb="0"/><line nr="7425" mi="0" ci="5" mb="0" cb="2"/><line nr="7426" mi="0" ci="2" mb="0" cb="0"/><line nr="7430" mi="0" ci="6" mb="0" cb="2"/><line nr="7432" mi="0" ci="3" mb="0" cb="0"/><line nr="7433" mi="0" ci="6" mb="0" cb="2"/><line nr="7434" mi="0" ci="6" mb="0" cb="2"/><line nr="7435" mi="0" ci="2" mb="0" cb="0"/><line nr="7440" mi="0" ci="3" mb="0" cb="0"/><line nr="7441" mi="0" ci="3" mb="1" cb="1"/><line nr="7442" mi="0" ci="3" mb="0" cb="0"/><line nr="7443" mi="0" ci="3" mb="0" cb="2"/><line nr="7444" mi="0" ci="3" mb="0" cb="0"/><line nr="7445" mi="2" ci="3" mb="1" cb="1"/><line nr="7448" mi="0" ci="2" mb="0" cb="0"/><line nr="7452" mi="0" ci="5" mb="1" cb="1"/><line nr="7453" mi="2" ci="0" mb="0" cb="0"/><line nr="7457" mi="0" ci="6" mb="0" cb="2"/><line nr="7458" mi="0" ci="6" mb="1" cb="1"/><line nr="7459" mi="2" ci="0" mb="0" cb="0"/><line nr="7463" mi="0" ci="6" mb="0" cb="2"/><line nr="7464" mi="0" ci="6" mb="0" cb="2"/><line nr="7465" mi="2" ci="3" mb="1" cb="1"/><line nr="7466" mi="0" ci="2" mb="0" cb="0"/><line nr="7470" mi="2" ci="4" mb="1" cb="1"/><line nr="7471" mi="2" ci="3" mb="1" cb="1"/><line nr="7474" mi="0" ci="3" mb="0" cb="0"/><line nr="7475" mi="0" ci="7" mb="1" cb="1"/><line nr="7477" mi="0" ci="2" mb="0" cb="0"/><line nr="7481" mi="0" ci="5" mb="0" cb="2"/><line nr="7484" mi="0" ci="3" mb="0" cb="0"/><line nr="7485" mi="0" ci="7" mb="0" cb="2"/><line nr="7487" mi="0" ci="2" mb="0" cb="0"/><line nr="7491" mi="0" ci="5" mb="0" cb="2"/><line nr="7492" mi="0" ci="2" mb="0" cb="0"/><line nr="7496" mi="0" ci="6" mb="0" cb="2"/><line nr="7497" mi="0" ci="6" mb="0" cb="2"/><line nr="7498" mi="0" ci="2" mb="0" cb="0"/><line nr="7502" mi="2" ci="3" mb="1" cb="1"/><line nr="7503" mi="0" ci="2" mb="0" cb="0"/><line nr="7507" mi="0" ci="5" mb="1" cb="1"/><line nr="7508" mi="2" ci="0" mb="0" cb="0"/><line nr="7512" mi="0" ci="6" mb="0" cb="2"/><line nr="7513" mi="0" ci="5" mb="0" cb="2"/><line nr="7514" mi="0" ci="6" mb="0" cb="2"/><line nr="7515" mi="2" ci="3" mb="1" cb="1"/><line nr="7516" mi="2" ci="4" mb="1" cb="1"/><line nr="7517" mi="0" ci="2" mb="0" cb="0"/><line nr="7522" mi="0" ci="3" mb="0" cb="0"/><line nr="7523" mi="0" ci="6" mb="1" cb="1"/><line nr="7524" mi="0" ci="5" mb="0" cb="2"/><line nr="7525" mi="2" ci="3" mb="1" cb="1"/><line nr="7526" mi="0" ci="3" mb="0" cb="0"/><line nr="7527" mi="0" ci="6" mb="0" cb="2"/><line nr="7528" mi="0" ci="3" mb="0" cb="0"/><line nr="7529" mi="0" ci="3" mb="1" cb="1"/><line nr="7530" mi="3" ci="0" mb="0" cb="0"/><line nr="7531" mi="6" ci="0" mb="2" cb="0"/><line nr="7533" mi="0" ci="2" mb="0" cb="0"/><line nr="7537" mi="2" ci="3" mb="1" cb="1"/><line nr="7540" mi="0" ci="3" mb="0" cb="0"/><line nr="7541" mi="0" ci="7" mb="0" cb="2"/><line nr="7543" mi="0" ci="2" mb="0" cb="0"/><line nr="7547" mi="0" ci="6" mb="0" cb="2"/><line nr="7548" mi="0" ci="5" mb="0" cb="2"/><line nr="7549" mi="0" ci="2" mb="0" cb="0"/><line nr="7553" mi="0" ci="6" mb="0" cb="2"/><line nr="7555" mi="0" ci="3" mb="0" cb="0"/><line nr="7556" mi="3" ci="3" mb="1" cb="1"/><line nr="7557" mi="0" ci="3" mb="0" cb="0"/><line nr="7558" mi="0" ci="7" mb="1" cb="1"/><line nr="7559" mi="2" ci="4" mb="1" cb="1"/><line nr="7560" mi="0" ci="2" mb="0" cb="0"/><line nr="7564" mi="2" ci="4" mb="1" cb="1"/><line nr="7565" mi="2" ci="3" mb="1" cb="1"/><line nr="7566" mi="0" ci="6" mb="0" cb="2"/><line nr="7567" mi="0" ci="2" mb="0" cb="0"/><line nr="7571" mi="0" ci="6" mb="0" cb="2"/><line nr="7572" mi="0" ci="5" mb="0" cb="2"/><line nr="7573" mi="0" ci="6" mb="0" cb="2"/><line nr="7575" mi="0" ci="3" mb="0" cb="0"/><line nr="7576" mi="0" ci="6" mb="0" cb="2"/><line nr="7577" mi="0" ci="6" mb="0" cb="2"/><line nr="7578" mi="0" ci="2" mb="0" cb="0"/><line nr="7582" mi="0" ci="6" mb="0" cb="2"/><line nr="7583" mi="2" ci="3" mb="1" cb="1"/><line nr="7584" mi="0" ci="2" mb="0" cb="0"/><line nr="7588" mi="2" ci="4" mb="1" cb="1"/><line nr="7589" mi="2" ci="3" mb="1" cb="1"/><line nr="7590" mi="0" ci="6" mb="0" cb="2"/><line nr="7592" mi="0" ci="3" mb="0" cb="0"/><line nr="7593" mi="0" ci="3" mb="0" cb="2"/><line nr="7594" mi="0" ci="3" mb="0" cb="0"/><line nr="7595" mi="0" ci="6" mb="1" cb="1"/><line nr="7597" mi="0" ci="2" mb="0" cb="0"/><line nr="7601" mi="0" ci="6" mb="1" cb="1"/><line nr="7602" mi="5" ci="0" mb="2" cb="0"/><line nr="7603" mi="2" ci="0" mb="0" cb="0"/><line nr="7607" mi="0" ci="5" mb="0" cb="2"/><line nr="7608" mi="0" ci="2" mb="0" cb="0"/><line nr="7613" mi="0" ci="3" mb="0" cb="0"/><line nr="7614" mi="0" ci="3" mb="1" cb="1"/><line nr="7615" mi="0" ci="3" mb="0" cb="0"/><line nr="7616" mi="0" ci="5" mb="0" cb="2"/><line nr="7618" mi="0" ci="2" mb="0" cb="0"/><line nr="7622" mi="0" ci="5" mb="1" cb="1"/><line nr="7623" mi="2" ci="0" mb="0" cb="0"/><line nr="7627" mi="0" ci="6" mb="0" cb="2"/><line nr="7628" mi="2" ci="4" mb="1" cb="1"/><line nr="7629" mi="0" ci="2" mb="0" cb="0"/><line nr="7633" mi="0" ci="5" mb="0" cb="2"/><line nr="7634" mi="0" ci="2" mb="0" cb="0"/><line nr="7638" mi="0" ci="5" mb="0" cb="2"/><line nr="7639" mi="0" ci="2" mb="0" cb="0"/><line nr="7643" mi="0" ci="6" mb="0" cb="2"/><line nr="7646" mi="0" ci="3" mb="0" cb="0"/><line nr="7647" mi="0" ci="7" mb="1" cb="1"/><line nr="7649" mi="0" ci="2" mb="0" cb="0"/><line nr="7654" mi="0" ci="3" mb="0" cb="0"/><line nr="7655" mi="0" ci="3" mb="0" cb="2"/><line nr="7656" mi="0" ci="3" mb="0" cb="0"/><line nr="7657" mi="0" ci="3" mb="0" cb="2"/><line nr="7658" mi="0" ci="3" mb="0" cb="0"/><line nr="7659" mi="0" ci="5" mb="0" cb="2"/><line nr="7662" mi="0" ci="2" mb="0" cb="0"/><line nr="7666" mi="0" ci="2" mb="0" cb="0"/><line nr="7670" mi="0" ci="5" mb="0" cb="2"/><line nr="7671" mi="0" ci="2" mb="0" cb="0"/><line nr="7675" mi="0" ci="6" mb="0" cb="2"/><line nr="7676" mi="0" ci="2" mb="0" cb="0"/><line nr="7680" mi="6" ci="0" mb="2" cb="0"/><line nr="7681" mi="5" ci="0" mb="2" cb="0"/><line nr="7682" mi="2" ci="0" mb="0" cb="0"/><line nr="7686" mi="0" ci="6" mb="0" cb="2"/><line nr="7687" mi="0" ci="6" mb="0" cb="2"/><line nr="7688" mi="0" ci="6" mb="0" cb="2"/><line nr="7689" mi="0" ci="2" mb="0" cb="0"/><line nr="7694" mi="0" ci="3" mb="0" cb="0"/><line nr="7695" mi="0" ci="3" mb="0" cb="2"/><line nr="7696" mi="0" ci="3" mb="0" cb="0"/><line nr="7697" mi="0" ci="3" mb="0" cb="2"/><line nr="7698" mi="0" ci="3" mb="0" cb="0"/><line nr="7699" mi="0" ci="5" mb="0" cb="2"/><line nr="7702" mi="0" ci="2" mb="0" cb="0"/><line nr="7706" mi="5" ci="0" mb="2" cb="0"/><line nr="7707" mi="2" ci="0" mb="0" cb="0"/><line nr="7711" mi="0" ci="5" mb="0" cb="2"/><line nr="7712" mi="0" ci="2" mb="0" cb="0"/><line nr="7716" mi="0" ci="6" mb="0" cb="2"/><line nr="7717" mi="2" ci="3" mb="1" cb="1"/><line nr="7718" mi="0" ci="2" mb="0" cb="0"/><line nr="7722" mi="0" ci="2" mb="0" cb="0"/><line nr="7726" mi="0" ci="3" mb="0" cb="0"/><line nr="7727" mi="0" ci="18" mb="0" cb="4"/><line nr="7729" mi="0" ci="3" mb="0" cb="0"/><line nr="7730" mi="3" ci="5" mb="3" cb="1"/><line nr="7731" mi="6" ci="0" mb="2" cb="0"/><line nr="7732" mi="6" ci="0" mb="2" cb="0"/><line nr="7733" mi="2" ci="0" mb="0" cb="0"/><line nr="7737" mi="0" ci="6" mb="1" cb="1"/><line nr="7738" mi="5" ci="0" mb="2" cb="0"/><line nr="7739" mi="2" ci="0" mb="0" cb="0"/><line nr="7743" mi="0" ci="5" mb="0" cb="2"/><line nr="7745" mi="0" ci="3" mb="0" cb="0"/><line nr="7746" mi="0" ci="6" mb="0" cb="2"/><line nr="7747" mi="0" ci="2" mb="0" cb="0"/><line nr="7751" mi="0" ci="5" mb="0" cb="2"/><line nr="7752" mi="0" ci="2" mb="0" cb="0"/><line nr="7756" mi="0" ci="5" mb="0" cb="2"/><line nr="7757" mi="2" ci="4" mb="1" cb="1"/><line nr="7760" mi="0" ci="3" mb="0" cb="0"/><line nr="7761" mi="0" ci="7" mb="0" cb="2"/><line nr="7763" mi="0" ci="3" mb="0" cb="0"/><line nr="7764" mi="0" ci="4" mb="0" cb="2"/><line nr="7765" mi="0" ci="3" mb="0" cb="0"/><line nr="7766" mi="0" ci="4" mb="0" cb="2"/><line nr="7767" mi="0" ci="3" mb="0" cb="0"/><line nr="7768" mi="0" ci="6" mb="0" cb="2"/><line nr="7771" mi="0" ci="2" mb="0" cb="0"/><line nr="7776" mi="0" ci="3" mb="0" cb="0"/><line nr="7777" mi="0" ci="6" mb="0" cb="2"/><line nr="7778" mi="0" ci="6" mb="0" cb="2"/><line nr="7779" mi="0" ci="6" mb="0" cb="2"/><line nr="7780" mi="0" ci="2" mb="0" cb="0"/><line nr="7784" mi="0" ci="5" mb="0" cb="2"/><line nr="7785" mi="2" ci="3" mb="1" cb="1"/><line nr="7788" mi="0" ci="3" mb="0" cb="0"/><line nr="7789" mi="0" ci="7" mb="1" cb="1"/><line nr="7791" mi="0" ci="6" mb="0" cb="2"/><line nr="7792" mi="0" ci="2" mb="0" cb="0"/><line nr="7796" mi="0" ci="5" mb="1" cb="1"/><line nr="7797" mi="2" ci="0" mb="0" cb="0"/><line nr="7801" mi="0" ci="3" mb="0" cb="0"/><line nr="7802" mi="0" ci="18" mb="0" cb="4"/><line nr="7804" mi="0" ci="3" mb="0" cb="0"/><line nr="7805" mi="3" ci="5" mb="3" cb="1"/><line nr="7806" mi="6" ci="0" mb="2" cb="0"/><line nr="7807" mi="6" ci="0" mb="2" cb="0"/><line nr="7808" mi="6" ci="0" mb="2" cb="0"/><line nr="7809" mi="2" ci="0" mb="0" cb="0"/><line nr="7813" mi="5" ci="0" mb="2" cb="0"/><line nr="7814" mi="2" ci="0" mb="0" cb="0"/><line nr="7818" mi="0" ci="5" mb="1" cb="1"/><line nr="7819" mi="2" ci="0" mb="0" cb="0"/><line nr="7823" mi="0" ci="6" mb="0" cb="2"/><line nr="7824" mi="0" ci="2" mb="0" cb="0"/><line nr="7828" mi="0" ci="5" mb="0" cb="2"/><line nr="7829" mi="0" ci="2" mb="0" cb="0"/><line nr="7834" mi="0" ci="3" mb="0" cb="0"/><line nr="7835" mi="0" ci="7" mb="0" cb="2"/><line nr="7836" mi="0" ci="6" mb="0" cb="2"/><line nr="7837" mi="0" ci="2" mb="0" cb="0"/><line nr="7841" mi="0" ci="5" mb="0" cb="2"/><line nr="7842" mi="0" ci="2" mb="0" cb="0"/><line nr="7846" mi="0" ci="5" mb="1" cb="1"/><line nr="7847" mi="2" ci="0" mb="0" cb="0"/><line nr="7851" mi="0" ci="5" mb="1" cb="1"/><line nr="7852" mi="2" ci="0" mb="0" cb="0"/><line nr="7856" mi="6" ci="0" mb="2" cb="0"/><line nr="7857" mi="5" ci="0" mb="2" cb="0"/><line nr="7859" mi="3" ci="0" mb="0" cb="0"/><line nr="7860" mi="6" ci="0" mb="2" cb="0"/><line nr="7861" mi="6" ci="0" mb="2" cb="0"/><line nr="7862" mi="2" ci="0" mb="0" cb="0"/><line nr="7866" mi="0" ci="5" mb="1" cb="1"/><line nr="7867" mi="2" ci="0" mb="0" cb="0"/><line nr="7871" mi="2" ci="3" mb="1" cb="1"/><line nr="7873" mi="0" ci="3" mb="0" cb="0"/><line nr="7874" mi="0" ci="3" mb="1" cb="1"/><line nr="7875" mi="0" ci="3" mb="0" cb="0"/><line nr="7876" mi="0" ci="3" mb="1" cb="1"/><line nr="7877" mi="0" ci="3" mb="0" cb="0"/><line nr="7878" mi="0" ci="3" mb="1" cb="1"/><line nr="7879" mi="0" ci="3" mb="0" cb="0"/><line nr="7880" mi="0" ci="3" mb="0" cb="2"/><line nr="7881" mi="0" ci="3" mb="0" cb="0"/><line nr="7882" mi="0" ci="3" mb="0" cb="2"/><line nr="7883" mi="0" ci="3" mb="0" cb="0"/><line nr="7884" mi="0" ci="5" mb="1" cb="1"/><line nr="7890" mi="0" ci="2" mb="0" cb="0"/><line nr="7895" mi="0" ci="3" mb="0" cb="0"/><line nr="7896" mi="0" ci="3" mb="0" cb="2"/><line nr="7897" mi="0" ci="3" mb="0" cb="0"/><line nr="7898" mi="0" ci="3" mb="0" cb="2"/><line nr="7899" mi="0" ci="3" mb="0" cb="0"/><line nr="7900" mi="0" ci="6" mb="1" cb="1"/><line nr="7903" mi="0" ci="2" mb="0" cb="0"/><line nr="7907" mi="0" ci="5" mb="0" cb="2"/><line nr="7908" mi="0" ci="2" mb="0" cb="0"/><line nr="7912" mi="0" ci="5" mb="0" cb="2"/><line nr="7913" mi="0" ci="2" mb="0" cb="0"/><line nr="7917" mi="2" ci="4" mb="1" cb="1"/><line nr="7918" mi="2" ci="3" mb="1" cb="1"/><line nr="7919" mi="0" ci="2" mb="0" cb="0"/><line nr="7923" mi="0" ci="6" mb="0" cb="2"/><line nr="7926" mi="0" ci="3" mb="0" cb="0"/><line nr="7927" mi="7" ci="0" mb="2" cb="0"/><line nr="7929" mi="5" ci="0" mb="2" cb="0"/><line nr="7930" mi="2" ci="0" mb="0" cb="0"/><line nr="7934" mi="0" ci="5" mb="1" cb="1"/><line nr="7935" mi="2" ci="0" mb="0" cb="0"/><line nr="7939" mi="0" ci="6" mb="0" cb="2"/><line nr="7942" mi="0" ci="3" mb="0" cb="0"/><line nr="7943" mi="0" ci="7" mb="0" cb="2"/><line nr="7945" mi="2" ci="4" mb="1" cb="1"/><line nr="7946" mi="0" ci="2" mb="0" cb="0"/><line nr="7950" mi="0" ci="6" mb="0" cb="2"/><line nr="7951" mi="0" ci="5" mb="1" cb="1"/><line nr="7952" mi="2" ci="0" mb="0" cb="0"/><line nr="7956" mi="0" ci="6" mb="0" cb="2"/><line nr="7957" mi="2" ci="3" mb="1" cb="1"/><line nr="7960" mi="0" ci="3" mb="0" cb="0"/><line nr="7961" mi="0" ci="7" mb="1" cb="1"/><line nr="7963" mi="0" ci="2" mb="0" cb="0"/><line nr="7967" mi="0" ci="6" mb="0" cb="2"/><line nr="7968" mi="2" ci="4" mb="1" cb="1"/><line nr="7969" mi="2" ci="3" mb="1" cb="1"/><line nr="7970" mi="2" ci="4" mb="1" cb="1"/><line nr="7971" mi="2" ci="3" mb="1" cb="1"/><line nr="7972" mi="0" ci="2" mb="0" cb="0"/><line nr="7977" mi="0" ci="3" mb="0" cb="0"/><line nr="7978" mi="0" ci="4" mb="1" cb="1"/><line nr="7979" mi="0" ci="3" mb="0" cb="0"/><line nr="7980" mi="0" ci="5" mb="1" cb="1"/><line nr="7982" mi="2" ci="0" mb="0" cb="0"/><line nr="7988" mi="0" ci="3" mb="0" cb="0"/><line nr="7989" mi="0" ci="7" mb="1" cb="1"/><line nr="7991" mi="0" ci="5" mb="1" cb="1"/><line nr="7992" mi="5" ci="0" mb="2" cb="0"/><line nr="7993" mi="6" ci="0" mb="2" cb="0"/><line nr="7994" mi="5" ci="0" mb="2" cb="0"/><line nr="7995" mi="2" ci="0" mb="0" cb="0"/><line nr="7999" mi="0" ci="5" mb="1" cb="1"/><line nr="8000" mi="2" ci="0" mb="0" cb="0"/><line nr="8005" mi="0" ci="3" mb="0" cb="0"/><line nr="8006" mi="0" ci="4" mb="1" cb="1"/><line nr="8007" mi="0" ci="3" mb="0" cb="0"/><line nr="8008" mi="0" ci="6" mb="1" cb="1"/><line nr="8010" mi="2" ci="0" mb="0" cb="0"/><line nr="8016" mi="0" ci="3" mb="0" cb="0"/><line nr="8017" mi="0" ci="7" mb="1" cb="1"/><line nr="8019" mi="2" ci="4" mb="1" cb="1"/><line nr="8020" mi="0" ci="3" mb="0" cb="0"/><line nr="8021" mi="0" ci="6" mb="0" cb="2"/><line nr="8022" mi="0" ci="2" mb="0" cb="0"/><line nr="8027" mi="0" ci="3" mb="0" cb="0"/><line nr="8028" mi="0" ci="6" mb="1" cb="1"/><line nr="8029" mi="0" ci="6" mb="0" cb="2"/><line nr="8030" mi="0" ci="2" mb="0" cb="0"/><line nr="8034" mi="5" ci="0" mb="2" cb="0"/><line nr="8037" mi="3" ci="0" mb="0" cb="0"/><line nr="8038" mi="7" ci="0" mb="2" cb="0"/><line nr="8040" mi="2" ci="0" mb="0" cb="0"/><line nr="8044" mi="0" ci="6" mb="0" cb="2"/><line nr="8045" mi="2" ci="3" mb="1" cb="1"/><line nr="8048" mi="0" ci="3" mb="0" cb="0"/><line nr="8049" mi="0" ci="7" mb="0" cb="2"/><line nr="8051" mi="2" ci="4" mb="1" cb="1"/><line nr="8052" mi="0" ci="2" mb="0" cb="0"/><line nr="8056" mi="0" ci="6" mb="0" cb="2"/><line nr="8057" mi="0" ci="2" mb="0" cb="0"/><line nr="8061" mi="5" ci="0" mb="2" cb="0"/><line nr="8062" mi="2" ci="0" mb="0" cb="0"/><line nr="8066" mi="6" ci="0" mb="2" cb="0"/><line nr="8068" mi="3" ci="0" mb="0" cb="0"/><line nr="8069" mi="6" ci="0" mb="2" cb="0"/><line nr="8070" mi="3" ci="0" mb="0" cb="0"/><line nr="8071" mi="6" ci="0" mb="2" cb="0"/><line nr="8072" mi="2" ci="0" mb="0" cb="0"/><line nr="8076" mi="6" ci="0" mb="2" cb="0"/><line nr="8079" mi="3" ci="0" mb="0" cb="0"/><line nr="8080" mi="7" ci="0" mb="2" cb="0"/><line nr="8082" mi="2" ci="0" mb="0" cb="0"/><line nr="8086" mi="5" ci="0" mb="2" cb="0"/><line nr="8087" mi="2" ci="0" mb="0" cb="0"/><line nr="8091" mi="0" ci="6" mb="1" cb="1"/><line nr="8092" mi="5" ci="0" mb="2" cb="0"/><line nr="8094" mi="3" ci="0" mb="0" cb="0"/><line nr="8095" mi="6" ci="0" mb="2" cb="0"/><line nr="8096" mi="6" ci="0" mb="2" cb="0"/><line nr="8097" mi="2" ci="0" mb="0" cb="0"/><line nr="8103" mi="3" ci="0" mb="0" cb="0"/><line nr="8104" mi="7" ci="0" mb="2" cb="0"/><line nr="8106" mi="5" ci="0" mb="2" cb="0"/><line nr="8108" mi="3" ci="0" mb="0" cb="0"/><line nr="8109" mi="7" ci="0" mb="2" cb="0"/><line nr="8111" mi="2" ci="0" mb="0" cb="0"/><line nr="8115" mi="0" ci="5" mb="1" cb="1"/><line nr="8116" mi="2" ci="0" mb="0" cb="0"/><line nr="8120" mi="0" ci="6" mb="1" cb="1"/><line nr="8122" mi="3" ci="0" mb="0" cb="0"/><line nr="8123" mi="6" ci="0" mb="2" cb="0"/><line nr="8124" mi="3" ci="0" mb="0" cb="0"/><line nr="8125" mi="7" ci="0" mb="2" cb="0"/><line nr="8126" mi="3" ci="0" mb="0" cb="0"/><line nr="8127" mi="6" ci="0" mb="2" cb="0"/><line nr="8128" mi="6" ci="0" mb="2" cb="0"/><line nr="8129" mi="2" ci="0" mb="0" cb="0"/><line nr="8133" mi="2" ci="3" mb="1" cb="1"/><line nr="8134" mi="0" ci="2" mb="0" cb="0"/><line nr="8138" mi="0" ci="5" mb="0" cb="2"/><line nr="8139" mi="0" ci="2" mb="0" cb="0"/><line nr="8143" mi="0" ci="6" mb="0" cb="2"/><line nr="8145" mi="0" ci="3" mb="0" cb="0"/><line nr="8146" mi="0" ci="6" mb="1" cb="1"/><line nr="8147" mi="2" ci="3" mb="1" cb="1"/><line nr="8149" mi="0" ci="3" mb="0" cb="0"/><line nr="8150" mi="0" ci="7" mb="0" cb="2"/><line nr="8152" mi="0" ci="3" mb="0" cb="0"/><line nr="8153" mi="3" ci="3" mb="1" cb="1"/><line nr="8154" mi="0" ci="2" mb="0" cb="0"/><line nr="8158" mi="0" ci="5" mb="1" cb="1"/><line nr="8159" mi="2" ci="0" mb="0" cb="0"/><line nr="8163" mi="5" ci="0" mb="2" cb="0"/><line nr="8164" mi="2" ci="0" mb="0" cb="0"/><line nr="8168" mi="0" ci="6" mb="1" cb="1"/><line nr="8169" mi="6" ci="0" mb="2" cb="0"/><line nr="8170" mi="5" ci="0" mb="2" cb="0"/><line nr="8171" mi="6" ci="0" mb="2" cb="0"/><line nr="8172" mi="5" ci="0" mb="2" cb="0"/><line nr="8173" mi="2" ci="0" mb="0" cb="0"/><line nr="8177" mi="2" ci="3" mb="1" cb="1"/><line nr="8178" mi="0" ci="2" mb="0" cb="0"/><line nr="8182" mi="0" ci="6" mb="0" cb="2"/><line nr="8183" mi="0" ci="6" mb="0" cb="2"/><line nr="8185" mi="0" ci="3" mb="0" cb="0"/><line nr="8186" mi="0" ci="6" mb="1" cb="1"/><line nr="8187" mi="0" ci="5" mb="1" cb="1"/><line nr="8188" mi="2" ci="0" mb="0" cb="0"/><line nr="8192" mi="5" ci="0" mb="2" cb="0"/><line nr="8193" mi="2" ci="0" mb="0" cb="0"/><line nr="8197" mi="6" ci="0" mb="2" cb="0"/><line nr="8198" mi="2" ci="0" mb="0" cb="0"/><line nr="8202" mi="0" ci="6" mb="1" cb="1"/><line nr="8203" mi="5" ci="0" mb="2" cb="0"/><line nr="8204" mi="6" ci="0" mb="2" cb="0"/><line nr="8205" mi="2" ci="0" mb="0" cb="0"/><line nr="8209" mi="5" ci="0" mb="2" cb="0"/><line nr="8210" mi="2" ci="0" mb="0" cb="0"/><line nr="8214" mi="6" ci="0" mb="2" cb="0"/><line nr="8217" mi="3" ci="0" mb="0" cb="0"/><line nr="8218" mi="7" ci="0" mb="2" cb="0"/><line nr="8220" mi="5" ci="0" mb="2" cb="0"/><line nr="8221" mi="2" ci="0" mb="0" cb="0"/><line nr="8225" mi="5" ci="0" mb="2" cb="0"/><line nr="8226" mi="2" ci="0" mb="0" cb="0"/><line nr="8230" mi="6" ci="0" mb="2" cb="0"/><line nr="8231" mi="5" ci="0" mb="2" cb="0"/><line nr="8232" mi="2" ci="0" mb="0" cb="0"/><line nr="8236" mi="0" ci="6" mb="0" cb="2"/><line nr="8238" mi="0" ci="3" mb="0" cb="0"/><line nr="8239" mi="3" ci="3" mb="1" cb="1"/><line nr="8240" mi="2" ci="4" mb="1" cb="1"/><line nr="8241" mi="0" ci="2" mb="0" cb="0"/><line nr="8245" mi="0" ci="6" mb="1" cb="1"/><line nr="8248" mi="3" ci="0" mb="0" cb="0"/><line nr="8249" mi="7" ci="0" mb="2" cb="0"/><line nr="8251" mi="5" ci="0" mb="2" cb="0"/><line nr="8253" mi="3" ci="0" mb="0" cb="0"/><line nr="8254" mi="7" ci="0" mb="2" cb="0"/><line nr="8256" mi="2" ci="0" mb="0" cb="0"/><line nr="8260" mi="6" ci="0" mb="2" cb="0"/><line nr="8261" mi="2" ci="0" mb="0" cb="0"/><line nr="8265" mi="6" ci="0" mb="2" cb="0"/><line nr="8268" mi="3" ci="0" mb="0" cb="0"/><line nr="8269" mi="7" ci="0" mb="2" cb="0"/><line nr="8271" mi="5" ci="0" mb="2" cb="0"/><line nr="8272" mi="2" ci="0" mb="0" cb="0"/><line nr="8276" mi="0" ci="6" mb="1" cb="1"/><line nr="8278" mi="3" ci="0" mb="0" cb="0"/><line nr="8279" mi="6" ci="0" mb="2" cb="0"/><line nr="8280" mi="6" ci="0" mb="2" cb="0"/><line nr="8281" mi="2" ci="0" mb="0" cb="0"/><line nr="8285" mi="0" ci="6" mb="1" cb="1"/><line nr="8288" mi="3" ci="0" mb="0" cb="0"/><line nr="8289" mi="7" ci="0" mb="2" cb="0"/><line nr="8291" mi="5" ci="0" mb="2" cb="0"/><line nr="8293" mi="3" ci="0" mb="0" cb="0"/><line nr="8294" mi="7" ci="0" mb="2" cb="0"/><line nr="8296" mi="2" ci="0" mb="0" cb="0"/><line nr="8300" mi="0" ci="6" mb="1" cb="1"/><line nr="8302" mi="3" ci="0" mb="0" cb="0"/><line nr="8303" mi="6" ci="0" mb="2" cb="0"/><line nr="8304" mi="6" ci="0" mb="2" cb="0"/><line nr="8305" mi="2" ci="0" mb="0" cb="0"/><line nr="8309" mi="0" ci="5" mb="1" cb="1"/><line nr="8310" mi="2" ci="0" mb="0" cb="0"/><line nr="8314" mi="0" ci="5" mb="1" cb="1"/><line nr="8315" mi="2" ci="0" mb="0" cb="0"/><line nr="8319" mi="0" ci="5" mb="1" cb="1"/><line nr="8320" mi="2" ci="0" mb="0" cb="0"/><line nr="8324" mi="5" ci="0" mb="2" cb="0"/><line nr="8325" mi="2" ci="0" mb="0" cb="0"/><line nr="8330" mi="0" ci="3" mb="0" cb="0"/><line nr="8331" mi="0" ci="3" mb="0" cb="2"/><line nr="8332" mi="0" ci="3" mb="0" cb="0"/><line nr="8333" mi="0" ci="5" mb="0" cb="2"/><line nr="8335" mi="2" ci="4" mb="1" cb="1"/><line nr="8336" mi="0" ci="3" mb="0" cb="0"/><line nr="8337" mi="0" ci="6" mb="1" cb="1"/><line nr="8338" mi="0" ci="3" mb="0" cb="0"/><line nr="8339" mi="0" ci="6" mb="1" cb="1"/><line nr="8340" mi="0" ci="3" mb="0" cb="0"/><line nr="8341" mi="0" ci="6" mb="1" cb="1"/><line nr="8342" mi="5" ci="0" mb="2" cb="0"/><line nr="8343" mi="2" ci="0" mb="0" cb="0"/><line nr="8347" mi="0" ci="5" mb="0" cb="2"/><line nr="8348" mi="0" ci="2" mb="0" cb="0"/><line nr="8352" mi="5" ci="0" mb="2" cb="0"/><line nr="8355" mi="3" ci="0" mb="0" cb="0"/><line nr="8356" mi="7" ci="0" mb="2" cb="0"/><line nr="8358" mi="2" ci="0" mb="0" cb="0"/><line nr="8362" mi="0" ci="6" mb="1" cb="1"/><line nr="8363" mi="5" ci="0" mb="2" cb="0"/><line nr="8364" mi="2" ci="0" mb="0" cb="0"/><line nr="8368" mi="5" ci="0" mb="2" cb="0"/><line nr="8369" mi="2" ci="0" mb="0" cb="0"/><line nr="8373" mi="5" ci="0" mb="2" cb="0"/><line nr="8374" mi="2" ci="0" mb="0" cb="0"/><line nr="8379" mi="3" ci="0" mb="0" cb="0"/><line nr="8380" mi="3" ci="0" mb="2" cb="0"/><line nr="8381" mi="3" ci="0" mb="0" cb="0"/><line nr="8382" mi="5" ci="0" mb="2" cb="0"/><line nr="8384" mi="2" ci="0" mb="0" cb="0"/><line nr="8388" mi="0" ci="5" mb="0" cb="2"/><line nr="8389" mi="0" ci="6" mb="0" cb="2"/><line nr="8390" mi="0" ci="2" mb="0" cb="0"/><line nr="8394" mi="5" ci="0" mb="2" cb="0"/><line nr="8395" mi="2" ci="0" mb="0" cb="0"/><line nr="8399" mi="5" ci="0" mb="2" cb="0"/><line nr="8400" mi="2" ci="0" mb="0" cb="0"/><line nr="8404" mi="5" ci="0" mb="2" cb="0"/><line nr="8405" mi="2" ci="0" mb="0" cb="0"/><line nr="8410" mi="3" ci="0" mb="0" cb="0"/><line nr="8411" mi="6" ci="0" mb="2" cb="0"/><line nr="8412" mi="6" ci="0" mb="2" cb="0"/><line nr="8413" mi="3" ci="0" mb="0" cb="0"/><line nr="8414" mi="6" ci="0" mb="2" cb="0"/><line nr="8415" mi="6" ci="0" mb="2" cb="0"/><line nr="8416" mi="3" ci="0" mb="0" cb="0"/><line nr="8417" mi="6" ci="0" mb="2" cb="0"/><line nr="8418" mi="2" ci="0" mb="0" cb="0"/><line nr="8422" mi="5" ci="0" mb="2" cb="0"/><line nr="8423" mi="6" ci="0" mb="2" cb="0"/><line nr="8424" mi="5" ci="0" mb="2" cb="0"/><line nr="8425" mi="2" ci="0" mb="0" cb="0"/><line nr="8429" mi="0" ci="6" mb="1" cb="1"/><line nr="8430" mi="6" ci="0" mb="2" cb="0"/><line nr="8432" mi="3" ci="0" mb="0" cb="0"/><line nr="8433" mi="3" ci="0" mb="2" cb="0"/><line nr="8434" mi="3" ci="0" mb="0" cb="0"/><line nr="8435" mi="5" ci="0" mb="2" cb="0"/><line nr="8437" mi="6" ci="0" mb="2" cb="0"/><line nr="8438" mi="5" ci="0" mb="2" cb="0"/><line nr="8439" mi="2" ci="0" mb="0" cb="0"/><line nr="8443" mi="0" ci="5" mb="0" cb="2"/><line nr="8444" mi="0" ci="2" mb="0" cb="0"/><line nr="8448" mi="0" ci="6" mb="1" cb="1"/><line nr="8449" mi="5" ci="0" mb="2" cb="0"/><line nr="8450" mi="6" ci="0" mb="2" cb="0"/><line nr="8451" mi="6" ci="0" mb="2" cb="0"/><line nr="8452" mi="5" ci="0" mb="2" cb="0"/><line nr="8453" mi="6" ci="0" mb="2" cb="0"/><line nr="8454" mi="6" ci="0" mb="2" cb="0"/><line nr="8455" mi="2" ci="0" mb="0" cb="0"/><line nr="8459" mi="0" ci="6" mb="0" cb="2"/><line nr="8460" mi="0" ci="2" mb="0" cb="0"/><line nr="8464" mi="0" ci="6" mb="0" cb="2"/><line nr="8465" mi="0" ci="2" mb="0" cb="0"/><line nr="8469" mi="0" ci="6" mb="0" cb="2"/><line nr="8470" mi="0" ci="2" mb="0" cb="0"/><line nr="8474" mi="0" ci="6" mb="0" cb="2"/><line nr="8475" mi="0" ci="2" mb="0" cb="0"/><line nr="8479" mi="0" ci="6" mb="0" cb="2"/><line nr="8480" mi="0" ci="2" mb="0" cb="0"/><line nr="8484" mi="0" ci="6" mb="0" cb="2"/><line nr="8485" mi="0" ci="2" mb="0" cb="0"/><line nr="8489" mi="0" ci="6" mb="1" cb="1"/><line nr="8490" mi="6" ci="0" mb="2" cb="0"/><line nr="8491" mi="5" ci="0" mb="2" cb="0"/><line nr="8492" mi="6" ci="0" mb="2" cb="0"/><line nr="8493" mi="5" ci="0" mb="2" cb="0"/><line nr="8494" mi="2" ci="0" mb="0" cb="0"/><line nr="8498" mi="0" ci="6" mb="0" cb="2"/><line nr="8499" mi="0" ci="2" mb="0" cb="0"/><line nr="8503" mi="0" ci="6" mb="0" cb="2"/><line nr="8504" mi="0" ci="2" mb="0" cb="0"/><line nr="8508" mi="0" ci="6" mb="0" cb="2"/><line nr="8509" mi="0" ci="2" mb="0" cb="0"/><line nr="8513" mi="0" ci="6" mb="0" cb="2"/><line nr="8514" mi="0" ci="2" mb="0" cb="0"/><line nr="8518" mi="0" ci="5" mb="1" cb="1"/><line nr="8519" mi="2" ci="0" mb="0" cb="0"/><line nr="8523" mi="0" ci="6" mb="0" cb="2"/><line nr="8524" mi="0" ci="2" mb="0" cb="0"/><line nr="8528" mi="0" ci="6" mb="0" cb="2"/><line nr="8529" mi="0" ci="2" mb="0" cb="0"/><line nr="8533" mi="0" ci="6" mb="0" cb="2"/><line nr="8534" mi="2" ci="4" mb="1" cb="1"/><line nr="8535" mi="2" ci="3" mb="1" cb="1"/><line nr="8536" mi="2" ci="4" mb="1" cb="1"/><line nr="8537" mi="2" ci="3" mb="1" cb="1"/><line nr="8539" mi="0" ci="3" mb="0" cb="0"/><line nr="8540" mi="0" ci="6" mb="1" cb="1"/><line nr="8541" mi="0" ci="2" mb="0" cb="0"/><line nr="8545" mi="0" ci="5" mb="1" cb="1"/><line nr="8546" mi="2" ci="0" mb="0" cb="0"/><line nr="8551" mi="0" ci="3" mb="0" cb="0"/><line nr="8552" mi="0" ci="3" mb="0" cb="2"/><line nr="8553" mi="0" ci="3" mb="0" cb="0"/><line nr="8554" mi="0" ci="3" mb="0" cb="2"/><line nr="8555" mi="0" ci="3" mb="0" cb="0"/><line nr="8556" mi="0" ci="3" mb="0" cb="2"/><line nr="8557" mi="0" ci="3" mb="0" cb="0"/><line nr="8558" mi="0" ci="3" mb="0" cb="2"/><line nr="8559" mi="0" ci="3" mb="0" cb="0"/><line nr="8560" mi="0" ci="3" mb="0" cb="2"/><line nr="8561" mi="0" ci="3" mb="0" cb="0"/><line nr="8562" mi="0" ci="3" mb="0" cb="2"/><line nr="8563" mi="0" ci="3" mb="0" cb="0"/><line nr="8564" mi="0" ci="3" mb="0" cb="2"/><line nr="8565" mi="0" ci="3" mb="0" cb="0"/><line nr="8566" mi="0" ci="3" mb="0" cb="2"/><line nr="8567" mi="0" ci="3" mb="0" cb="0"/><line nr="8568" mi="0" ci="3" mb="0" cb="2"/><line nr="8569" mi="0" ci="3" mb="0" cb="0"/><line nr="8570" mi="0" ci="3" mb="0" cb="2"/><line nr="8571" mi="0" ci="3" mb="0" cb="0"/><line nr="8572" mi="0" ci="3" mb="0" cb="2"/><line nr="8573" mi="0" ci="3" mb="0" cb="0"/><line nr="8574" mi="0" ci="3" mb="0" cb="2"/><line nr="8575" mi="0" ci="3" mb="0" cb="0"/><line nr="8576" mi="0" ci="5" mb="0" cb="2"/><line nr="8589" mi="0" ci="2" mb="0" cb="0"/><line nr="8595" mi="0" ci="3" mb="0" cb="0"/><line nr="8596" mi="0" ci="7" mb="0" cb="2"/><line nr="8598" mi="0" ci="2" mb="0" cb="0"/><line nr="8602" mi="0" ci="5" mb="0" cb="2"/><line nr="8603" mi="0" ci="2" mb="0" cb="0"/><line nr="8607" mi="6" ci="0" mb="2" cb="0"/><line nr="8608" mi="6" ci="0" mb="2" cb="0"/><line nr="8609" mi="2" ci="0" mb="0" cb="0"/><line nr="8613" mi="6" ci="0" mb="2" cb="0"/><line nr="8614" mi="5" ci="0" mb="2" cb="0"/><line nr="8615" mi="6" ci="0" mb="2" cb="0"/><line nr="8616" mi="2" ci="0" mb="0" cb="0"/><line nr="8621" mi="3" ci="0" mb="0" cb="0"/><line nr="8622" mi="3" ci="0" mb="2" cb="0"/><line nr="8623" mi="3" ci="0" mb="0" cb="0"/><line nr="8624" mi="5" ci="0" mb="2" cb="0"/><line nr="8626" mi="2" ci="0" mb="0" cb="0"/><line nr="8630" mi="5" ci="0" mb="2" cb="0"/><line nr="8633" mi="3" ci="0" mb="0" cb="0"/><line nr="8634" mi="7" ci="0" mb="2" cb="0"/><line nr="8636" mi="2" ci="0" mb="0" cb="0"/><line nr="8640" mi="2" ci="3" mb="1" cb="1"/><line nr="8641" mi="0" ci="5" mb="0" cb="2"/><line nr="8642" mi="0" ci="2" mb="0" cb="0"/><line nr="8646" mi="0" ci="6" mb="1" cb="1"/><line nr="8647" mi="6" ci="0" mb="2" cb="0"/><line nr="8648" mi="5" ci="0" mb="2" cb="0"/><line nr="8649" mi="6" ci="0" mb="2" cb="0"/><line nr="8650" mi="6" ci="0" mb="2" cb="0"/><line nr="8653" mi="3" ci="0" mb="0" cb="0"/><line nr="8654" mi="7" ci="0" mb="2" cb="0"/><line nr="8656" mi="6" ci="0" mb="2" cb="0"/><line nr="8657" mi="2" ci="0" mb="0" cb="0"/><line nr="8661" mi="0" ci="5" mb="0" cb="2"/><line nr="8662" mi="0" ci="2" mb="0" cb="0"/><line nr="8668" mi="0" ci="3" mb="0" cb="0"/><line nr="8669" mi="0" ci="7" mb="0" cb="2"/><line nr="8671" mi="0" ci="6" mb="0" cb="2"/><line nr="8672" mi="0" ci="2" mb="0" cb="0"/><line nr="8677" mi="0" ci="3" mb="0" cb="0"/><line nr="8678" mi="0" ci="4" mb="0" cb="2"/><line nr="8679" mi="0" ci="3" mb="0" cb="0"/><line nr="8680" mi="0" ci="6" mb="0" cb="2"/><line nr="8682" mi="0" ci="2" mb="0" cb="0"/><line nr="8686" mi="0" ci="5" mb="0" cb="2"/><line nr="8687" mi="0" ci="2" mb="0" cb="0"/><line nr="8691" mi="0" ci="5" mb="0" cb="2"/><line nr="8692" mi="0" ci="5" mb="0" cb="2"/><line nr="8693" mi="2" ci="3" mb="1" cb="1"/><line nr="8694" mi="0" ci="2" mb="0" cb="0"/><line nr="8698" mi="0" ci="5" mb="1" cb="1"/><line nr="8699" mi="2" ci="0" mb="0" cb="0"/><line nr="8703" mi="0" ci="5" mb="1" cb="1"/><line nr="8704" mi="2" ci="0" mb="0" cb="0"/><line nr="8709" mi="0" ci="3" mb="0" cb="0"/><line nr="8710" mi="0" ci="3" mb="1" cb="1"/><line nr="8711" mi="0" ci="3" mb="0" cb="0"/><line nr="8712" mi="0" ci="3" mb="1" cb="1"/><line nr="8713" mi="0" ci="3" mb="0" cb="0"/><line nr="8714" mi="0" ci="3" mb="0" cb="2"/><line nr="8715" mi="0" ci="3" mb="0" cb="0"/><line nr="8716" mi="0" ci="5" mb="0" cb="2"/><line nr="8720" mi="0" ci="2" mb="0" cb="0"/><line nr="8724" mi="0" ci="6" mb="1" cb="1"/><line nr="8725" mi="2" ci="0" mb="0" cb="0"/><line nr="8729" mi="0" ci="5" mb="0" cb="2"/><line nr="8730" mi="0" ci="2" mb="0" cb="0"/><line nr="8736" mi="0" ci="3" mb="0" cb="0"/><line nr="8737" mi="0" ci="7" mb="0" cb="2"/><line nr="8739" mi="0" ci="3" mb="0" cb="0"/><line nr="8740" mi="0" ci="6" mb="0" cb="2"/><line nr="8741" mi="2" ci="4" mb="1" cb="1"/><line nr="8742" mi="0" ci="2" mb="0" cb="0"/><line nr="8746" mi="0" ci="5" mb="0" cb="2"/><line nr="8747" mi="0" ci="2" mb="0" cb="0"/><line nr="8751" mi="0" ci="6" mb="1" cb="1"/><line nr="8752" mi="5" ci="0" mb="2" cb="0"/><line nr="8753" mi="2" ci="0" mb="0" cb="0"/><line nr="8757" mi="0" ci="6" mb="0" cb="2"/><line nr="8758" mi="0" ci="2" mb="0" cb="0"/><line nr="8763" mi="0" ci="3" mb="0" cb="0"/><line nr="8764" mi="0" ci="3" mb="0" cb="2"/><line nr="8765" mi="0" ci="3" mb="0" cb="0"/><line nr="8766" mi="0" ci="5" mb="0" cb="2"/><line nr="8768" mi="0" ci="2" mb="0" cb="0"/><line nr="8774" mi="0" ci="3" mb="0" cb="0"/><line nr="8775" mi="0" ci="7" mb="0" cb="2"/><line nr="8777" mi="0" ci="5" mb="0" cb="2"/><line nr="8778" mi="0" ci="5" mb="0" cb="2"/><line nr="8780" mi="0" ci="3" mb="0" cb="0"/><line nr="8781" mi="0" ci="7" mb="1" cb="1"/><line nr="8783" mi="0" ci="2" mb="0" cb="0"/><line nr="8788" mi="0" ci="3" mb="0" cb="0"/><line nr="8789" mi="0" ci="4" mb="0" cb="2"/><line nr="8790" mi="0" ci="3" mb="0" cb="0"/><line nr="8791" mi="0" ci="5" mb="0" cb="2"/><line nr="8793" mi="0" ci="2" mb="0" cb="0"/><line nr="8799" mi="0" ci="3" mb="0" cb="0"/><line nr="8800" mi="0" ci="7" mb="1" cb="1"/><line nr="8802" mi="0" ci="5" mb="1" cb="1"/><line nr="8803" mi="2" ci="0" mb="0" cb="0"/><line nr="8809" mi="0" ci="3" mb="0" cb="0"/><line nr="8810" mi="0" ci="7" mb="0" cb="2"/><line nr="8812" mi="0" ci="5" mb="0" cb="2"/><line nr="8813" mi="0" ci="6" mb="0" cb="2"/><line nr="8814" mi="0" ci="2" mb="0" cb="0"/><line nr="8818" mi="0" ci="5" mb="0" cb="2"/><line nr="8819" mi="0" ci="2" mb="0" cb="0"/><line nr="8823" mi="0" ci="5" mb="0" cb="2"/><line nr="8824" mi="2" ci="4" mb="1" cb="1"/><line nr="8825" mi="0" ci="2" mb="0" cb="0"/><line nr="8830" mi="0" ci="3" mb="0" cb="0"/><line nr="8831" mi="0" ci="3" mb="0" cb="0"/><line nr="8832" mi="0" ci="4" mb="0" cb="0"/><line nr="8833" mi="0" ci="3" mb="0" cb="0"/><line nr="8834" mi="3" ci="3" mb="3" cb="1"/><line nr="8835" mi="0" ci="3" mb="0" cb="0"/><line nr="8836" mi="0" ci="3" mb="0" cb="2"/><line nr="8837" mi="0" ci="3" mb="0" cb="0"/><line nr="8838" mi="0" ci="3" mb="0" cb="2"/><line nr="8839" mi="0" ci="3" mb="0" cb="0"/><line nr="8840" mi="0" ci="5" mb="1" cb="1"/><line nr="8844" mi="0" ci="2" mb="0" cb="0"/><line nr="8848" mi="0" ci="5" mb="0" cb="2"/><line nr="8849" mi="0" ci="2" mb="0" cb="0"/><line nr="8853" mi="5" ci="0" mb="2" cb="0"/><line nr="8854" mi="2" ci="0" mb="0" cb="0"/><line nr="8858" mi="0" ci="6" mb="0" cb="2"/><line nr="8861" mi="0" ci="3" mb="0" cb="0"/><line nr="8862" mi="0" ci="7" mb="0" cb="2"/><line nr="8864" mi="2" ci="4" mb="1" cb="1"/><line nr="8865" mi="0" ci="2" mb="0" cb="0"/><line nr="8869" mi="0" ci="6" mb="1" cb="1"/><line nr="8870" mi="6" ci="0" mb="2" cb="0"/><line nr="8871" mi="2" ci="0" mb="0" cb="0"/><line nr="8875" mi="0" ci="6" mb="0" cb="2"/><line nr="8876" mi="0" ci="6" mb="1" cb="1"/><line nr="8877" mi="5" ci="0" mb="2" cb="0"/><line nr="8878" mi="2" ci="0" mb="0" cb="0"/><line nr="8882" mi="0" ci="5" mb="0" cb="2"/><line nr="8883" mi="0" ci="2" mb="0" cb="0"/><line nr="8887" mi="0" ci="5" mb="1" cb="1"/><line nr="8888" mi="2" ci="0" mb="0" cb="0"/><line nr="8892" mi="2" ci="3" mb="1" cb="1"/><line nr="8893" mi="0" ci="2" mb="0" cb="0"/><line nr="8897" mi="0" ci="5" mb="1" cb="1"/><line nr="8898" mi="2" ci="0" mb="0" cb="0"/><line nr="8902" mi="0" ci="5" mb="0" cb="2"/><line nr="8903" mi="0" ci="2" mb="0" cb="0"/><line nr="8907" mi="0" ci="5" mb="1" cb="1"/><line nr="8908" mi="2" ci="0" mb="0" cb="0"/><line nr="8912" mi="0" ci="5" mb="1" cb="1"/><line nr="8913" mi="2" ci="0" mb="0" cb="0"/><line nr="8917" mi="0" ci="5" mb="1" cb="1"/><line nr="8918" mi="2" ci="0" mb="0" cb="0"/><line nr="8922" mi="0" ci="5" mb="1" cb="1"/><line nr="8923" mi="2" ci="0" mb="0" cb="0"/><line nr="8927" mi="0" ci="5" mb="1" cb="1"/><line nr="8928" mi="2" ci="0" mb="0" cb="0"/><line nr="8932" mi="0" ci="5" mb="0" cb="2"/><line nr="8933" mi="0" ci="2" mb="0" cb="0"/><line nr="8937" mi="0" ci="5" mb="1" cb="1"/><line nr="8938" mi="2" ci="0" mb="0" cb="0"/><line nr="8942" mi="0" ci="5" mb="0" cb="2"/><line nr="8943" mi="2" ci="4" mb="1" cb="1"/><line nr="8944" mi="0" ci="2" mb="0" cb="0"/><line nr="8948" mi="0" ci="5" mb="1" cb="1"/><line nr="8949" mi="2" ci="0" mb="0" cb="0"/><line nr="8953" mi="0" ci="5" mb="0" cb="2"/><line nr="8954" mi="0" ci="2" mb="0" cb="0"/><line nr="8958" mi="0" ci="5" mb="1" cb="1"/><line nr="8959" mi="2" ci="0" mb="0" cb="0"/><line nr="8964" mi="0" ci="3" mb="0" cb="0"/><line nr="8965" mi="0" ci="3" mb="0" cb="0"/><line nr="8966" mi="0" ci="4" mb="0" cb="0"/><line nr="8967" mi="0" ci="3" mb="0" cb="0"/><line nr="8968" mi="3" ci="3" mb="3" cb="1"/><line nr="8969" mi="0" ci="3" mb="0" cb="0"/><line nr="8970" mi="0" ci="3" mb="1" cb="1"/><line nr="8971" mi="0" ci="3" mb="0" cb="0"/><line nr="8972" mi="0" ci="3" mb="0" cb="2"/><line nr="8973" mi="0" ci="3" mb="0" cb="0"/><line nr="8974" mi="0" ci="3" mb="1" cb="1"/><line nr="8975" mi="0" ci="3" mb="0" cb="0"/><line nr="8976" mi="0" ci="3" mb="0" cb="2"/><line nr="8977" mi="0" ci="3" mb="0" cb="0"/><line nr="8978" mi="0" ci="3" mb="1" cb="1"/><line nr="8979" mi="0" ci="3" mb="0" cb="0"/><line nr="8980" mi="0" ci="3" mb="0" cb="2"/><line nr="8981" mi="0" ci="3" mb="0" cb="0"/><line nr="8982" mi="0" ci="3" mb="1" cb="1"/><line nr="8983" mi="0" ci="3" mb="0" cb="0"/><line nr="8984" mi="0" ci="3" mb="1" cb="1"/><line nr="8985" mi="0" ci="3" mb="0" cb="0"/><line nr="8986" mi="0" ci="3" mb="1" cb="1"/><line nr="8987" mi="0" ci="3" mb="0" cb="0"/><line nr="8988" mi="0" ci="3" mb="1" cb="1"/><line nr="8989" mi="0" ci="3" mb="0" cb="0"/><line nr="8990" mi="0" ci="3" mb="1" cb="1"/><line nr="8991" mi="0" ci="3" mb="0" cb="0"/><line nr="8992" mi="0" ci="3" mb="0" cb="2"/><line nr="8993" mi="0" ci="3" mb="0" cb="0"/><line nr="8994" mi="0" ci="3" mb="1" cb="1"/><line nr="8995" mi="0" ci="3" mb="0" cb="0"/><line nr="8996" mi="0" ci="3" mb="1" cb="1"/><line nr="8997" mi="0" ci="3" mb="0" cb="0"/><line nr="8998" mi="0" ci="5" mb="0" cb="2"/><line nr="9014" mi="0" ci="2" mb="0" cb="0"/><line nr="9018" mi="5" ci="0" mb="2" cb="0"/><line nr="9019" mi="2" ci="0" mb="0" cb="0"/><line nr="9023" mi="0" ci="5" mb="0" cb="2"/><line nr="9024" mi="0" ci="2" mb="0" cb="0"/><line nr="9028" mi="0" ci="5" mb="1" cb="1"/><line nr="9029" mi="2" ci="0" mb="0" cb="0"/><line nr="9033" mi="0" ci="5" mb="0" cb="2"/><line nr="9034" mi="0" ci="2" mb="0" cb="0"/><line nr="9038" mi="0" ci="6" mb="0" cb="2"/><line nr="9039" mi="2" ci="4" mb="1" cb="1"/><line nr="9040" mi="0" ci="2" mb="0" cb="0"/><line nr="9044" mi="0" ci="6" mb="0" cb="2"/><line nr="9045" mi="0" ci="5" mb="0" cb="2"/><line nr="9046" mi="2" ci="4" mb="1" cb="1"/><line nr="9047" mi="0" ci="2" mb="0" cb="0"/><line nr="9052" mi="0" ci="5" mb="0" cb="2"/><line nr="9054" mi="0" ci="3" mb="0" cb="0"/><line nr="9055" mi="0" ci="7" mb="1" cb="1"/><line nr="9057" mi="2" ci="3" mb="1" cb="1"/><line nr="9058" mi="0" ci="2" mb="0" cb="0"/><line nr="9063" mi="0" ci="5" mb="0" cb="2"/><line nr="9065" mi="0" ci="3" mb="0" cb="0"/><line nr="9066" mi="0" ci="7" mb="1" cb="1"/><line nr="9069" mi="0" ci="3" mb="0" cb="0"/><line nr="9070" mi="0" ci="7" mb="1" cb="1"/><line nr="9072" mi="0" ci="2" mb="0" cb="0"/><line nr="9077" mi="0" ci="3" mb="0" cb="0"/><line nr="9078" mi="0" ci="3" mb="0" cb="2"/><line nr="9079" mi="0" ci="3" mb="0" cb="0"/><line nr="9080" mi="0" ci="5" mb="0" cb="2"/><line nr="9082" mi="0" ci="2" mb="0" cb="0"/><line nr="9086" mi="2" ci="3" mb="1" cb="1"/><line nr="9088" mi="0" ci="3" mb="0" cb="0"/><line nr="9089" mi="0" ci="6" mb="0" cb="2"/><line nr="9090" mi="0" ci="2" mb="0" cb="0"/><line nr="9094" mi="0" ci="5" mb="0" cb="2"/><line nr="9095" mi="0" ci="2" mb="0" cb="0"/><line nr="9099" mi="0" ci="6" mb="0" cb="2"/><line nr="9100" mi="2" ci="3" mb="1" cb="1"/><line nr="9101" mi="0" ci="2" mb="0" cb="0"/><line nr="9105" mi="0" ci="5" mb="1" cb="1"/><line nr="9106" mi="2" ci="0" mb="0" cb="0"/><line nr="9110" mi="2" ci="3" mb="1" cb="1"/><line nr="9112" mi="0" ci="3" mb="0" cb="0"/><line nr="9113" mi="0" ci="6" mb="1" cb="1"/><line nr="9114" mi="0" ci="3" mb="0" cb="0"/><line nr="9115" mi="0" ci="3" mb="0" cb="2"/><line nr="9116" mi="0" ci="3" mb="0" cb="0"/><line nr="9117" mi="2" ci="3" mb="1" cb="1"/><line nr="9119" mi="0" ci="2" mb="0" cb="0"/><line nr="9123" mi="2" ci="3" mb="1" cb="1"/><line nr="9124" mi="0" ci="2" mb="0" cb="0"/><line nr="9128" mi="0" ci="5" mb="0" cb="2"/><line nr="9129" mi="2" ci="3" mb="1" cb="1"/><line nr="9130" mi="0" ci="2" mb="0" cb="0"/><line nr="9134" mi="0" ci="6" mb="0" cb="2"/><line nr="9137" mi="0" ci="3" mb="0" cb="0"/><line nr="9138" mi="0" ci="7" mb="1" cb="1"/><line nr="9140" mi="0" ci="3" mb="0" cb="0"/><line nr="9141" mi="0" ci="3" mb="0" cb="2"/><line nr="9142" mi="0" ci="3" mb="0" cb="0"/><line nr="9143" mi="2" ci="3" mb="1" cb="1"/><line nr="9145" mi="0" ci="2" mb="0" cb="0"/><line nr="9149" mi="0" ci="5" mb="0" cb="2"/><line nr="9150" mi="0" ci="2" mb="0" cb="0"/><line nr="9154" mi="0" ci="5" mb="0" cb="2"/><line nr="9157" mi="0" ci="3" mb="0" cb="0"/><line nr="9158" mi="0" ci="7" mb="0" cb="2"/><line nr="9160" mi="0" ci="2" mb="0" cb="0"/><line nr="9164" mi="2" ci="3" mb="1" cb="1"/><line nr="9165" mi="0" ci="2" mb="0" cb="0"/><line nr="9169" mi="0" ci="6" mb="0" cb="2"/><line nr="9170" mi="2" ci="3" mb="1" cb="1"/><line nr="9171" mi="0" ci="2" mb="0" cb="0"/><line nr="9175" mi="0" ci="6" mb="0" cb="2"/><line nr="9177" mi="0" ci="3" mb="0" cb="0"/><line nr="9178" mi="0" ci="6" mb="0" cb="2"/><line nr="9179" mi="2" ci="4" mb="1" cb="1"/><line nr="9180" mi="0" ci="2" mb="0" cb="0"/><line nr="9184" mi="0" ci="5" mb="0" cb="2"/><line nr="9185" mi="0" ci="2" mb="0" cb="0"/><line nr="9189" mi="0" ci="6" mb="0" cb="2"/><line nr="9190" mi="0" ci="2" mb="0" cb="0"/><line nr="9194" mi="2" ci="4" mb="1" cb="1"/><line nr="9195" mi="0" ci="2" mb="0" cb="0"/><line nr="9199" mi="0" ci="6" mb="0" cb="2"/><line nr="9200" mi="0" ci="2" mb="0" cb="0"/><line nr="9205" mi="0" ci="3" mb="0" cb="0"/><line nr="9206" mi="0" ci="3" mb="0" cb="2"/><line nr="9207" mi="0" ci="3" mb="0" cb="0"/><line nr="9208" mi="0" ci="6" mb="0" cb="2"/><line nr="9210" mi="0" ci="2" mb="0" cb="0"/><line nr="9214" mi="0" ci="5" mb="0" cb="2"/><line nr="9215" mi="0" ci="2" mb="0" cb="0"/><line nr="9219" mi="0" ci="6" mb="0" cb="2"/><line nr="9220" mi="2" ci="3" mb="1" cb="1"/><line nr="9221" mi="0" ci="2" mb="0" cb="0"/><line nr="9225" mi="0" ci="5" mb="0" cb="2"/><line nr="9226" mi="0" ci="2" mb="0" cb="0"/><line nr="9230" mi="0" ci="5" mb="0" cb="2"/><line nr="9231" mi="0" ci="2" mb="0" cb="0"/><line nr="9235" mi="0" ci="6" mb="0" cb="2"/><line nr="9236" mi="0" ci="2" mb="0" cb="0"/><line nr="9240" mi="0" ci="6" mb="0" cb="2"/><line nr="9241" mi="0" ci="2" mb="0" cb="0"/><line nr="9245" mi="0" ci="6" mb="1" cb="1"/><line nr="9246" mi="2" ci="0" mb="0" cb="0"/><line nr="9250" mi="0" ci="6" mb="0" cb="2"/><line nr="9251" mi="0" ci="2" mb="0" cb="0"/><line nr="9255" mi="0" ci="6" mb="0" cb="2"/><line nr="9256" mi="0" ci="2" mb="0" cb="0"/><line nr="9261" mi="0" ci="3" mb="0" cb="0"/><line nr="9262" mi="0" ci="3" mb="0" cb="2"/><line nr="9263" mi="0" ci="3" mb="0" cb="0"/><line nr="9264" mi="0" ci="3" mb="0" cb="2"/><line nr="9265" mi="0" ci="3" mb="0" cb="0"/><line nr="9266" mi="0" ci="3" mb="1" cb="1"/><line nr="9267" mi="0" ci="3" mb="0" cb="0"/><line nr="9268" mi="0" ci="3" mb="0" cb="2"/><line nr="9269" mi="0" ci="3" mb="0" cb="0"/><line nr="9270" mi="0" ci="3" mb="0" cb="2"/><line nr="9271" mi="0" ci="3" mb="0" cb="0"/><line nr="9272" mi="0" ci="3" mb="0" cb="2"/><line nr="9273" mi="0" ci="3" mb="0" cb="0"/><line nr="9274" mi="0" ci="5" mb="0" cb="2"/><line nr="9281" mi="0" ci="2" mb="0" cb="0"/><line nr="9285" mi="0" ci="6" mb="1" cb="1"/><line nr="9286" mi="5" ci="0" mb="2" cb="0"/><line nr="9287" mi="2" ci="0" mb="0" cb="0"/><line nr="9291" mi="0" ci="5" mb="0" cb="2"/><line nr="9292" mi="0" ci="2" mb="0" cb="0"/><line nr="9296" mi="0" ci="6" mb="0" cb="2"/><line nr="9297" mi="2" ci="4" mb="1" cb="1"/><line nr="9298" mi="0" ci="2" mb="0" cb="0"/><line nr="9302" mi="0" ci="6" mb="0" cb="2"/><line nr="9303" mi="2" ci="3" mb="1" cb="1"/><line nr="9304" mi="2" ci="4" mb="1" cb="1"/><line nr="9305" mi="0" ci="2" mb="0" cb="0"/><line nr="9309" mi="0" ci="5" mb="0" cb="2"/><line nr="9310" mi="0" ci="2" mb="0" cb="0"/><line nr="9314" mi="0" ci="6" mb="0" cb="2"/><line nr="9315" mi="0" ci="5" mb="1" cb="1"/><line nr="9316" mi="2" ci="0" mb="0" cb="0"/><line nr="9321" mi="0" ci="3" mb="0" cb="0"/><line nr="9322" mi="0" ci="3" mb="0" cb="2"/><line nr="9323" mi="0" ci="3" mb="0" cb="0"/><line nr="9324" mi="0" ci="3" mb="0" cb="2"/><line nr="9325" mi="0" ci="3" mb="0" cb="0"/><line nr="9326" mi="0" ci="3" mb="1" cb="1"/><line nr="9327" mi="0" ci="3" mb="0" cb="0"/><line nr="9328" mi="0" ci="3" mb="0" cb="2"/><line nr="9329" mi="0" ci="3" mb="0" cb="0"/><line nr="9330" mi="0" ci="3" mb="0" cb="2"/><line nr="9331" mi="0" ci="3" mb="0" cb="0"/><line nr="9332" mi="0" ci="3" mb="0" cb="2"/><line nr="9333" mi="0" ci="3" mb="0" cb="0"/><line nr="9334" mi="0" ci="5" mb="0" cb="2"/><line nr="9341" mi="0" ci="2" mb="0" cb="0"/><line nr="9345" mi="0" ci="6" mb="0" cb="2"/><line nr="9346" mi="0" ci="6" mb="0" cb="2"/><line nr="9347" mi="0" ci="2" mb="0" cb="0"/><line nr="9351" mi="0" ci="6" mb="0" cb="2"/><line nr="9352" mi="0" ci="6" mb="0" cb="2"/><line nr="9353" mi="0" ci="2" mb="0" cb="0"/><line nr="9357" mi="2" ci="3" mb="1" cb="1"/><line nr="9358" mi="0" ci="5" mb="0" cb="2"/><line nr="9359" mi="0" ci="2" mb="0" cb="0"/><line nr="9363" mi="0" ci="6" mb="0" cb="2"/><line nr="9364" mi="0" ci="2" mb="0" cb="0"/><line nr="9368" mi="0" ci="5" mb="0" cb="2"/><line nr="9369" mi="0" ci="6" mb="0" cb="2"/><line nr="9370" mi="0" ci="2" mb="0" cb="0"/><line nr="9374" mi="0" ci="6" mb="1" cb="1"/><line nr="9375" mi="2" ci="0" mb="0" cb="0"/><line nr="9379" mi="2" ci="3" mb="1" cb="1"/><line nr="9380" mi="0" ci="6" mb="0" cb="2"/><line nr="9381" mi="0" ci="6" mb="0" cb="2"/><line nr="9382" mi="0" ci="2" mb="0" cb="0"/><line nr="9386" mi="0" ci="6" mb="0" cb="2"/><line nr="9387" mi="0" ci="5" mb="0" cb="2"/><line nr="9390" mi="0" ci="3" mb="0" cb="0"/><line nr="9391" mi="0" ci="7" mb="0" cb="2"/><line nr="9393" mi="0" ci="6" mb="0" cb="2"/><line nr="9394" mi="0" ci="6" mb="0" cb="2"/><line nr="9395" mi="0" ci="3" mb="0" cb="0"/><line nr="9396" mi="0" ci="3" mb="0" cb="2"/><line nr="9397" mi="0" ci="3" mb="0" cb="0"/><line nr="9398" mi="2" ci="3" mb="1" cb="1"/><line nr="9400" mi="0" ci="2" mb="0" cb="0"/><line nr="9404" mi="0" ci="6" mb="0" cb="2"/><line nr="9405" mi="0" ci="2" mb="0" cb="0"/><line nr="9409" mi="0" ci="5" mb="0" cb="2"/><line nr="9410" mi="2" ci="4" mb="1" cb="1"/><line nr="9412" mi="0" ci="3" mb="0" cb="0"/><line nr="9413" mi="0" ci="3" mb="0" cb="2"/><line nr="9414" mi="0" ci="3" mb="0" cb="0"/><line nr="9415" mi="2" ci="3" mb="1" cb="1"/><line nr="9417" mi="0" ci="2" mb="0" cb="0"/><line nr="9421" mi="0" ci="5" mb="0" cb="2"/><line nr="9422" mi="0" ci="6" mb="0" cb="2"/><line nr="9424" mi="0" ci="3" mb="0" cb="0"/><line nr="9425" mi="0" ci="3" mb="0" cb="2"/><line nr="9426" mi="0" ci="3" mb="0" cb="0"/><line nr="9427" mi="2" ci="3" mb="1" cb="1"/><line nr="9429" mi="0" ci="2" mb="0" cb="0"/><line nr="9434" mi="0" ci="3" mb="0" cb="0"/><line nr="9435" mi="0" ci="3" mb="0" cb="2"/><line nr="9436" mi="0" ci="3" mb="0" cb="0"/><line nr="9437" mi="0" ci="3" mb="0" cb="2"/><line nr="9438" mi="0" ci="3" mb="0" cb="0"/><line nr="9439" mi="0" ci="5" mb="0" cb="2"/><line nr="9442" mi="0" ci="2" mb="0" cb="0"/><line nr="9446" mi="0" ci="5" mb="0" cb="2"/><line nr="9447" mi="2" ci="4" mb="1" cb="1"/><line nr="9448" mi="0" ci="2" mb="0" cb="0"/><line nr="9452" mi="0" ci="6" mb="0" cb="2"/><line nr="9453" mi="0" ci="5" mb="0" cb="2"/><line nr="9456" mi="0" ci="3" mb="0" cb="0"/><line nr="9457" mi="0" ci="7" mb="0" cb="2"/><line nr="9459" mi="0" ci="6" mb="0" cb="2"/><line nr="9460" mi="0" ci="6" mb="0" cb="2"/><line nr="9461" mi="0" ci="2" mb="0" cb="0"/><line nr="9465" mi="0" ci="6" mb="0" cb="2"/><line nr="9466" mi="0" ci="6" mb="0" cb="2"/><line nr="9467" mi="0" ci="2" mb="0" cb="0"/><line nr="9471" mi="0" ci="5" mb="1" cb="1"/><line nr="9472" mi="2" ci="0" mb="0" cb="0"/><line nr="9476" mi="0" ci="5" mb="1" cb="1"/><line nr="9477" mi="5" ci="0" mb="2" cb="0"/><line nr="9478" mi="2" ci="0" mb="0" cb="0"/><line nr="9482" mi="0" ci="5" mb="0" cb="2"/><line nr="9483" mi="0" ci="2" mb="0" cb="0"/><line nr="9487" mi="0" ci="5" mb="0" cb="2"/><line nr="9488" mi="0" ci="6" mb="0" cb="2"/><line nr="9489" mi="0" ci="6" mb="0" cb="2"/><line nr="9490" mi="0" ci="2" mb="0" cb="0"/><line nr="9494" mi="0" ci="5" mb="0" cb="2"/><line nr="9495" mi="0" ci="2" mb="0" cb="0"/><line nr="9499" mi="0" ci="6" mb="0" cb="2"/><line nr="9500" mi="2" ci="3" mb="1" cb="1"/><line nr="9501" mi="2" ci="4" mb="1" cb="1"/><line nr="9502" mi="0" ci="2" mb="0" cb="0"/><line nr="9506" mi="0" ci="5" mb="1" cb="1"/><line nr="9507" mi="2" ci="0" mb="0" cb="0"/><line nr="9511" mi="0" ci="5" mb="1" cb="1"/><line nr="9512" mi="2" ci="0" mb="0" cb="0"/><line nr="9516" mi="0" ci="5" mb="0" cb="2"/><line nr="9517" mi="0" ci="2" mb="0" cb="0"/><line nr="9521" mi="0" ci="6" mb="0" cb="2"/><line nr="9522" mi="0" ci="2" mb="0" cb="0"/><line nr="9526" mi="0" ci="6" mb="0" cb="2"/><line nr="9527" mi="0" ci="2" mb="0" cb="0"/><line nr="9532" mi="0" ci="3" mb="0" cb="0"/><line nr="9533" mi="0" ci="3" mb="0" cb="2"/><line nr="9534" mi="0" ci="3" mb="0" cb="0"/><line nr="9535" mi="0" ci="3" mb="0" cb="2"/><line nr="9536" mi="0" ci="3" mb="0" cb="0"/><line nr="9537" mi="0" ci="3" mb="0" cb="2"/><line nr="9538" mi="0" ci="3" mb="0" cb="0"/><line nr="9539" mi="0" ci="3" mb="0" cb="2"/><line nr="9540" mi="0" ci="3" mb="0" cb="0"/><line nr="9541" mi="0" ci="3" mb="1" cb="1"/><line nr="9542" mi="0" ci="3" mb="0" cb="0"/><line nr="9543" mi="0" ci="3" mb="1" cb="1"/><line nr="9544" mi="0" ci="3" mb="0" cb="0"/><line nr="9545" mi="0" ci="3" mb="0" cb="2"/><line nr="9546" mi="0" ci="3" mb="0" cb="0"/><line nr="9547" mi="0" ci="3" mb="0" cb="2"/><line nr="9548" mi="0" ci="3" mb="0" cb="0"/><line nr="9549" mi="0" ci="3" mb="0" cb="2"/><line nr="9550" mi="0" ci="3" mb="0" cb="0"/><line nr="9551" mi="0" ci="3" mb="0" cb="2"/><line nr="9552" mi="0" ci="3" mb="0" cb="0"/><line nr="9553" mi="0" ci="3" mb="1" cb="1"/><line nr="9554" mi="0" ci="3" mb="0" cb="0"/><line nr="9555" mi="0" ci="5" mb="1" cb="1"/><line nr="9567" mi="0" ci="2" mb="0" cb="0"/><line nr="9571" mi="0" ci="5" mb="0" cb="2"/><line nr="9572" mi="0" ci="2" mb="0" cb="0"/><line nr="9576" mi="0" ci="5" mb="0" cb="2"/><line nr="9577" mi="0" ci="2" mb="0" cb="0"/><line nr="9581" mi="0" ci="5" mb="0" cb="2"/><line nr="9582" mi="0" ci="2" mb="0" cb="0"/><line nr="9586" mi="0" ci="6" mb="0" cb="2"/><line nr="9587" mi="0" ci="5" mb="0" cb="2"/><line nr="9588" mi="0" ci="2" mb="0" cb="0"/><line nr="9592" mi="0" ci="6" mb="0" cb="2"/><line nr="9594" mi="0" ci="3" mb="0" cb="0"/><line nr="9595" mi="0" ci="6" mb="0" cb="2"/><line nr="9596" mi="0" ci="3" mb="0" cb="0"/><line nr="9597" mi="0" ci="3" mb="0" cb="2"/><line nr="9598" mi="0" ci="3" mb="0" cb="0"/><line nr="9599" mi="2" ci="3" mb="1" cb="1"/><line nr="9601" mi="0" ci="2" mb="0" cb="0"/><line nr="9605" mi="0" ci="6" mb="0" cb="2"/><line nr="9606" mi="0" ci="2" mb="0" cb="0"/><line nr="9610" mi="0" ci="6" mb="0" cb="2"/><line nr="9611" mi="0" ci="2" mb="0" cb="0"/><line nr="9615" mi="0" ci="5" mb="0" cb="2"/><line nr="9616" mi="0" ci="2" mb="0" cb="0"/><line nr="9621" mi="0" ci="3" mb="0" cb="0"/><line nr="9622" mi="0" ci="3" mb="0" cb="2"/><line nr="9623" mi="0" ci="3" mb="0" cb="0"/><line nr="9624" mi="0" ci="5" mb="0" cb="2"/><line nr="9626" mi="0" ci="2" mb="0" cb="0"/><line nr="9630" mi="0" ci="6" mb="0" cb="2"/><line nr="9631" mi="0" ci="5" mb="0" cb="2"/><line nr="9632" mi="2" ci="4" mb="1" cb="1"/><line nr="9633" mi="0" ci="2" mb="0" cb="0"/><line nr="9637" mi="0" ci="6" mb="0" cb="2"/><line nr="9638" mi="0" ci="2" mb="0" cb="0"/><line nr="9643" mi="0" ci="3" mb="0" cb="0"/><line nr="9644" mi="0" ci="3" mb="0" cb="2"/><line nr="9645" mi="0" ci="3" mb="0" cb="0"/><line nr="9646" mi="0" ci="5" mb="1" cb="1"/><line nr="9648" mi="0" ci="2" mb="0" cb="0"/><line nr="9652" mi="0" ci="6" mb="0" cb="2"/><line nr="9653" mi="0" ci="2" mb="0" cb="0"/><line nr="9657" mi="0" ci="5" mb="1" cb="1"/><line nr="9658" mi="2" ci="0" mb="0" cb="0"/><line nr="9662" mi="0" ci="5" mb="0" cb="2"/><line nr="9665" mi="0" ci="3" mb="0" cb="0"/><line nr="9666" mi="0" ci="7" mb="0" cb="2"/><line nr="9668" mi="0" ci="2" mb="0" cb="0"/><line nr="9672" mi="0" ci="5" mb="1" cb="1"/><line nr="9673" mi="2" ci="0" mb="0" cb="0"/><line nr="9677" mi="0" ci="5" mb="0" cb="2"/><line nr="9678" mi="0" ci="2" mb="0" cb="0"/><line nr="9682" mi="0" ci="6" mb="0" cb="2"/><line nr="9685" mi="0" ci="3" mb="0" cb="0"/><line nr="9686" mi="0" ci="7" mb="1" cb="1"/><line nr="9688" mi="0" ci="5" mb="0" cb="2"/><line nr="9690" mi="0" ci="3" mb="0" cb="0"/><line nr="9691" mi="0" ci="7" mb="1" cb="1"/><line nr="9693" mi="0" ci="6" mb="1" cb="1"/><line nr="9694" mi="5" ci="0" mb="2" cb="0"/><line nr="9695" mi="2" ci="0" mb="0" cb="0"/><line nr="9699" mi="2" ci="4" mb="1" cb="1"/><line nr="9702" mi="0" ci="3" mb="0" cb="0"/><line nr="9703" mi="0" ci="7" mb="0" cb="2"/><line nr="9705" mi="0" ci="5" mb="0" cb="2"/><line nr="9706" mi="2" ci="4" mb="1" cb="1"/><line nr="9707" mi="0" ci="2" mb="0" cb="0"/><line nr="9711" mi="0" ci="5" mb="0" cb="2"/><line nr="9712" mi="0" ci="2" mb="0" cb="0"/><line nr="9716" mi="0" ci="5" mb="0" cb="2"/><line nr="9717" mi="0" ci="2" mb="0" cb="0"/><line nr="9721" mi="0" ci="6" mb="0" cb="2"/><line nr="9724" mi="0" ci="3" mb="0" cb="0"/><line nr="9725" mi="0" ci="7" mb="1" cb="1"/><line nr="9727" mi="0" ci="5" mb="0" cb="2"/><line nr="9728" mi="0" ci="6" mb="0" cb="2"/><line nr="9729" mi="2" ci="3" mb="1" cb="1"/><line nr="9730" mi="0" ci="2" mb="0" cb="0"/><line nr="9735" mi="0" ci="3" mb="0" cb="0"/><line nr="9736" mi="0" ci="3" mb="0" cb="2"/><line nr="9737" mi="0" ci="3" mb="0" cb="0"/><line nr="9738" mi="0" ci="5" mb="1" cb="1"/><line nr="9740" mi="0" ci="2" mb="0" cb="0"/><line nr="9744" mi="0" ci="6" mb="0" cb="2"/><line nr="9747" mi="0" ci="3" mb="0" cb="0"/><line nr="9748" mi="0" ci="7" mb="0" cb="2"/><line nr="9750" mi="0" ci="5" mb="0" cb="2"/><line nr="9752" mi="0" ci="3" mb="0" cb="0"/><line nr="9753" mi="0" ci="7" mb="0" cb="2"/><line nr="9755" mi="0" ci="6" mb="0" cb="2"/><line nr="9756" mi="0" ci="5" mb="0" cb="2"/><line nr="9757" mi="0" ci="2" mb="0" cb="0"/><line nr="9761" mi="0" ci="6" mb="0" cb="2"/><line nr="9764" mi="0" ci="3" mb="0" cb="0"/><line nr="9765" mi="0" ci="7" mb="0" cb="2"/><line nr="9767" mi="0" ci="5" mb="0" cb="2"/><line nr="9768" mi="0" ci="6" mb="0" cb="2"/><line nr="9769" mi="0" ci="2" mb="0" cb="0"/><line nr="9773" mi="0" ci="5" mb="0" cb="2"/><line nr="9775" mi="0" ci="3" mb="0" cb="0"/><line nr="9776" mi="0" ci="6" mb="0" cb="2"/><line nr="9777" mi="0" ci="2" mb="0" cb="0"/><line nr="9781" mi="0" ci="6" mb="0" cb="2"/><line nr="9782" mi="0" ci="2" mb="0" cb="0"/><line nr="9786" mi="0" ci="6" mb="0" cb="2"/><line nr="9787" mi="0" ci="2" mb="0" cb="0"/><line nr="9791" mi="0" ci="6" mb="0" cb="2"/><line nr="9792" mi="0" ci="2" mb="0" cb="0"/><line nr="9796" mi="0" ci="5" mb="0" cb="2"/><line nr="9797" mi="0" ci="2" mb="0" cb="0"/><line nr="9801" mi="0" ci="5" mb="1" cb="1"/><line nr="9802" mi="2" ci="0" mb="0" cb="0"/><line nr="9806" mi="0" ci="6" mb="0" cb="2"/><line nr="9807" mi="0" ci="2" mb="0" cb="0"/><line nr="9811" mi="0" ci="5" mb="0" cb="2"/><line nr="9812" mi="0" ci="2" mb="0" cb="0"/><line nr="9816" mi="0" ci="6" mb="0" cb="2"/><line nr="9817" mi="0" ci="2" mb="0" cb="0"/><line nr="9822" mi="0" ci="3" mb="0" cb="0"/><line nr="9823" mi="0" ci="3" mb="0" cb="2"/><line nr="9824" mi="0" ci="3" mb="0" cb="0"/><line nr="9825" mi="0" ci="3" mb="0" cb="2"/><line nr="9826" mi="0" ci="3" mb="0" cb="0"/><line nr="9827" mi="0" ci="3" mb="1" cb="1"/><line nr="9828" mi="0" ci="3" mb="0" cb="0"/><line nr="9829" mi="0" ci="5" mb="0" cb="2"/><line nr="9833" mi="0" ci="2" mb="0" cb="0"/><line nr="9838" mi="0" ci="3" mb="0" cb="0"/><line nr="9839" mi="0" ci="3" mb="0" cb="2"/><line nr="9840" mi="0" ci="3" mb="0" cb="0"/><line nr="9841" mi="0" ci="5" mb="0" cb="2"/><line nr="9843" mi="2" ci="3" mb="1" cb="1"/><line nr="9844" mi="0" ci="2" mb="0" cb="0"/><line nr="9849" mi="0" ci="3" mb="0" cb="0"/><line nr="9850" mi="0" ci="3" mb="0" cb="2"/><line nr="9851" mi="0" ci="3" mb="0" cb="0"/><line nr="9852" mi="0" ci="5" mb="0" cb="2"/><line nr="9854" mi="2" ci="3" mb="1" cb="1"/><line nr="9855" mi="0" ci="2" mb="0" cb="0"/><line nr="9859" mi="0" ci="6" mb="0" cb="2"/><line nr="9860" mi="2" ci="3" mb="1" cb="1"/><line nr="9861" mi="0" ci="2" mb="0" cb="0"/><line nr="9866" mi="0" ci="3" mb="0" cb="0"/><line nr="9867" mi="0" ci="3" mb="0" cb="2"/><line nr="9868" mi="0" ci="3" mb="0" cb="0"/><line nr="9869" mi="0" ci="3" mb="0" cb="2"/><line nr="9870" mi="0" ci="3" mb="0" cb="0"/><line nr="9871" mi="0" ci="5" mb="0" cb="2"/><line nr="9874" mi="2" ci="3" mb="1" cb="1"/><line nr="9875" mi="0" ci="2" mb="0" cb="0"/><line nr="9879" mi="0" ci="6" mb="0" cb="2"/><line nr="9880" mi="2" ci="3" mb="1" cb="1"/><line nr="9881" mi="0" ci="2" mb="0" cb="0"/><line nr="9885" mi="0" ci="5" mb="0" cb="2"/><line nr="9886" mi="0" ci="2" mb="0" cb="0"/><line nr="9890" mi="0" ci="5" mb="0" cb="2"/><line nr="9891" mi="0" ci="2" mb="0" cb="0"/><line nr="9895" mi="0" ci="5" mb="0" cb="2"/><line nr="9896" mi="0" ci="2" mb="0" cb="0"/><line nr="9900" mi="0" ci="6" mb="0" cb="2"/><line nr="9901" mi="0" ci="2" mb="0" cb="0"/><line nr="9906" mi="0" ci="3" mb="0" cb="0"/><line nr="9907" mi="0" ci="3" mb="0" cb="2"/><line nr="9908" mi="0" ci="3" mb="0" cb="0"/><line nr="9909" mi="0" ci="3" mb="0" cb="2"/><line nr="9910" mi="0" ci="3" mb="0" cb="0"/><line nr="9911" mi="0" ci="3" mb="0" cb="2"/><line nr="9912" mi="0" ci="3" mb="0" cb="0"/><line nr="9913" mi="0" ci="5" mb="0" cb="2"/><line nr="9917" mi="0" ci="2" mb="0" cb="0"/><line nr="9922" mi="0" ci="3" mb="0" cb="0"/><line nr="9923" mi="0" ci="3" mb="0" cb="2"/><line nr="9924" mi="0" ci="3" mb="0" cb="0"/><line nr="9925" mi="0" ci="5" mb="0" cb="2"/><line nr="9927" mi="2" ci="3" mb="1" cb="1"/><line nr="9928" mi="0" ci="2" mb="0" cb="0"/><line nr="9932" mi="0" ci="5" mb="0" cb="2"/><line nr="9935" mi="0" ci="3" mb="0" cb="0"/><line nr="9936" mi="0" ci="7" mb="0" cb="2"/><line nr="9938" mi="0" ci="2" mb="0" cb="0"/><line nr="9942" mi="0" ci="6" mb="0" cb="2"/><line nr="9943" mi="0" ci="2" mb="0" cb="0"/><line nr="9947" mi="0" ci="5" mb="0" cb="2"/><line nr="9950" mi="0" ci="3" mb="0" cb="0"/><line nr="9951" mi="0" ci="7" mb="0" cb="2"/><line nr="9953" mi="0" ci="2" mb="0" cb="0"/><line nr="9957" mi="0" ci="5" mb="1" cb="1"/><line nr="9958" mi="2" ci="0" mb="0" cb="0"/><line nr="9962" mi="0" ci="5" mb="1" cb="1"/><line nr="9963" mi="2" ci="0" mb="0" cb="0"/><line nr="9967" mi="0" ci="6" mb="0" cb="2"/><line nr="9968" mi="2" ci="3" mb="1" cb="1"/><line nr="9969" mi="0" ci="2" mb="0" cb="0"/><line nr="9973" mi="0" ci="6" mb="0" cb="2"/><line nr="9974" mi="0" ci="2" mb="0" cb="0"/><line nr="9979" mi="0" ci="3" mb="0" cb="0"/><line nr="9980" mi="0" ci="3" mb="0" cb="2"/><line nr="9981" mi="0" ci="3" mb="0" cb="0"/><line nr="9982" mi="0" ci="3" mb="1" cb="1"/><line nr="9983" mi="0" ci="3" mb="0" cb="0"/><line nr="9984" mi="0" ci="5" mb="1" cb="1"/><line nr="9987" mi="5" ci="0" mb="2" cb="0"/><line nr="9988" mi="2" ci="0" mb="0" cb="0"/><line nr="9993" mi="0" ci="3" mb="0" cb="0"/><line nr="9994" mi="0" ci="3" mb="0" cb="2"/><line nr="9995" mi="0" ci="3" mb="0" cb="0"/><line nr="9996" mi="0" ci="5" mb="0" cb="2"/><line nr="9998" mi="2" ci="3" mb="1" cb="1"/><line nr="9999" mi="0" ci="2" mb="0" cb="0"/><line nr="10003" mi="0" ci="5" mb="0" cb="2"/><line nr="10006" mi="0" ci="3" mb="0" cb="0"/><line nr="10007" mi="0" ci="7" mb="1" cb="1"/><line nr="10009" mi="0" ci="2" mb="0" cb="0"/><line nr="10013" mi="0" ci="6" mb="0" cb="2"/><line nr="10014" mi="0" ci="2" mb="0" cb="0"/><line nr="10018" mi="0" ci="6" mb="0" cb="2"/><line nr="10019" mi="0" ci="2" mb="0" cb="0"/><line nr="10023" mi="0" ci="6" mb="0" cb="2"/><line nr="10024" mi="0" ci="2" mb="0" cb="0"/><line nr="10028" mi="0" ci="6" mb="0" cb="2"/><line nr="10029" mi="0" ci="2" mb="0" cb="0"/><line nr="10033" mi="0" ci="6" mb="1" cb="1"/><line nr="10034" mi="5" ci="0" mb="2" cb="0"/><line nr="10035" mi="2" ci="0" mb="0" cb="0"/><line nr="10040" mi="0" ci="3" mb="0" cb="0"/><line nr="10041" mi="0" ci="3" mb="0" cb="2"/><line nr="10042" mi="0" ci="3" mb="0" cb="0"/><line nr="10043" mi="0" ci="3" mb="0" cb="2"/><line nr="10044" mi="0" ci="3" mb="0" cb="0"/><line nr="10045" mi="0" ci="3" mb="0" cb="2"/><line nr="10046" mi="0" ci="3" mb="0" cb="0"/><line nr="10047" mi="0" ci="5" mb="0" cb="2"/><line nr="10051" mi="2" ci="3" mb="1" cb="1"/><line nr="10052" mi="0" ci="2" mb="0" cb="0"/><line nr="10056" mi="0" ci="5" mb="0" cb="2"/><line nr="10059" mi="0" ci="3" mb="0" cb="0"/><line nr="10060" mi="0" ci="7" mb="0" cb="2"/><line nr="10062" mi="0" ci="2" mb="0" cb="0"/><line nr="10066" mi="0" ci="6" mb="1" cb="1"/><line nr="10067" mi="5" ci="0" mb="2" cb="0"/><line nr="10068" mi="2" ci="0" mb="0" cb="0"/><line nr="10072" mi="0" ci="6" mb="1" cb="1"/><line nr="10073" mi="5" ci="0" mb="2" cb="0"/><line nr="10074" mi="2" ci="0" mb="0" cb="0"/><line nr="10078" mi="0" ci="5" mb="0" cb="2"/><line nr="10080" mi="0" ci="3" mb="0" cb="0"/><line nr="10081" mi="0" ci="6" mb="0" cb="2"/><line nr="10082" mi="0" ci="2" mb="0" cb="0"/><line nr="10086" mi="0" ci="6" mb="1" cb="1"/><line nr="10087" mi="5" ci="0" mb="2" cb="0"/><line nr="10088" mi="2" ci="0" mb="0" cb="0"/><line nr="10092" mi="0" ci="5" mb="0" cb="2"/><line nr="10095" mi="0" ci="3" mb="0" cb="0"/><line nr="10096" mi="0" ci="7" mb="0" cb="2"/><line nr="10098" mi="0" ci="2" mb="0" cb="0"/><line nr="10102" mi="0" ci="6" mb="1" cb="1"/><line nr="10103" mi="5" ci="0" mb="2" cb="0"/><line nr="10104" mi="2" ci="0" mb="0" cb="0"/><line nr="10108" mi="0" ci="5" mb="0" cb="2"/><line nr="10111" mi="0" ci="3" mb="0" cb="0"/><line nr="10112" mi="0" ci="7" mb="1" cb="1"/><line nr="10114" mi="0" ci="2" mb="0" cb="0"/><line nr="10118" mi="0" ci="6" mb="0" cb="2"/><line nr="10119" mi="2" ci="3" mb="1" cb="1"/><line nr="10120" mi="2" ci="4" mb="1" cb="1"/><line nr="10121" mi="2" ci="3" mb="1" cb="1"/><line nr="10122" mi="0" ci="2" mb="0" cb="0"/><line nr="10126" mi="0" ci="5" mb="0" cb="2"/><line nr="10129" mi="0" ci="3" mb="0" cb="0"/><line nr="10130" mi="0" ci="7" mb="1" cb="1"/><line nr="10132" mi="0" ci="2" mb="0" cb="0"/><line nr="10136" mi="0" ci="5" mb="0" cb="2"/><line nr="10139" mi="0" ci="3" mb="0" cb="0"/><line nr="10140" mi="0" ci="7" mb="1" cb="1"/><line nr="10142" mi="0" ci="2" mb="0" cb="0"/><line nr="10146" mi="0" ci="5" mb="0" cb="2"/><line nr="10149" mi="0" ci="3" mb="0" cb="0"/><line nr="10150" mi="0" ci="7" mb="1" cb="1"/><line nr="10152" mi="0" ci="2" mb="0" cb="0"/><line nr="10156" mi="0" ci="5" mb="0" cb="2"/><line nr="10159" mi="0" ci="3" mb="0" cb="0"/><line nr="10160" mi="0" ci="7" mb="1" cb="1"/><line nr="10162" mi="0" ci="2" mb="0" cb="0"/><line nr="10166" mi="0" ci="5" mb="0" cb="2"/><line nr="10168" mi="0" ci="3" mb="0" cb="0"/><line nr="10169" mi="0" ci="6" mb="0" cb="2"/><line nr="10170" mi="0" ci="2" mb="0" cb="0"/><line nr="10174" mi="0" ci="6" mb="0" cb="2"/><line nr="10175" mi="0" ci="2" mb="0" cb="0"/><line nr="10179" mi="0" ci="6" mb="0" cb="2"/><line nr="10180" mi="0" ci="2" mb="0" cb="0"/><line nr="10184" mi="0" ci="6" mb="0" cb="2"/><line nr="10185" mi="0" ci="2" mb="0" cb="0"/><line nr="10189" mi="0" ci="6" mb="0" cb="2"/><line nr="10190" mi="0" ci="2" mb="0" cb="0"/><line nr="10194" mi="0" ci="6" mb="0" cb="2"/><line nr="10195" mi="0" ci="2" mb="0" cb="0"/><line nr="10199" mi="0" ci="6" mb="0" cb="2"/><line nr="10200" mi="0" ci="2" mb="0" cb="0"/><line nr="10204" mi="0" ci="6" mb="0" cb="2"/><line nr="10205" mi="0" ci="2" mb="0" cb="0"/><line nr="10209" mi="0" ci="6" mb="0" cb="2"/><line nr="10210" mi="0" ci="2" mb="0" cb="0"/><line nr="10214" mi="0" ci="6" mb="0" cb="2"/><line nr="10215" mi="0" ci="2" mb="0" cb="0"/><line nr="10219" mi="0" ci="6" mb="0" cb="2"/><line nr="10220" mi="0" ci="2" mb="0" cb="0"/><line nr="10224" mi="0" ci="6" mb="0" cb="2"/><line nr="10225" mi="0" ci="2" mb="0" cb="0"/><line nr="10230" mi="0" ci="3" mb="0" cb="0"/><line nr="10231" mi="0" ci="3" mb="0" cb="2"/><line nr="10232" mi="0" ci="3" mb="0" cb="0"/><line nr="10233" mi="0" ci="3" mb="0" cb="2"/><line nr="10234" mi="0" ci="3" mb="0" cb="0"/><line nr="10235" mi="0" ci="3" mb="0" cb="2"/><line nr="10236" mi="0" ci="3" mb="0" cb="0"/><line nr="10237" mi="0" ci="3" mb="0" cb="2"/><line nr="10238" mi="0" ci="3" mb="0" cb="0"/><line nr="10239" mi="0" ci="3" mb="0" cb="2"/><line nr="10240" mi="0" ci="3" mb="0" cb="0"/><line nr="10241" mi="0" ci="3" mb="0" cb="2"/><line nr="10242" mi="0" ci="3" mb="0" cb="0"/><line nr="10243" mi="0" ci="3" mb="0" cb="2"/><line nr="10244" mi="0" ci="3" mb="0" cb="0"/><line nr="10245" mi="0" ci="3" mb="0" cb="2"/><line nr="10246" mi="0" ci="3" mb="0" cb="0"/><line nr="10247" mi="0" ci="3" mb="0" cb="2"/><line nr="10248" mi="0" ci="3" mb="0" cb="0"/><line nr="10249" mi="0" ci="3" mb="0" cb="2"/><line nr="10250" mi="0" ci="3" mb="0" cb="0"/><line nr="10251" mi="0" ci="3" mb="0" cb="2"/><line nr="10252" mi="0" ci="3" mb="0" cb="0"/><line nr="10253" mi="0" ci="5" mb="0" cb="2"/><line nr="10265" mi="0" ci="2" mb="0" cb="0"/><line nr="10269" mi="0" ci="6" mb="0" cb="2"/><line nr="10270" mi="0" ci="2" mb="0" cb="0"/><line nr="10274" mi="0" ci="5" mb="1" cb="1"/><line nr="10275" mi="5" ci="0" mb="2" cb="0"/><line nr="10276" mi="2" ci="0" mb="0" cb="0"/><line nr="10280" mi="0" ci="5" mb="0" cb="2"/><line nr="10282" mi="0" ci="3" mb="0" cb="0"/><line nr="10283" mi="0" ci="6" mb="1" cb="1"/><line nr="10284" mi="0" ci="2" mb="0" cb="0"/><line nr="10288" mi="5" ci="0" mb="2" cb="0"/><line nr="10289" mi="2" ci="0" mb="0" cb="0"/><line nr="10293" mi="0" ci="6" mb="1" cb="1"/><line nr="10296" mi="3" ci="0" mb="0" cb="0"/><line nr="10297" mi="7" ci="0" mb="2" cb="0"/><line nr="10299" mi="5" ci="0" mb="2" cb="0"/><line nr="10300" mi="2" ci="0" mb="0" cb="0"/><line nr="10304" mi="0" ci="5" mb="1" cb="1"/><line nr="10305" mi="2" ci="0" mb="0" cb="0"/><line nr="10311" mi="0" ci="3" mb="0" cb="0"/><line nr="10312" mi="0" ci="7" mb="1" cb="1"/><line nr="10314" mi="2" ci="3" mb="1" cb="1"/><line nr="10316" mi="0" ci="3" mb="0" cb="0"/><line nr="10317" mi="0" ci="7" mb="1" cb="1"/><line nr="10319" mi="0" ci="2" mb="0" cb="0"/><line nr="10323" mi="0" ci="5" mb="0" cb="2"/><line nr="10324" mi="0" ci="2" mb="0" cb="0"/><line nr="10328" mi="0" ci="6" mb="0" cb="2"/><line nr="10329" mi="0" ci="6" mb="0" cb="2"/><line nr="10330" mi="0" ci="2" mb="0" cb="0"/><line nr="10334" mi="0" ci="6" mb="0" cb="2"/><line nr="10335" mi="2" ci="3" mb="1" cb="1"/><line nr="10336" mi="0" ci="2" mb="0" cb="0"/><line nr="10340" mi="0" ci="6" mb="0" cb="2"/><line nr="10343" mi="0" ci="3" mb="0" cb="0"/><line nr="10344" mi="0" ci="7" mb="0" cb="2"/><line nr="10346" mi="0" ci="2" mb="0" cb="0"/><line nr="10350" mi="0" ci="5" mb="0" cb="2"/><line nr="10351" mi="0" ci="2" mb="0" cb="0"/><line nr="10356" mi="0" ci="3" mb="0" cb="0"/><line nr="10357" mi="0" ci="4" mb="0" cb="2"/><line nr="10358" mi="0" ci="3" mb="0" cb="0"/><line nr="10359" mi="0" ci="5" mb="0" cb="2"/><line nr="10361" mi="0" ci="2" mb="0" cb="0"/><line nr="10365" mi="0" ci="6" mb="0" cb="2"/><line nr="10366" mi="0" ci="2" mb="0" cb="0"/><line nr="10370" mi="0" ci="6" mb="0" cb="2"/><line nr="10371" mi="0" ci="2" mb="0" cb="0"/><line nr="10375" mi="0" ci="6" mb="0" cb="2"/><line nr="10376" mi="0" ci="2" mb="0" cb="0"/><line nr="10380" mi="0" ci="5" mb="1" cb="1"/><line nr="10381" mi="2" ci="0" mb="0" cb="0"/><line nr="10385" mi="0" ci="5" mb="1" cb="1"/><line nr="10386" mi="2" ci="0" mb="0" cb="0"/><line nr="10390" mi="0" ci="6" mb="0" cb="2"/><line nr="10391" mi="0" ci="2" mb="0" cb="0"/><line nr="10395" mi="0" ci="6" mb="0" cb="2"/><line nr="10396" mi="0" ci="2" mb="0" cb="0"/><line nr="10400" mi="0" ci="6" mb="0" cb="2"/><line nr="10401" mi="0" ci="2" mb="0" cb="0"/><line nr="10405" mi="0" ci="6" mb="0" cb="2"/><line nr="10406" mi="0" ci="2" mb="0" cb="0"/><line nr="10411" mi="0" ci="3" mb="0" cb="0"/><line nr="10412" mi="0" ci="3" mb="0" cb="2"/><line nr="10413" mi="0" ci="3" mb="0" cb="0"/><line nr="10414" mi="0" ci="3" mb="0" cb="2"/><line nr="10415" mi="0" ci="3" mb="0" cb="0"/><line nr="10416" mi="0" ci="3" mb="0" cb="2"/><line nr="10417" mi="0" ci="3" mb="0" cb="0"/><line nr="10418" mi="0" ci="3" mb="0" cb="2"/><line nr="10419" mi="0" ci="3" mb="0" cb="0"/><line nr="10420" mi="0" ci="3" mb="0" cb="2"/><line nr="10421" mi="0" ci="3" mb="0" cb="0"/><line nr="10422" mi="0" ci="3" mb="0" cb="2"/><line nr="10423" mi="0" ci="3" mb="0" cb="0"/><line nr="10424" mi="0" ci="3" mb="0" cb="2"/><line nr="10425" mi="0" ci="3" mb="0" cb="0"/><line nr="10426" mi="0" ci="5" mb="0" cb="2"/><line nr="10434" mi="0" ci="2" mb="0" cb="0"/><line nr="10438" mi="0" ci="6" mb="0" cb="2"/><line nr="10439" mi="0" ci="2" mb="0" cb="0"/><line nr="10443" mi="0" ci="5" mb="0" cb="2"/><line nr="10444" mi="0" ci="2" mb="0" cb="0"/><line nr="10448" mi="0" ci="6" mb="0" cb="2"/><line nr="10451" mi="0" ci="3" mb="0" cb="0"/><line nr="10452" mi="0" ci="7" mb="1" cb="1"/><line nr="10454" mi="2" ci="3" mb="1" cb="1"/><line nr="10455" mi="0" ci="2" mb="0" cb="0"/><line nr="10459" mi="0" ci="6" mb="0" cb="2"/><line nr="10462" mi="0" ci="3" mb="0" cb="0"/><line nr="10463" mi="0" ci="7" mb="1" cb="1"/><line nr="10465" mi="2" ci="3" mb="1" cb="1"/><line nr="10466" mi="0" ci="2" mb="0" cb="0"/><line nr="10471" mi="0" ci="3" mb="0" cb="0"/><line nr="10472" mi="0" ci="3" mb="0" cb="2"/><line nr="10473" mi="0" ci="3" mb="0" cb="0"/><line nr="10474" mi="0" ci="5" mb="0" cb="2"/><line nr="10476" mi="0" ci="2" mb="0" cb="0"/><line nr="10480" mi="0" ci="5" mb="0" cb="2"/><line nr="10481" mi="0" ci="2" mb="0" cb="0"/><line nr="10485" mi="5" ci="0" mb="2" cb="0"/><line nr="10486" mi="2" ci="0" mb="0" cb="0"/><line nr="10490" mi="0" ci="6" mb="0" cb="2"/><line nr="10491" mi="0" ci="6" mb="0" cb="2"/><line nr="10492" mi="0" ci="2" mb="0" cb="0"/><line nr="10496" mi="0" ci="6" mb="0" cb="2"/><line nr="10498" mi="0" ci="3" mb="0" cb="0"/><line nr="10499" mi="0" ci="6" mb="0" cb="2"/><line nr="10500" mi="0" ci="2" mb="0" cb="0"/><line nr="10504" mi="0" ci="5" mb="1" cb="1"/><line nr="10505" mi="2" ci="0" mb="0" cb="0"/><line nr="10510" mi="0" ci="3" mb="0" cb="0"/><line nr="10511" mi="0" ci="3" mb="0" cb="2"/><line nr="10512" mi="0" ci="3" mb="0" cb="0"/><line nr="10513" mi="0" ci="5" mb="0" cb="2"/><line nr="10515" mi="0" ci="2" mb="0" cb="0"/><line nr="10521" mi="0" ci="3" mb="0" cb="0"/><line nr="10522" mi="0" ci="7" mb="1" cb="1"/><line nr="10524" mi="0" ci="5" mb="0" cb="2"/><line nr="10525" mi="0" ci="2" mb="0" cb="0"/><line nr="10529" mi="0" ci="6" mb="0" cb="2"/><line nr="10530" mi="0" ci="6" mb="1" cb="1"/><line nr="10531" mi="2" ci="0" mb="0" cb="0"/><line nr="10536" mi="0" ci="3" mb="0" cb="0"/><line nr="10537" mi="0" ci="3" mb="0" cb="2"/><line nr="10538" mi="0" ci="3" mb="0" cb="0"/><line nr="10539" mi="0" ci="5" mb="1" cb="1"/><line nr="10541" mi="0" ci="2" mb="0" cb="0"/><line nr="10545" mi="0" ci="6" mb="0" cb="2"/><line nr="10546" mi="0" ci="5" mb="0" cb="2"/><line nr="10549" mi="0" ci="3" mb="0" cb="0"/><line nr="10550" mi="0" ci="7" mb="0" cb="2"/><line nr="10552" mi="0" ci="6" mb="0" cb="2"/><line nr="10553" mi="0" ci="2" mb="0" cb="0"/><line nr="10557" mi="0" ci="6" mb="0" cb="2"/><line nr="10558" mi="2" ci="4" mb="1" cb="1"/><line nr="10559" mi="0" ci="2" mb="0" cb="0"/><line nr="10563" mi="0" ci="6" mb="0" cb="2"/><line nr="10564" mi="0" ci="6" mb="0" cb="2"/><line nr="10566" mi="0" ci="3" mb="0" cb="0"/><line nr="10567" mi="0" ci="6" mb="0" cb="2"/><line nr="10568" mi="0" ci="2" mb="0" cb="0"/><line nr="10572" mi="0" ci="5" mb="0" cb="2"/><line nr="10573" mi="0" ci="2" mb="0" cb="0"/><line nr="10577" mi="0" ci="6" mb="0" cb="2"/><line nr="10579" mi="0" ci="3" mb="0" cb="0"/><line nr="10580" mi="0" ci="6" mb="0" cb="2"/><line nr="10582" mi="0" ci="3" mb="0" cb="0"/><line nr="10583" mi="0" ci="7" mb="0" cb="2"/><line nr="10585" mi="0" ci="2" mb="0" cb="0"/><line nr="10589" mi="6" ci="0" mb="2" cb="0"/><line nr="10590" mi="5" ci="0" mb="2" cb="0"/><line nr="10591" mi="2" ci="0" mb="0" cb="0"/><line nr="10595" mi="0" ci="5" mb="0" cb="2"/><line nr="10598" mi="0" ci="3" mb="0" cb="0"/><line nr="10599" mi="0" ci="7" mb="0" cb="2"/><line nr="10601" mi="0" ci="2" mb="0" cb="0"/><line nr="10606" mi="0" ci="3" mb="0" cb="0"/><line nr="10607" mi="0" ci="3" mb="0" cb="2"/><line nr="10608" mi="0" ci="3" mb="0" cb="0"/><line nr="10609" mi="0" ci="5" mb="0" cb="2"/><line nr="10611" mi="0" ci="2" mb="0" cb="0"/><line nr="10615" mi="0" ci="5" mb="0" cb="2"/><line nr="10617" mi="0" ci="5" mb="0" cb="2"/><line nr="10619" mi="0" ci="3" mb="0" cb="0"/><line nr="10620" mi="0" ci="7" mb="0" cb="2"/><line nr="10622" mi="0" ci="2" mb="0" cb="0"/><line nr="10626" mi="5" ci="0" mb="2" cb="0"/><line nr="10627" mi="6" ci="0" mb="2" cb="0"/><line nr="10628" mi="6" ci="0" mb="2" cb="0"/><line nr="10629" mi="6" ci="0" mb="2" cb="0"/><line nr="10631" mi="3" ci="0" mb="0" cb="0"/><line nr="10632" mi="6" ci="0" mb="2" cb="0"/><line nr="10633" mi="6" ci="0" mb="2" cb="0"/><line nr="10634" mi="2" ci="0" mb="0" cb="0"/><line nr="10638" mi="6" ci="0" mb="2" cb="0"/><line nr="10639" mi="5" ci="0" mb="2" cb="0"/><line nr="10640" mi="2" ci="0" mb="0" cb="0"/><line nr="10644" mi="0" ci="5" mb="0" cb="2"/><line nr="10645" mi="0" ci="2" mb="0" cb="0"/><line nr="10650" mi="0" ci="3" mb="0" cb="0"/><line nr="10651" mi="0" ci="3" mb="0" cb="2"/><line nr="10652" mi="0" ci="3" mb="0" cb="0"/><line nr="10653" mi="0" ci="5" mb="0" cb="2"/><line nr="10655" mi="0" ci="2" mb="0" cb="0"/><line nr="10659" mi="0" ci="5" mb="0" cb="2"/><line nr="10660" mi="0" ci="2" mb="0" cb="0"/><line nr="10664" mi="0" ci="5" mb="0" cb="2"/><line nr="10665" mi="2" ci="4" mb="1" cb="1"/><line nr="10666" mi="0" ci="6" mb="0" cb="2"/><line nr="10667" mi="0" ci="2" mb="0" cb="0"/><line nr="10671" mi="0" ci="5" mb="1" cb="1"/><line nr="10672" mi="2" ci="0" mb="0" cb="0"/><line nr="10676" mi="5" ci="0" mb="2" cb="0"/><line nr="10677" mi="2" ci="0" mb="0" cb="0"/><line nr="10681" mi="0" ci="5" mb="0" cb="2"/><line nr="10682" mi="0" ci="6" mb="1" cb="1"/><line nr="10683" mi="2" ci="0" mb="0" cb="0"/><line nr="10687" mi="5" ci="0" mb="2" cb="0"/><line nr="10688" mi="2" ci="0" mb="0" cb="0"/><line nr="10692" mi="0" ci="5" mb="1" cb="1"/><line nr="10693" mi="2" ci="0" mb="0" cb="0"/><line nr="10697" mi="0" ci="6" mb="1" cb="1"/><line nr="10698" mi="2" ci="0" mb="0" cb="0"/><line nr="10702" mi="0" ci="5" mb="0" cb="2"/><line nr="10703" mi="0" ci="6" mb="0" cb="2"/><line nr="10704" mi="2" ci="3" mb="1" cb="1"/><line nr="10705" mi="2" ci="4" mb="1" cb="1"/><line nr="10706" mi="0" ci="2" mb="0" cb="0"/><line nr="10710" mi="5" ci="0" mb="2" cb="0"/><line nr="10711" mi="2" ci="0" mb="0" cb="0"/><line nr="10716" mi="0" ci="3" mb="0" cb="0"/><line nr="10717" mi="0" ci="6" mb="1" cb="1"/><line nr="10718" mi="0" ci="5" mb="0" cb="2"/><line nr="10719" mi="0" ci="2" mb="0" cb="0"/><line nr="10723" mi="0" ci="6" mb="0" cb="2"/><line nr="10724" mi="2" ci="3" mb="1" cb="1"/><line nr="10725" mi="2" ci="4" mb="1" cb="1"/><line nr="10726" mi="0" ci="2" mb="0" cb="0"/><line nr="10730" mi="5" ci="0" mb="2" cb="0"/><line nr="10731" mi="2" ci="0" mb="0" cb="0"/><line nr="10735" mi="0" ci="5" mb="0" cb="2"/><line nr="10736" mi="0" ci="2" mb="0" cb="0"/><line nr="10740" mi="0" ci="5" mb="0" cb="2"/><line nr="10741" mi="0" ci="6" mb="1" cb="1"/><line nr="10742" mi="2" ci="0" mb="0" cb="0"/><line nr="10746" mi="5" ci="0" mb="2" cb="0"/><line nr="10748" mi="3" ci="0" mb="0" cb="0"/><line nr="10749" mi="3" ci="0" mb="2" cb="0"/><line nr="10750" mi="3" ci="0" mb="0" cb="0"/><line nr="10751" mi="3" ci="0" mb="2" cb="0"/><line nr="10752" mi="3" ci="0" mb="0" cb="0"/><line nr="10753" mi="3" ci="0" mb="2" cb="0"/><line nr="10754" mi="3" ci="0" mb="0" cb="0"/><line nr="10755" mi="3" ci="0" mb="2" cb="0"/><line nr="10756" mi="3" ci="0" mb="0" cb="0"/><line nr="10757" mi="5" ci="0" mb="2" cb="0"/><line nr="10762" mi="2" ci="0" mb="0" cb="0"/><line nr="10767" mi="3" ci="0" mb="0" cb="0"/><line nr="10768" mi="3" ci="0" mb="2" cb="0"/><line nr="10769" mi="3" ci="0" mb="0" cb="0"/><line nr="10770" mi="6" ci="0" mb="2" cb="0"/><line nr="10772" mi="2" ci="0" mb="0" cb="0"/><line nr="10776" mi="5" ci="0" mb="2" cb="0"/><line nr="10777" mi="2" ci="0" mb="0" cb="0"/><line nr="10782" mi="0" ci="3" mb="0" cb="0"/><line nr="10783" mi="0" ci="6" mb="1" cb="1"/><line nr="10784" mi="0" ci="3" mb="0" cb="0"/><line nr="10785" mi="0" ci="6" mb="0" cb="2"/><line nr="10786" mi="0" ci="6" mb="0" cb="2"/><line nr="10787" mi="0" ci="5" mb="0" cb="2"/><line nr="10788" mi="2" ci="4" mb="1" cb="1"/><line nr="10789" mi="0" ci="2" mb="0" cb="0"/><line nr="10793" mi="0" ci="5" mb="0" cb="2"/><line nr="10794" mi="0" ci="6" mb="0" cb="2"/><line nr="10795" mi="2" ci="3" mb="1" cb="1"/><line nr="10796" mi="2" ci="4" mb="1" cb="1"/><line nr="10797" mi="0" ci="2" mb="0" cb="0"/><line nr="10801" mi="0" ci="6" mb="0" cb="2"/><line nr="10802" mi="2" ci="3" mb="1" cb="1"/><line nr="10803" mi="0" ci="2" mb="0" cb="0"/><line nr="10808" mi="0" ci="3" mb="0" cb="0"/><line nr="10809" mi="0" ci="3" mb="0" cb="2"/><line nr="10810" mi="0" ci="3" mb="0" cb="0"/><line nr="10811" mi="0" ci="3" mb="0" cb="2"/><line nr="10812" mi="0" ci="3" mb="0" cb="0"/><line nr="10813" mi="0" ci="5" mb="0" cb="2"/><line nr="10816" mi="0" ci="2" mb="0" cb="0"/><line nr="10820" mi="0" ci="6" mb="0" cb="2"/><line nr="10821" mi="0" ci="5" mb="0" cb="2"/><line nr="10822" mi="2" ci="4" mb="1" cb="1"/><line nr="10823" mi="0" ci="2" mb="0" cb="0"/><line nr="10827" mi="6" ci="0" mb="2" cb="0"/><line nr="10830" mi="3" ci="0" mb="0" cb="0"/><line nr="10831" mi="7" ci="0" mb="2" cb="0"/><line nr="10833" mi="6" ci="0" mb="2" cb="0"/><line nr="10834" mi="2" ci="0" mb="0" cb="0"/><line nr="10838" mi="0" ci="6" mb="0" cb="2"/><line nr="10839" mi="2" ci="3" mb="1" cb="1"/><line nr="10840" mi="0" ci="2" mb="0" cb="0"/><line nr="10844" mi="0" ci="5" mb="1" cb="1"/><line nr="10845" mi="2" ci="0" mb="0" cb="0"/><line nr="10849" mi="5" ci="0" mb="2" cb="0"/><line nr="10850" mi="2" ci="0" mb="0" cb="0"/><line nr="10862" mi="3" ci="3" mb="0" cb="0"/><line nr="10865" mi="4" ci="4" mb="0" cb="0"/><line nr="10871" mi="0" ci="1" mb="0" cb="0"/><line nr="10872" mi="0" ci="1" mb="0" cb="0"/><line nr="10873" mi="0" ci="1" mb="0" cb="0"/><line nr="10874" mi="0" ci="1" mb="0" cb="0"/><line nr="10875" mi="0" ci="1" mb="0" cb="0"/><line nr="10877" mi="0" ci="611" mb="0" cb="0"/><line nr="10878" mi="0" ci="1" mb="0" cb="0"/><line nr="10880" mi="0" ci="611" mb="0" cb="0"/><line nr="10881" mi="0" ci="1" mb="0" cb="0"/><line nr="10883" mi="0" ci="611" mb="0" cb="0"/><line nr="10884" mi="0" ci="1" mb="0" cb="0"/><line nr="10886" mi="0" ci="611" mb="0" cb="0"/><line nr="10887" mi="0" ci="1" mb="0" cb="0"/><line nr="10888" mi="4" ci="4" mb="0" cb="0"/><line nr="10889" mi="3" ci="3" mb="0" cb="0"/><line nr="10890" mi="3" ci="3" mb="0" cb="0"/><line nr="10893" mi="0" ci="2" mb="0" cb="0"/><line nr="10894" mi="0" ci="6" mb="0" cb="0"/><line nr="10895" mi="0" ci="5" mb="0" cb="0"/><line nr="10896" mi="0" ci="9" mb="0" cb="0"/><line nr="10897" mi="0" ci="3" mb="0" cb="0"/><line nr="10898" mi="0" ci="12" mb="0" cb="2"/><line nr="10899" mi="0" ci="16" mb="0" cb="2"/><line nr="10900" mi="0" ci="1" mb="0" cb="0"/><line nr="10904" mi="4" ci="0" mb="0" cb="0"/><line nr="10905" mi="5" ci="0" mb="0" cb="0"/><line nr="10906" mi="9" ci="0" mb="0" cb="0"/><line nr="10907" mi="3" ci="0" mb="0" cb="0"/><line nr="10908" mi="3" ci="0" mb="0" cb="0"/><line nr="10909" mi="3" ci="0" mb="0" cb="0"/><line nr="10910" mi="12" ci="0" mb="2" cb="0"/><line nr="10911" mi="16" ci="0" mb="2" cb="0"/><line nr="10912" mi="1" ci="0" mb="0" cb="0"/><line nr="10915" mi="2" ci="0" mb="0" cb="0"/><line nr="10916" mi="3" ci="0" mb="0" cb="0"/><line nr="10917" mi="5" ci="0" mb="0" cb="0"/><line nr="10918" mi="9" ci="0" mb="0" cb="0"/><line nr="10919" mi="3" ci="0" mb="0" cb="0"/><line nr="10920" mi="12" ci="0" mb="2" cb="0"/><line nr="10921" mi="16" ci="0" mb="2" cb="0"/><line nr="10922" mi="1" ci="0" mb="0" cb="0"/><line nr="10926" mi="3" ci="0" mb="0" cb="0"/><line nr="10927" mi="5" ci="0" mb="0" cb="0"/><line nr="10928" mi="9" ci="0" mb="0" cb="0"/><line nr="10929" mi="3" ci="0" mb="0" cb="0"/><line nr="10930" mi="3" ci="0" mb="0" cb="0"/><line nr="10931" mi="12" ci="0" mb="2" cb="0"/><line nr="10932" mi="16" ci="0" mb="2" cb="0"/><line nr="10933" mi="1" ci="0" mb="0" cb="0"/><line nr="10936" mi="0" ci="3" mb="0" cb="0"/><line nr="10937" mi="0" ci="13" mb="0" cb="2"/><line nr="10938" mi="0" ci="9" mb="0" cb="0"/><line nr="10939" mi="0" ci="5" mb="0" cb="2"/><line nr="10940" mi="0" ci="6" mb="0" cb="0"/><line nr="10941" mi="0" ci="9" mb="0" cb="2"/><line nr="10942" mi="0" ci="3" mb="0" cb="0"/><line nr="10943" mi="0" ci="9" mb="0" cb="2"/><line nr="10944" mi="0" ci="5" mb="0" cb="0"/><line nr="10945" mi="0" ci="2" mb="0" cb="2"/><line nr="10946" mi="0" ci="8" mb="0" cb="2"/><line nr="10947" mi="0" ci="4" mb="0" cb="0"/><line nr="10951" mi="0" ci="3" mb="0" cb="0"/><line nr="10953" mi="0" ci="4" mb="0" cb="0"/><line nr="10954" mi="0" ci="3" mb="0" cb="0"/><line nr="10955" mi="0" ci="3" mb="0" cb="0"/><line nr="10956" mi="0" ci="3" mb="0" cb="0"/><line nr="10959" mi="0" ci="3" mb="0" cb="0"/><line nr="10960" mi="6" ci="6" mb="0" cb="0"/><line nr="10962" mi="0" ci="5" mb="0" cb="2"/><line nr="10963" mi="0" ci="6" mb="0" cb="0"/><line nr="10964" mi="0" ci="4" mb="0" cb="2"/><line nr="10965" mi="0" ci="13" mb="0" cb="0"/><line nr="10967" mi="0" ci="9" mb="0" cb="0"/><line nr="10970" mi="0" ci="5" mb="0" cb="0"/><line nr="10972" mi="0" ci="3" mb="0" cb="2"/><line nr="10973" mi="0" ci="5" mb="0" cb="0"/><line nr="10974" mi="0" ci="11" mb="0" cb="4"/><line nr="10975" mi="0" ci="6" mb="0" cb="2"/><line nr="10977" mi="0" ci="7" mb="0" cb="2"/><line nr="10978" mi="0" ci="11" mb="0" cb="4"/><line nr="10979" mi="0" ci="2" mb="0" cb="0"/><line nr="10985" mi="13" ci="0" mb="2" cb="0"/><line nr="10986" mi="9" ci="0" mb="0" cb="0"/><line nr="10987" mi="6" ci="0" mb="0" cb="0"/><line nr="10988" mi="3" ci="0" mb="0" cb="0"/><line nr="10993" mi="0" ci="9" mb="0" cb="2"/><line nr="10994" mi="0" ci="7" mb="0" cb="2"/><line nr="10995" mi="0" ci="7" mb="0" cb="2"/><line nr="10996" mi="0" ci="7" mb="0" cb="0"/><line nr="10998" mi="0" ci="2" mb="0" cb="0"/><line nr="11001" mi="5" ci="5" mb="0" cb="0"/><line nr="11003" mi="3" ci="3" mb="0" cb="0"/><line nr="11004" mi="4" ci="4" mb="0" cb="0"/><line nr="11008" mi="1" ci="3" mb="1" cb="1"/><line nr="11009" mi="0" ci="6" mb="0" cb="2"/><line nr="11010" mi="0" ci="12" mb="0" cb="0"/><line nr="11011" mi="0" ci="3" mb="1" cb="1"/><line nr="11012" mi="0" ci="5" mb="0" cb="0"/><line nr="11013" mi="0" ci="8" mb="0" cb="2"/><line nr="11014" mi="0" ci="8" mb="0" cb="0"/><line nr="11016" mi="0" ci="7" mb="0" cb="2"/><line nr="11017" mi="0" ci="5" mb="0" cb="0"/><line nr="11018" mi="0" ci="6" mb="1" cb="1"/><line nr="11019" mi="2" ci="7" mb="1" cb="1"/><line nr="11020" mi="0" ci="8" mb="1" cb="1"/><line nr="11021" mi="0" ci="1" mb="0" cb="0"/><line nr="11024" mi="6" ci="0" mb="0" cb="0"/><line nr="11025" mi="1" ci="0" mb="0" cb="0"/><line nr="11027" mi="1" ci="0" mb="0" cb="0"/><line nr="11028" mi="0" ci="12" mb="0" cb="2"/><line nr="11030" mi="0" ci="1" mb="0" cb="0"/><line nr="11034" mi="0" ci="3" mb="0" cb="0"/><line nr="11035" mi="0" ci="3" mb="0" cb="0"/><line nr="11036" mi="0" ci="3" mb="1" cb="1"/><line nr="11037" mi="0" ci="5" mb="0" cb="0"/><line nr="11038" mi="0" ci="3" mb="0" cb="0"/><line nr="11040" mi="0" ci="7" mb="0" cb="2"/><line nr="11041" mi="0" ci="7" mb="0" cb="2"/><line nr="11042" mi="0" ci="7" mb="0" cb="2"/><line nr="11043" mi="0" ci="8" mb="1" cb="1"/><line nr="11044" mi="4" ci="0" mb="0" cb="0"/><line nr="11046" mi="0" ci="8" mb="1" cb="1"/><line nr="11047" mi="6" ci="0" mb="0" cb="0"/><line nr="11049" mi="0" ci="8" mb="1" cb="1"/><line nr="11050" mi="6" ci="0" mb="0" cb="0"/><line nr="11052" mi="0" ci="8" mb="0" cb="2"/><line nr="11053" mi="0" ci="6" mb="0" cb="0"/><line nr="11058" mi="0" ci="7" mb="0" cb="2"/><line nr="11059" mi="0" ci="4" mb="0" cb="2"/><line nr="11060" mi="0" ci="4" mb="0" cb="0"/><line nr="11061" mi="0" ci="5" mb="0" cb="0"/><line nr="11062" mi="0" ci="6" mb="0" cb="0"/><line nr="11065" mi="0" ci="3" mb="0" cb="0"/><line nr="11066" mi="0" ci="2" mb="0" cb="0"/><line nr="11067" mi="0" ci="4" mb="0" cb="0"/><line nr="11068" mi="0" ci="5" mb="0" cb="0"/><line nr="11069" mi="0" ci="9" mb="0" cb="2"/><line nr="11070" mi="0" ci="8" mb="0" cb="0"/><line nr="11072" mi="0" ci="8" mb="0" cb="0"/><line nr="11077" mi="1" ci="0" mb="0" cb="0"/><line nr="11081" mi="1" ci="0" mb="0" cb="0"/><line nr="11084" mi="0" ci="3" mb="0" cb="0"/><line nr="11085" mi="0" ci="7" mb="0" cb="2"/><line nr="11087" mi="0" ci="5" mb="0" cb="0"/><line nr="11089" mi="0" ci="5" mb="0" cb="2"/><line nr="11090" mi="0" ci="11" mb="0" cb="0"/><line nr="11091" mi="0" ci="2" mb="75" cb="2"/><line nr="11092" mi="4" ci="0" mb="0" cb="0"/><line nr="11093" mi="4" ci="0" mb="0" cb="0"/><line nr="11094" mi="4" ci="0" mb="0" cb="0"/><line nr="11095" mi="4" ci="0" mb="0" cb="0"/><line nr="11096" mi="4" ci="0" mb="0" cb="0"/><line nr="11097" mi="4" ci="0" mb="0" cb="0"/><line nr="11098" mi="4" ci="0" mb="0" cb="0"/><line nr="11099" mi="4" ci="0" mb="0" cb="0"/><line nr="11100" mi="4" ci="0" mb="0" cb="0"/><line nr="11101" mi="4" ci="0" mb="0" cb="0"/><line nr="11102" mi="4" ci="0" mb="0" cb="0"/><line nr="11103" mi="4" ci="0" mb="0" cb="0"/><line nr="11104" mi="4" ci="0" mb="0" cb="0"/><line nr="11105" mi="4" ci="0" mb="0" cb="0"/><line nr="11106" mi="4" ci="0" mb="0" cb="0"/><line nr="11107" mi="4" ci="0" mb="0" cb="0"/><line nr="11108" mi="4" ci="0" mb="0" cb="0"/><line nr="11109" mi="4" ci="0" mb="0" cb="0"/><line nr="11110" mi="4" ci="0" mb="0" cb="0"/><line nr="11111" mi="4" ci="0" mb="0" cb="0"/><line nr="11112" mi="4" ci="0" mb="0" cb="0"/><line nr="11113" mi="4" ci="0" mb="0" cb="0"/><line nr="11114" mi="4" ci="0" mb="0" cb="0"/><line nr="11115" mi="4" ci="0" mb="0" cb="0"/><line nr="11116" mi="4" ci="0" mb="0" cb="0"/><line nr="11117" mi="4" ci="0" mb="0" cb="0"/><line nr="11118" mi="4" ci="0" mb="0" cb="0"/><line nr="11119" mi="4" ci="0" mb="0" cb="0"/><line nr="11120" mi="4" ci="0" mb="0" cb="0"/><line nr="11121" mi="4" ci="0" mb="0" cb="0"/><line nr="11122" mi="4" ci="0" mb="0" cb="0"/><line nr="11123" mi="4" ci="0" mb="0" cb="0"/><line nr="11124" mi="4" ci="0" mb="0" cb="0"/><line nr="11125" mi="4" ci="0" mb="0" cb="0"/><line nr="11126" mi="4" ci="0" mb="0" cb="0"/><line nr="11127" mi="4" ci="0" mb="0" cb="0"/><line nr="11128" mi="4" ci="0" mb="0" cb="0"/><line nr="11129" mi="4" ci="0" mb="0" cb="0"/><line nr="11130" mi="4" ci="0" mb="0" cb="0"/><line nr="11131" mi="4" ci="0" mb="0" cb="0"/><line nr="11132" mi="4" ci="0" mb="0" cb="0"/><line nr="11133" mi="0" ci="4" mb="0" cb="0"/><line nr="11134" mi="4" ci="0" mb="0" cb="0"/><line nr="11135" mi="4" ci="0" mb="0" cb="0"/><line nr="11136" mi="4" ci="0" mb="0" cb="0"/><line nr="11137" mi="4" ci="0" mb="0" cb="0"/><line nr="11138" mi="4" ci="0" mb="0" cb="0"/><line nr="11139" mi="4" ci="0" mb="0" cb="0"/><line nr="11140" mi="4" ci="0" mb="0" cb="0"/><line nr="11141" mi="4" ci="0" mb="0" cb="0"/><line nr="11142" mi="4" ci="0" mb="0" cb="0"/><line nr="11143" mi="4" ci="0" mb="0" cb="0"/><line nr="11144" mi="4" ci="0" mb="0" cb="0"/><line nr="11145" mi="4" ci="0" mb="0" cb="0"/><line nr="11146" mi="4" ci="0" mb="0" cb="0"/><line nr="11147" mi="4" ci="0" mb="0" cb="0"/><line nr="11148" mi="4" ci="0" mb="0" cb="0"/><line nr="11149" mi="4" ci="0" mb="0" cb="0"/><line nr="11150" mi="4" ci="0" mb="0" cb="0"/><line nr="11151" mi="4" ci="0" mb="0" cb="0"/><line nr="11152" mi="4" ci="0" mb="0" cb="0"/><line nr="11153" mi="4" ci="0" mb="0" cb="0"/><line nr="11154" mi="4" ci="0" mb="0" cb="0"/><line nr="11155" mi="4" ci="0" mb="0" cb="0"/><line nr="11156" mi="4" ci="0" mb="0" cb="0"/><line nr="11157" mi="0" ci="4" mb="0" cb="0"/><line nr="11158" mi="4" ci="0" mb="0" cb="0"/><line nr="11159" mi="4" ci="0" mb="0" cb="0"/><line nr="11160" mi="4" ci="0" mb="0" cb="0"/><line nr="11161" mi="4" ci="0" mb="0" cb="0"/><line nr="11162" mi="4" ci="0" mb="0" cb="0"/><line nr="11163" mi="4" ci="0" mb="0" cb="0"/><line nr="11164" mi="4" ci="0" mb="0" cb="0"/><line nr="11165" mi="4" ci="0" mb="0" cb="0"/><line nr="11166" mi="4" ci="0" mb="0" cb="0"/><line nr="11167" mi="3" ci="0" mb="0" cb="0"/><line nr="11170" mi="0" ci="3" mb="0" cb="0"/><line nr="11171" mi="0" ci="2" mb="1" cb="1"/><line nr="11172" mi="1" ci="1" mb="0" cb="0"/><line nr="11174" mi="0" ci="3" mb="0" cb="0"/><line nr="11175" mi="0" ci="1" mb="0" cb="0"/><line nr="11178" mi="0" ci="5" mb="0" cb="0"/><line nr="11179" mi="0" ci="5" mb="0" cb="2"/><line nr="11180" mi="0" ci="11" mb="0" cb="2"/><line nr="11181" mi="0" ci="4" mb="0" cb="0"/><line nr="11183" mi="0" ci="16" mb="0" cb="0"/><line nr="11184" mi="0" ci="1" mb="0" cb="0"/><line nr="11186" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7945" covered="19988"/><counter type="BRANCH" missed="1717" covered="2332"/><counter type="LINE" missed="1496" covered="4462"/><counter type="COMPLEXITY" missed="1312" covered="1482"/><counter type="METHOD" missed="56" covered="629"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ASTResource.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="8" ci="0" mb="2" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="2" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="10"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTMarkerAnnotation.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTArrayDimsAndInits.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JJTJavaParserState.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="1" cb="1"/><line nr="53" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="12" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="12" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="12" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="149"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="19" covered="35"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTLocalVariableDeclaration.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="2"/><line nr="30" mi="0" ci="5" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="2"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="2"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="1" cb="1"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="98"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaParserVisitorAdapter.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="384" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="408" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="5" mb="0" cb="0"/><line nr="439" mi="0" ci="5" mb="0" cb="0"/><line nr="443" mi="0" ci="5" mb="0" cb="0"/><line nr="447" mi="0" ci="5" mb="0" cb="0"/><line nr="451" mi="0" ci="5" mb="0" cb="0"/><line nr="455" mi="0" ci="5" mb="0" cb="0"/><line nr="459" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="568"/><counter type="LINE" missed="1" covered="114"/><counter type="COMPLEXITY" missed="1" covered="114"/><counter type="METHOD" missed="1" covered="114"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTTypeArgument.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractJavaNode.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="2" cb="2"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="7" ci="4" mb="5" cb="1"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="1" cb="1"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="9" mb="0" cb="2"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="106"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTBlockStatement.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTTypeBound.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTTypeParameter.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTName.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTArgumentList.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTWildcardBounds.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTEnumConstant.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTConditionalAndExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAnnotation.java"><line nr="16" mi="0" ci="20" mb="0" cb="0"/><line nr="19" mi="0" ci="13" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="2"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="2"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="1" cb="1"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="4"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="2"/><line nr="50" mi="0" ci="30" mb="2" cb="12"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="158"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTExtendsList.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTStatement.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTMemberValueArrayInitializer.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTTypeDeclaration.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="2"/><line nr="22" mi="0" ci="5" mb="0" cb="2"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="2"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DummyJavaNode.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTConditionalOrExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTBreakStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTInitializer.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTPreDecrementExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTVariableDeclarator.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaParserConstants.java"><line nr="256" mi="0" ci="516" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="516"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTMemberSelector.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTPreIncrementExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTUnaryExpressionNotPlusMinus.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTVariableInitializer.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTLabeledStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractJavaAccessTypeNode.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTEnumBody.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTImplementsList.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTPackageDeclaration.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTCatchStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTNullLiteral.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTRelationalExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTForInit.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractJavaTypeNode.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTPrimaryExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTShiftExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTLiteral.java"><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="2" cb="4"/><line nr="46" mi="0" ci="8" mb="0" cb="4"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="2" cb="4"/><line nr="60" mi="0" ci="8" mb="1" cb="3"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="2" cb="4"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="1" cb="3"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="2" cb="4"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="3" ci="9" mb="4" cb="4"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="1" cb="3"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="10" mb="1" cb="5"/><line nr="131" mi="0" ci="10" mb="0" cb="0"/><line nr="132" mi="0" ci="11" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="248"/><counter type="BRANCH" missed="16" covered="48"/><counter type="LINE" missed="1" covered="60"/><counter type="COMPLEXITY" missed="15" covered="33"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTClassOrInterfaceBodyDeclaration.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="2"/><line nr="27" mi="0" ci="5" mb="0" cb="2"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTCompilationUnit.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTResourceSpecification.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTMethodReference.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTUnaryExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTRUNSIGNEDSHIFT.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAnnotationTypeBody.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTBooleanLiteral.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAllocationExpression.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParseException.java"><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="2"/><line nr="95" mi="0" ci="6" mb="0" cb="2"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="2"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="11" mb="1" cb="1"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="9" ci="2" mb="1" cb="1"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="11" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="14" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="19" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="1" cb="1"/><line nr="123" mi="14" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="13" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="5" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="2"/><line nr="145" mi="0" ci="4" mb="9" cb="1"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="10" mb="2" cb="2"/><line nr="175" mi="11" ci="0" mb="0" cb="0"/><line nr="176" mi="18" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="257"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="25" covered="41"/><counter type="COMPLEXITY" missed="16" covered="9"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTReturnStatement.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Comment.java"><line nr="17" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="2"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="2"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="2"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="27" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="88"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTDoStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTPrimarySuffix.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="1" cb="1"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTContinueStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTLambdaExpression.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAssertStatement.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAndExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTIfStatement.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTForStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentUtil.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="2" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="4" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="2" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="2" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="2" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="2" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="2"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="16" ci="0" mb="2" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="2" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="14" ci="0" mb="4" cb="0"/><line nr="103" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="2" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="2" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="2" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="2" cb="0"/><line nr="138" mi="6" ci="0" mb="2" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="2" cb="0"/><line nr="150" mi="6" ci="0" mb="2" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="7" ci="0" mb="2" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="167" mi="10" ci="0" mb="2" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="274" covered="58"/><counter type="BRANCH" missed="44" covered="8"/><counter type="LINE" missed="63" covered="16"/><counter type="COMPLEXITY" missed="28" covered="6"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTForUpdate.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTClassOrInterfaceBody.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTStatementExpressionList.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTArguments.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="2"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTReferenceType.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTType.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="2"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="13" mb="2" cb="4"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="15" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="15" covered="56"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavadocElement.java"><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="11"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTEnumDeclaration.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTImportDeclaration.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="2"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="66"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTPostfixExpression.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTClassOrInterfaceDeclaration.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="12" mb="0" cb="4"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTMemberValue.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTSynchronizedStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTPrimitiveType.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="18" covered="18"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiLineComment.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTMethodDeclaration.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="1" cb="1"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="4"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="1" cb="1"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="1" cb="1"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="1" cb="1"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="127"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTBlock.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTExclusiveOrExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAdditiveExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTMemberValuePair.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTTypeParameters.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FormalComment.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaParserTokenManager.java"><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="4" cb="8"/><line nr="23" mi="0" ci="12" mb="1" cb="3"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="2"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="2"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="2"/><line nr="36" mi="0" ci="4" mb="1" cb="1"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="1" cb="1"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="2"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="1" cb="1"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="1" cb="1"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="1" cb="1"/><line nr="76" mi="0" ci="4" mb="1" cb="1"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="1" cb="1"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="2" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="1" cb="1"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="1" cb="1"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="1" cb="1"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="2" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="2" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="12" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="2" cb="46"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="7" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="28"/><line nr="283" mi="0" ci="6" mb="1" cb="1"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="0" cb="2"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="2"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="6" mb="0" cb="2"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="7" mb="0" cb="0"/><line nr="301" mi="0" ci="6" mb="0" cb="2"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="0" cb="2"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="6" mb="0" cb="2"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="0" cb="2"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="2"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="2"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="0" cb="2"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="2"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="6" mb="0" cb="2"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="6" mb="0" cb="2"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="6" mb="0" cb="2"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="2"/><line nr="331" mi="0" ci="5" mb="0" cb="0"/><line nr="332" mi="0" ci="6" mb="0" cb="2"/><line nr="333" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="2"/><line nr="335" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="2"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="6" mb="0" cb="2"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="7" mb="0" cb="0"/><line nr="347" mi="0" ci="7" mb="0" cb="0"/><line nr="349" mi="0" ci="7" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="0"/><line nr="353" mi="0" ci="7" mb="0" cb="0"/><line nr="355" mi="0" ci="6" mb="0" cb="2"/><line nr="356" mi="0" ci="6" mb="0" cb="0"/><line nr="359" mi="0" ci="7" mb="0" cb="0"/><line nr="361" mi="0" ci="7" mb="0" cb="0"/><line nr="363" mi="0" ci="7" mb="0" cb="0"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="367" mi="0" ci="7" mb="0" cb="0"/><line nr="369" mi="0" ci="6" mb="0" cb="2"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="7" mb="0" cb="0"/><line nr="376" mi="0" ci="7" mb="0" cb="0"/><line nr="378" mi="0" ci="7" mb="0" cb="0"/><line nr="380" mi="0" ci="7" mb="0" cb="0"/><line nr="382" mi="0" ci="7" mb="0" cb="0"/><line nr="384" mi="0" ci="7" mb="0" cb="0"/><line nr="386" mi="0" ci="7" mb="0" cb="0"/><line nr="388" mi="0" ci="6" mb="1" cb="1"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="394" mi="0" ci="7" mb="0" cb="0"/><line nr="398" mi="0" ci="14" mb="0" cb="2"/><line nr="399" mi="0" ci="7" mb="0" cb="0"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="401" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="7" ci="0" mb="0" cb="0"/><line nr="403" mi="2" ci="0" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="1" cb="20"/><line nr="408" mi="0" ci="6" mb="0" cb="2"/><line nr="409" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="6" mb="0" cb="2"/><line nr="413" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="6" mb="1" cb="1"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="6" mb="1" cb="1"/><line nr="420" mi="0" ci="3" mb="0" cb="0"/><line nr="421" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="7" mb="0" cb="0"/><line nr="425" mi="6" ci="0" mb="2" cb="0"/><line nr="426" mi="5" ci="0" mb="0" cb="0"/><line nr="429" mi="0" ci="7" mb="0" cb="0"/><line nr="431" mi="0" ci="7" mb="0" cb="0"/><line nr="433" mi="0" ci="7" mb="0" cb="0"/><line nr="435" mi="0" ci="7" mb="0" cb="0"/><line nr="437" mi="0" ci="7" mb="0" cb="0"/><line nr="439" mi="0" ci="7" mb="0" cb="0"/><line nr="441" mi="0" ci="7" mb="0" cb="0"/><line nr="443" mi="0" ci="7" mb="0" cb="0"/><line nr="445" mi="0" ci="7" mb="0" cb="0"/><line nr="447" mi="0" ci="7" mb="0" cb="0"/><line nr="449" mi="0" ci="6" mb="0" cb="2"/><line nr="450" mi="0" ci="6" mb="0" cb="0"/><line nr="451" mi="0" ci="7" mb="0" cb="0"/><line nr="453" mi="0" ci="7" mb="0" cb="0"/><line nr="455" mi="0" ci="6" mb="0" cb="2"/><line nr="457" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="3" mb="0" cb="0"/><line nr="460" mi="0" ci="7" mb="0" cb="0"/><line nr="462" mi="0" ci="7" mb="0" cb="0"/><line nr="464" mi="0" ci="6" mb="0" cb="2"/><line nr="465" mi="0" ci="6" mb="0" cb="0"/><line nr="468" mi="0" ci="6" mb="1" cb="1"/><line nr="469" mi="0" ci="6" mb="0" cb="0"/><line nr="474" mi="0" ci="7" mb="0" cb="0"/><line nr="478" mi="0" ci="14" mb="0" cb="2"/><line nr="479" mi="0" ci="7" mb="0" cb="0"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="1" ci="0" mb="0" cb="0"/><line nr="482" mi="7" ci="0" mb="0" cb="0"/><line nr="483" mi="2" ci="0" mb="0" cb="0"/><line nr="484" mi="0" ci="1" mb="0" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="18"/><line nr="488" mi="0" ci="6" mb="1" cb="1"/><line nr="489" mi="0" ci="5" mb="0" cb="0"/><line nr="492" mi="0" ci="7" mb="0" cb="0"/><line nr="494" mi="0" ci="7" mb="0" cb="0"/><line nr="496" mi="0" ci="7" mb="0" cb="0"/><line nr="498" mi="0" ci="6" mb="0" cb="2"/><line nr="499" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="0" ci="6" mb="0" cb="2"/><line nr="503" mi="0" ci="6" mb="0" cb="0"/><line nr="504" mi="0" ci="6" mb="0" cb="2"/><line nr="505" mi="0" ci="6" mb="0" cb="0"/><line nr="506" mi="0" ci="6" mb="0" cb="2"/><line nr="507" mi="0" ci="6" mb="0" cb="0"/><line nr="508" mi="0" ci="6" mb="0" cb="2"/><line nr="509" mi="0" ci="6" mb="0" cb="0"/><line nr="510" mi="0" ci="7" mb="0" cb="0"/><line nr="512" mi="0" ci="6" mb="1" cb="1"/><line nr="513" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="7" mb="0" cb="0"/><line nr="518" mi="0" ci="7" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="2"/><line nr="521" mi="0" ci="6" mb="0" cb="0"/><line nr="522" mi="0" ci="7" mb="0" cb="0"/><line nr="524" mi="0" ci="7" mb="0" cb="0"/><line nr="526" mi="0" ci="6" mb="1" cb="1"/><line nr="527" mi="6" ci="0" mb="0" cb="0"/><line nr="528" mi="0" ci="7" mb="0" cb="0"/><line nr="530" mi="0" ci="6" mb="0" cb="2"/><line nr="531" mi="0" ci="6" mb="0" cb="0"/><line nr="532" mi="0" ci="7" mb="0" cb="0"/><line nr="534" mi="0" ci="6" mb="0" cb="2"/><line nr="535" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="7" mb="0" cb="0"/><line nr="538" mi="0" ci="7" mb="0" cb="0"/><line nr="540" mi="0" ci="7" mb="0" cb="0"/><line nr="542" mi="0" ci="7" mb="0" cb="0"/><line nr="546" mi="0" ci="7" mb="0" cb="0"/><line nr="550" mi="0" ci="14" mb="0" cb="2"/><line nr="551" mi="0" ci="7" mb="0" cb="0"/><line nr="552" mi="0" ci="5" mb="0" cb="0"/><line nr="553" mi="1" ci="0" mb="0" cb="0"/><line nr="554" mi="7" ci="0" mb="0" cb="0"/><line nr="555" mi="2" ci="0" mb="0" cb="0"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="15"/><line nr="560" mi="0" ci="5" mb="0" cb="0"/><line nr="562" mi="0" ci="5" mb="0" cb="0"/><line nr="564" mi="0" ci="6" mb="0" cb="2"/><line nr="565" mi="0" ci="6" mb="0" cb="0"/><line nr="566" mi="0" ci="6" mb="0" cb="2"/><line nr="567" mi="0" ci="6" mb="0" cb="0"/><line nr="568" mi="0" ci="5" mb="0" cb="0"/><line nr="570" mi="0" ci="6" mb="0" cb="2"/><line nr="571" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="0" ci="5" mb="0" cb="0"/><line nr="574" mi="0" ci="5" mb="0" cb="0"/><line nr="576" mi="0" ci="6" mb="1" cb="1"/><line nr="577" mi="0" ci="6" mb="0" cb="0"/><line nr="580" mi="0" ci="6" mb="0" cb="2"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="0"/><line nr="585" mi="0" ci="5" mb="0" cb="0"/><line nr="587" mi="0" ci="5" mb="0" cb="0"/><line nr="589" mi="0" ci="6" mb="0" cb="2"/><line nr="590" mi="0" ci="6" mb="0" cb="0"/><line nr="591" mi="0" ci="5" mb="0" cb="0"/><line nr="593" mi="0" ci="6" mb="0" cb="2"/><line nr="594" mi="0" ci="6" mb="0" cb="0"/><line nr="595" mi="0" ci="5" mb="0" cb="0"/><line nr="597" mi="0" ci="6" mb="0" cb="2"/><line nr="598" mi="0" ci="6" mb="0" cb="0"/><line nr="599" mi="0" ci="6" mb="0" cb="2"/><line nr="600" mi="0" ci="6" mb="0" cb="0"/><line nr="601" mi="0" ci="6" mb="0" cb="2"/><line nr="602" mi="0" ci="6" mb="0" cb="0"/><line nr="603" mi="0" ci="5" mb="0" cb="0"/><line nr="605" mi="0" ci="5" mb="0" cb="0"/><line nr="607" mi="0" ci="5" mb="0" cb="0"/><line nr="609" mi="0" ci="6" mb="1" cb="1"/><line nr="611" mi="0" ci="3" mb="0" cb="0"/><line nr="612" mi="0" ci="3" mb="0" cb="0"/><line nr="614" mi="0" ci="5" mb="0" cb="0"/><line nr="618" mi="0" ci="7" mb="0" cb="0"/><line nr="622" mi="0" ci="8" mb="0" cb="2"/><line nr="623" mi="0" ci="7" mb="0" cb="0"/><line nr="624" mi="0" ci="5" mb="0" cb="0"/><line nr="625" mi="1" ci="0" mb="0" cb="0"/><line nr="626" mi="7" ci="0" mb="0" cb="0"/><line nr="627" mi="2" ci="0" mb="0" cb="0"/><line nr="628" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="15"/><line nr="632" mi="0" ci="5" mb="0" cb="0"/><line nr="634" mi="0" ci="6" mb="0" cb="2"/><line nr="635" mi="0" ci="6" mb="0" cb="0"/><line nr="636" mi="0" ci="6" mb="0" cb="2"/><line nr="637" mi="0" ci="6" mb="0" cb="0"/><line nr="638" mi="0" ci="5" mb="0" cb="0"/><line nr="640" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="6" mb="0" cb="2"/><line nr="643" mi="0" ci="6" mb="0" cb="0"/><line nr="644" mi="0" ci="6" mb="0" cb="2"/><line nr="645" mi="0" ci="6" mb="0" cb="0"/><line nr="648" mi="0" ci="5" mb="0" cb="0"/><line nr="650" mi="0" ci="5" mb="0" cb="0"/><line nr="652" mi="0" ci="6" mb="1" cb="1"/><line nr="653" mi="0" ci="6" mb="0" cb="0"/><line nr="656" mi="0" ci="5" mb="0" cb="0"/><line nr="658" mi="0" ci="5" mb="0" cb="0"/><line nr="660" mi="0" ci="5" mb="0" cb="0"/><line nr="662" mi="0" ci="6" mb="0" cb="2"/><line nr="663" mi="0" ci="6" mb="0" cb="0"/><line nr="664" mi="0" ci="5" mb="0" cb="0"/><line nr="666" mi="0" ci="5" mb="0" cb="0"/><line nr="668" mi="0" ci="6" mb="0" cb="2"/><line nr="669" mi="0" ci="6" mb="0" cb="0"/><line nr="672" mi="0" ci="6" mb="0" cb="2"/><line nr="673" mi="0" ci="6" mb="0" cb="0"/><line nr="674" mi="0" ci="5" mb="0" cb="0"/><line nr="678" mi="0" ci="7" mb="0" cb="0"/><line nr="682" mi="0" ci="8" mb="0" cb="2"/><line nr="683" mi="0" ci="7" mb="0" cb="0"/><line nr="684" mi="0" ci="5" mb="0" cb="0"/><line nr="685" mi="1" ci="0" mb="0" cb="0"/><line nr="686" mi="7" ci="0" mb="0" cb="0"/><line nr="687" mi="2" ci="0" mb="0" cb="0"/><line nr="688" mi="0" ci="1" mb="0" cb="0"/><line nr="689" mi="0" ci="3" mb="0" cb="12"/><line nr="692" mi="0" ci="5" mb="0" cb="0"/><line nr="694" mi="0" ci="5" mb="0" cb="0"/><line nr="696" mi="0" ci="6" mb="0" cb="2"/><line nr="697" mi="0" ci="6" mb="0" cb="0"/><line nr="698" mi="0" ci="6" mb="0" cb="2"/><line nr="699" mi="0" ci="6" mb="0" cb="0"/><line nr="700" mi="0" ci="5" mb="0" cb="0"/><line nr="702" mi="0" ci="5" mb="0" cb="0"/><line nr="704" mi="0" ci="5" mb="0" cb="0"/><line nr="706" mi="0" ci="6" mb="1" cb="1"/><line nr="707" mi="0" ci="6" mb="0" cb="0"/><line nr="710" mi="0" ci="5" mb="0" cb="0"/><line nr="712" mi="0" ci="6" mb="1" cb="1"/><line nr="713" mi="0" ci="6" mb="0" cb="0"/><line nr="716" mi="0" ci="6" mb="0" cb="2"/><line nr="717" mi="0" ci="6" mb="0" cb="0"/><line nr="718" mi="0" ci="5" mb="0" cb="0"/><line nr="720" mi="0" ci="5" mb="0" cb="0"/><line nr="722" mi="0" ci="6" mb="1" cb="1"/><line nr="723" mi="0" ci="6" mb="0" cb="0"/><line nr="728" mi="0" ci="7" mb="0" cb="0"/><line nr="732" mi="0" ci="8" mb="0" cb="2"/><line nr="733" mi="0" ci="7" mb="0" cb="0"/><line nr="734" mi="0" ci="5" mb="0" cb="0"/><line nr="735" mi="1" ci="0" mb="0" cb="0"/><line nr="736" mi="7" ci="0" mb="0" cb="0"/><line nr="737" mi="2" ci="0" mb="0" cb="0"/><line nr="738" mi="0" ci="1" mb="0" cb="0"/><line nr="739" mi="0" ci="3" mb="1" cb="5"/><line nr="742" mi="0" ci="5" mb="0" cb="0"/><line nr="744" mi="0" ci="6" mb="0" cb="2"/><line nr="745" mi="0" ci="6" mb="0" cb="0"/><line nr="746" mi="0" ci="6" mb="0" cb="2"/><line nr="747" mi="0" ci="6" mb="0" cb="0"/><line nr="748" mi="0" ci="5" mb="0" cb="0"/><line nr="750" mi="0" ci="5" mb="0" cb="0"/><line nr="752" mi="0" ci="6" mb="1" cb="1"/><line nr="753" mi="0" ci="6" mb="0" cb="0"/><line nr="756" mi="0" ci="6" mb="1" cb="1"/><line nr="757" mi="0" ci="6" mb="0" cb="0"/><line nr="762" mi="7" ci="0" mb="0" cb="0"/><line nr="766" mi="0" ci="8" mb="1" cb="1"/><line nr="767" mi="7" ci="0" mb="0" cb="0"/><line nr="768" mi="0" ci="5" mb="0" cb="0"/><line nr="769" mi="1" ci="0" mb="0" cb="0"/><line nr="770" mi="7" ci="0" mb="0" cb="0"/><line nr="771" mi="2" ci="0" mb="0" cb="0"/><line nr="772" mi="0" ci="1" mb="0" cb="0"/><line nr="773" mi="0" ci="3" mb="0" cb="6"/><line nr="776" mi="0" ci="6" mb="1" cb="1"/><line nr="777" mi="0" ci="6" mb="0" cb="0"/><line nr="780" mi="0" ci="6" mb="1" cb="1"/><line nr="781" mi="0" ci="6" mb="0" cb="0"/><line nr="784" mi="0" ci="5" mb="0" cb="0"/><line nr="786" mi="0" ci="5" mb="0" cb="0"/><line nr="788" mi="0" ci="6" mb="0" cb="2"/><line nr="789" mi="0" ci="6" mb="0" cb="0"/><line nr="790" mi="0" ci="5" mb="0" cb="0"/><line nr="794" mi="0" ci="7" mb="0" cb="0"/><line nr="798" mi="0" ci="8" mb="1" cb="1"/><line nr="799" mi="7" ci="0" mb="0" cb="0"/><line nr="800" mi="0" ci="5" mb="0" cb="0"/><line nr="801" mi="1" ci="0" mb="0" cb="0"/><line nr="802" mi="7" ci="0" mb="0" cb="0"/><line nr="803" mi="2" ci="0" mb="0" cb="0"/><line nr="804" mi="0" ci="1" mb="0" cb="0"/><line nr="805" mi="0" ci="3" mb="0" cb="4"/><line nr="808" mi="0" ci="6" mb="1" cb="1"/><line nr="809" mi="0" ci="6" mb="0" cb="0"/><line nr="812" mi="0" ci="6" mb="1" cb="1"/><line nr="813" mi="0" ci="6" mb="0" cb="0"/><line nr="816" mi="0" ci="5" mb="0" cb="0"/><line nr="820" mi="0" ci="7" mb="0" cb="0"/><line nr="824" mi="0" ci="8" mb="1" cb="1"/><line nr="825" mi="7" ci="0" mb="0" cb="0"/><line nr="826" mi="0" ci="5" mb="0" cb="0"/><line nr="827" mi="1" ci="0" mb="0" cb="0"/><line nr="828" mi="7" ci="0" mb="0" cb="0"/><line nr="829" mi="2" ci="0" mb="0" cb="0"/><line nr="830" mi="0" ci="1" mb="0" cb="0"/><line nr="831" mi="0" ci="3" mb="1" cb="1"/><line nr="834" mi="0" ci="5" mb="0" cb="0"/><line nr="838" mi="7" ci="0" mb="0" cb="0"/><line nr="842" mi="0" ci="8" mb="1" cb="1"/><line nr="843" mi="7" ci="0" mb="0" cb="0"/><line nr="844" mi="0" ci="5" mb="0" cb="0"/><line nr="845" mi="1" ci="0" mb="0" cb="0"/><line nr="846" mi="7" ci="0" mb="0" cb="0"/><line nr="847" mi="2" ci="0" mb="0" cb="0"/><line nr="848" mi="0" ci="1" mb="0" cb="0"/><line nr="849" mi="0" ci="3" mb="1" cb="1"/><line nr="852" mi="0" ci="6" mb="1" cb="1"/><line nr="853" mi="0" ci="6" mb="0" cb="0"/><line nr="858" mi="7" ci="0" mb="0" cb="0"/><line nr="862" mi="0" ci="3" mb="0" cb="0"/><line nr="863" mi="0" ci="3" mb="0" cb="0"/><line nr="864" mi="0" ci="5" mb="0" cb="0"/><line nr="865" mi="5" ci="1" mb="0" cb="0"/><line nr="866" mi="0" ci="7" mb="0" cb="0"/><line nr="868" mi="0" ci="19" mb="0" cb="0"/><line nr="871" mi="0" ci="19" mb="0" cb="0"/><line nr="874" mi="0" ci="19" mb="0" cb="0"/><line nr="877" mi="0" ci="19" mb="0" cb="0"/><line nr="880" mi="0" ci="19" mb="0" cb="0"/><line nr="883" mi="0" ci="19" mb="0" cb="0"/><line nr="886" mi="0" ci="19" mb="0" cb="0"/><line nr="889" mi="0" ci="19" mb="0" cb="0"/><line nr="892" mi="0" ci="19" mb="0" cb="0"/><line nr="895" mi="0" ci="19" mb="0" cb="0"/><line nr="898" mi="0" ci="19" mb="0" cb="0"/><line nr="901" mi="0" ci="19" mb="0" cb="0"/><line nr="904" mi="0" ci="19" mb="0" cb="0"/><line nr="907" mi="0" ci="19" mb="0" cb="0"/><line nr="910" mi="0" ci="19" mb="0" cb="0"/><line nr="913" mi="0" ci="19" mb="0" cb="0"/><line nr="916" mi="0" ci="19" mb="0" cb="0"/><line nr="919" mi="0" ci="19" mb="0" cb="0"/><line nr="922" mi="0" ci="19" mb="0" cb="0"/><line nr="925" mi="0" ci="19" mb="0" cb="0"/><line nr="928" mi="0" ci="19" mb="0" cb="0"/><line nr="931" mi="0" ci="19" mb="0" cb="0"/><line nr="934" mi="0" ci="19" mb="0" cb="0"/><line nr="937" mi="0" ci="19" mb="0" cb="0"/><line nr="940" mi="0" ci="19" mb="0" cb="0"/><line nr="943" mi="0" ci="19" mb="0" cb="0"/><line nr="946" mi="0" ci="19" mb="0" cb="0"/><line nr="949" mi="0" ci="19" mb="0" cb="0"/><line nr="952" mi="0" ci="19" mb="0" cb="0"/><line nr="955" mi="0" ci="19" mb="0" cb="0"/><line nr="958" mi="0" ci="19" mb="0" cb="0"/><line nr="961" mi="0" ci="19" mb="0" cb="0"/><line nr="964" mi="0" ci="19" mb="0" cb="0"/><line nr="967" mi="0" ci="19" mb="0" cb="0"/><line nr="970" mi="0" ci="19" mb="0" cb="0"/><line nr="973" mi="0" ci="19" mb="0" cb="0"/><line nr="976" mi="0" ci="19" mb="0" cb="0"/><line nr="979" mi="0" ci="19" mb="0" cb="0"/><line nr="982" mi="0" ci="19" mb="0" cb="0"/><line nr="985" mi="0" ci="19" mb="0" cb="0"/><line nr="988" mi="0" ci="19" mb="0" cb="0"/><line nr="991" mi="0" ci="19" mb="0" cb="0"/><line nr="994" mi="0" ci="19" mb="0" cb="0"/><line nr="997" mi="0" ci="19" mb="0" cb="0"/><line nr="1000" mi="0" ci="19" mb="0" cb="0"/><line nr="1003" mi="0" ci="19" mb="0" cb="0"/><line nr="1006" mi="0" ci="19" mb="0" cb="0"/><line nr="1009" mi="0" ci="19" mb="0" cb="0"/><line nr="1012" mi="0" ci="19" mb="0" cb="0"/><line nr="1015" mi="0" ci="19" mb="0" cb="0"/><line nr="1018" mi="0" ci="19" mb="0" cb="0"/><line nr="1021" mi="0" ci="19" mb="0" cb="0"/><line nr="1024" mi="0" ci="19" mb="0" cb="0"/><line nr="1027" mi="0" ci="19" mb="0" cb="0"/><line nr="1030" mi="0" ci="19" mb="0" cb="0"/><line nr="1033" mi="0" ci="19" mb="0" cb="0"/><line nr="1036" mi="0" ci="19" mb="0" cb="0"/><line nr="1039" mi="0" ci="19" mb="0" cb="0"/><line nr="1042" mi="0" ci="19" mb="0" cb="0"/><line nr="1045" mi="0" ci="19" mb="0" cb="0"/><line nr="1048" mi="0" ci="19" mb="0" cb="0"/><line nr="1053" mi="0" ci="2" mb="0" cb="0"/><line nr="1054" mi="0" ci="3" mb="0" cb="0"/><line nr="1055" mi="0" ci="2" mb="0" cb="0"/><line nr="1056" mi="0" ci="5" mb="0" cb="0"/><line nr="1057" mi="0" ci="2" mb="0" cb="0"/><line nr="1060" mi="0" ci="9" mb="1" cb="1"/><line nr="1061" mi="2" ci="0" mb="0" cb="0"/><line nr="1062" mi="0" ci="4" mb="0" cb="2"/><line nr="1064" mi="0" ci="5" mb="0" cb="0"/><line nr="1067" mi="0" ci="6" mb="12" cb="71"/><line nr="1070" mi="0" ci="4" mb="1" cb="1"/><line nr="1071" mi="12" ci="0" mb="0" cb="0"/><line nr="1072" mi="0" ci="4" mb="0" cb="2"/><line nr="1074" mi="0" ci="3" mb="1" cb="1"/><line nr="1075" mi="0" ci="2" mb="0" cb="0"/><line nr="1076" mi="0" ci="5" mb="0" cb="0"/><line nr="1080" mi="0" ci="6" mb="0" cb="2"/><line nr="1082" mi="0" ci="3" mb="1" cb="1"/><line nr="1083" mi="0" ci="2" mb="0" cb="0"/><line nr="1084" mi="0" ci="5" mb="0" cb="0"/><line nr="1086" mi="0" ci="4" mb="1" cb="1"/><line nr="1087" mi="5" ci="0" mb="0" cb="0"/><line nr="1088" mi="0" ci="4" mb="1" cb="1"/><line nr="1090" mi="3" ci="0" mb="2" cb="0"/><line nr="1091" mi="2" ci="0" mb="0" cb="0"/><line nr="1092" mi="4" ci="0" mb="0" cb="0"/><line nr="1094" mi="0" ci="4" mb="0" cb="2"/><line nr="1095" mi="0" ci="5" mb="0" cb="0"/><line nr="1096" mi="0" ci="4" mb="1" cb="1"/><line nr="1097" mi="0" ci="5" mb="0" cb="0"/><line nr="1098" mi="4" ci="0" mb="2" cb="0"/><line nr="1099" mi="11" ci="0" mb="0" cb="0"/><line nr="1100" mi="0" ci="4" mb="0" cb="2"/><line nr="1101" mi="0" ci="5" mb="0" cb="0"/><line nr="1104" mi="0" ci="6" mb="0" cb="2"/><line nr="1105" mi="0" ci="1" mb="0" cb="0"/><line nr="1106" mi="0" ci="3" mb="1" cb="1"/><line nr="1107" mi="0" ci="2" mb="0" cb="0"/><line nr="1108" mi="0" ci="4" mb="0" cb="0"/><line nr="1109" mi="0" ci="1" mb="0" cb="0"/><line nr="1111" mi="0" ci="6" mb="0" cb="2"/><line nr="1112" mi="0" ci="5" mb="0" cb="0"/><line nr="1115" mi="0" ci="6" mb="0" cb="2"/><line nr="1116" mi="0" ci="1" mb="0" cb="0"/><line nr="1117" mi="0" ci="3" mb="1" cb="1"/><line nr="1118" mi="0" ci="2" mb="0" cb="0"/><line nr="1119" mi="0" ci="4" mb="0" cb="0"/><line nr="1120" mi="0" ci="1" mb="0" cb="0"/><line nr="1122" mi="6" ci="0" mb="2" cb="0"/><line nr="1123" mi="12" ci="0" mb="0" cb="0"/><line nr="1126" mi="6" ci="0" mb="2" cb="0"/><line nr="1127" mi="1" ci="0" mb="0" cb="0"/><line nr="1128" mi="3" ci="0" mb="2" cb="0"/><line nr="1129" mi="2" ci="0" mb="0" cb="0"/><line nr="1130" mi="4" ci="0" mb="0" cb="0"/><line nr="1131" mi="1" ci="0" mb="0" cb="0"/><line nr="1133" mi="6" ci="0" mb="2" cb="0"/><line nr="1134" mi="5" ci="0" mb="0" cb="0"/><line nr="1139" mi="0" ci="6" mb="0" cb="2"/><line nr="1140" mi="0" ci="1" mb="0" cb="0"/><line nr="1141" mi="0" ci="3" mb="1" cb="1"/><line nr="1142" mi="0" ci="2" mb="0" cb="0"/><line nr="1143" mi="0" ci="3" mb="0" cb="0"/><line nr="1144" mi="0" ci="1" mb="0" cb="0"/><line nr="1146" mi="4" ci="0" mb="2" cb="0"/><line nr="1147" mi="5" ci="0" mb="0" cb="0"/><line nr="1150" mi="0" ci="6" mb="1" cb="1"/><line nr="1151" mi="0" ci="4" mb="0" cb="0"/><line nr="1154" mi="0" ci="7" mb="2" cb="2"/><line nr="1155" mi="0" ci="3" mb="0" cb="0"/><line nr="1158" mi="0" ci="6" mb="1" cb="1"/><line nr="1159" mi="0" ci="4" mb="0" cb="0"/><line nr="1162" mi="0" ci="6" mb="1" cb="1"/><line nr="1163" mi="5" ci="0" mb="0" cb="0"/><line nr="1166" mi="6" ci="0" mb="2" cb="0"/><line nr="1167" mi="4" ci="0" mb="0" cb="0"/><line nr="1170" mi="0" ci="6" mb="1" cb="1"/><line nr="1171" mi="12" ci="0" mb="0" cb="0"/><line nr="1174" mi="6" ci="0" mb="2" cb="0"/><line nr="1175" mi="4" ci="0" mb="0" cb="0"/><line nr="1178" mi="4" ci="0" mb="2" cb="0"/><line nr="1179" mi="5" ci="0" mb="0" cb="0"/><line nr="1182" mi="0" ci="6" mb="0" cb="2"/><line nr="1183" mi="0" ci="5" mb="0" cb="0"/><line nr="1186" mi="0" ci="6" mb="0" cb="2"/><line nr="1187" mi="0" ci="5" mb="0" cb="0"/><line nr="1190" mi="0" ci="7" mb="1" cb="3"/><line nr="1191" mi="0" ci="3" mb="0" cb="0"/><line nr="1194" mi="0" ci="6" mb="0" cb="2"/><line nr="1195" mi="0" ci="5" mb="0" cb="0"/><line nr="1198" mi="0" ci="6" mb="0" cb="2"/><line nr="1199" mi="0" ci="5" mb="0" cb="0"/><line nr="1202" mi="0" ci="6" mb="0" cb="2"/><line nr="1203" mi="0" ci="12" mb="0" cb="0"/><line nr="1206" mi="0" ci="6" mb="1" cb="1"/><line nr="1207" mi="0" ci="4" mb="0" cb="0"/><line nr="1210" mi="4" ci="0" mb="2" cb="0"/><line nr="1211" mi="1" ci="0" mb="0" cb="0"/><line nr="1212" mi="3" ci="0" mb="2" cb="0"/><line nr="1213" mi="2" ci="0" mb="0" cb="0"/><line nr="1214" mi="3" ci="0" mb="0" cb="0"/><line nr="1215" mi="1" ci="0" mb="0" cb="0"/><line nr="1217" mi="0" ci="6" mb="0" cb="2"/><line nr="1218" mi="0" ci="1" mb="0" cb="0"/><line nr="1219" mi="0" ci="3" mb="1" cb="1"/><line nr="1220" mi="0" ci="2" mb="0" cb="0"/><line nr="1221" mi="0" ci="3" mb="0" cb="0"/><line nr="1222" mi="0" ci="1" mb="0" cb="0"/><line nr="1224" mi="4" ci="0" mb="2" cb="0"/><line nr="1225" mi="5" ci="0" mb="0" cb="0"/><line nr="1228" mi="0" ci="6" mb="0" cb="2"/><line nr="1229" mi="0" ci="1" mb="0" cb="0"/><line nr="1230" mi="0" ci="3" mb="1" cb="1"/><line nr="1231" mi="0" ci="2" mb="0" cb="0"/><line nr="1232" mi="0" ci="4" mb="0" cb="0"/><line nr="1233" mi="0" ci="1" mb="0" cb="0"/><line nr="1235" mi="0" ci="9" mb="1" cb="3"/><line nr="1236" mi="0" ci="3" mb="0" cb="0"/><line nr="1239" mi="0" ci="7" mb="2" cb="2"/><line nr="1240" mi="0" ci="3" mb="0" cb="0"/><line nr="1243" mi="0" ci="4" mb="0" cb="2"/><line nr="1244" mi="0" ci="12" mb="0" cb="0"/><line nr="1247" mi="0" ci="4" mb="0" cb="2"/><line nr="1248" mi="0" ci="12" mb="0" cb="0"/><line nr="1251" mi="0" ci="9" mb="2" cb="2"/><line nr="1252" mi="0" ci="3" mb="0" cb="0"/><line nr="1255" mi="4" ci="0" mb="2" cb="0"/><line nr="1256" mi="12" ci="0" mb="0" cb="0"/><line nr="1259" mi="6" ci="0" mb="2" cb="0"/><line nr="1260" mi="1" ci="0" mb="0" cb="0"/><line nr="1261" mi="3" ci="0" mb="2" cb="0"/><line nr="1262" mi="2" ci="0" mb="0" cb="0"/><line nr="1263" mi="4" ci="0" mb="0" cb="0"/><line nr="1264" mi="1" ci="0" mb="0" cb="0"/><line nr="1266" mi="0" ci="6" mb="0" cb="2"/><line nr="1267" mi="0" ci="5" mb="0" cb="0"/><line nr="1271" mi="0" ci="6" mb="0" cb="2"/><line nr="1272" mi="0" ci="1" mb="0" cb="0"/><line nr="1273" mi="0" ci="3" mb="0" cb="2"/><line nr="1274" mi="0" ci="2" mb="0" cb="0"/><line nr="1275" mi="0" ci="3" mb="0" cb="0"/><line nr="1276" mi="0" ci="1" mb="0" cb="0"/><line nr="1278" mi="0" ci="6" mb="0" cb="2"/><line nr="1279" mi="0" ci="5" mb="0" cb="0"/><line nr="1282" mi="0" ci="6" mb="0" cb="2"/><line nr="1283" mi="0" ci="4" mb="0" cb="0"/><line nr="1286" mi="0" ci="4" mb="0" cb="2"/><line nr="1287" mi="0" ci="1" mb="0" cb="0"/><line nr="1288" mi="0" ci="3" mb="1" cb="1"/><line nr="1289" mi="0" ci="2" mb="0" cb="0"/><line nr="1290" mi="0" ci="4" mb="0" cb="0"/><line nr="1291" mi="0" ci="1" mb="0" cb="0"/><line nr="1293" mi="0" ci="6" mb="1" cb="1"/><line nr="1294" mi="1" ci="0" mb="0" cb="0"/><line nr="1295" mi="0" ci="3" mb="1" cb="1"/><line nr="1296" mi="0" ci="2" mb="0" cb="0"/><line nr="1297" mi="0" ci="4" mb="0" cb="0"/><line nr="1298" mi="0" ci="1" mb="0" cb="0"/><line nr="1300" mi="0" ci="6" mb="0" cb="2"/><line nr="1301" mi="0" ci="5" mb="0" cb="0"/><line nr="1304" mi="0" ci="6" mb="0" cb="2"/><line nr="1305" mi="0" ci="1" mb="0" cb="0"/><line nr="1306" mi="0" ci="3" mb="1" cb="1"/><line nr="1307" mi="0" ci="2" mb="0" cb="0"/><line nr="1308" mi="0" ci="4" mb="0" cb="0"/><line nr="1309" mi="0" ci="1" mb="0" cb="0"/><line nr="1311" mi="0" ci="6" mb="0" cb="2"/><line nr="1312" mi="0" ci="12" mb="0" cb="0"/><line nr="1315" mi="0" ci="6" mb="0" cb="2"/><line nr="1316" mi="0" ci="1" mb="0" cb="0"/><line nr="1317" mi="0" ci="3" mb="1" cb="1"/><line nr="1318" mi="0" ci="2" mb="0" cb="0"/><line nr="1319" mi="0" ci="4" mb="0" cb="0"/><line nr="1320" mi="0" ci="1" mb="0" cb="0"/><line nr="1322" mi="0" ci="6" mb="1" cb="1"/><line nr="1323" mi="0" ci="5" mb="0" cb="0"/><line nr="1326" mi="0" ci="6" mb="0" cb="2"/><line nr="1327" mi="0" ci="5" mb="0" cb="0"/><line nr="1330" mi="0" ci="6" mb="0" cb="2"/><line nr="1331" mi="0" ci="4" mb="0" cb="0"/><line nr="1334" mi="0" ci="6" mb="0" cb="2"/><line nr="1335" mi="0" ci="12" mb="0" cb="0"/><line nr="1338" mi="0" ci="6" mb="0" cb="2"/><line nr="1339" mi="0" ci="1" mb="0" cb="0"/><line nr="1340" mi="0" ci="3" mb="1" cb="1"/><line nr="1341" mi="0" ci="2" mb="0" cb="0"/><line nr="1342" mi="0" ci="4" mb="0" cb="0"/><line nr="1343" mi="0" ci="1" mb="0" cb="0"/><line nr="1345" mi="0" ci="6" mb="0" cb="2"/><line nr="1346" mi="0" ci="5" mb="0" cb="0"/><line nr="1349" mi="0" ci="6" mb="0" cb="2"/><line nr="1350" mi="0" ci="5" mb="0" cb="0"/><line nr="1353" mi="0" ci="6" mb="0" cb="2"/><line nr="1354" mi="0" ci="5" mb="0" cb="0"/><line nr="1357" mi="0" ci="6" mb="0" cb="2"/><line nr="1358" mi="0" ci="12" mb="0" cb="0"/><line nr="1361" mi="0" ci="6" mb="0" cb="2"/><line nr="1362" mi="0" ci="5" mb="0" cb="0"/><line nr="1365" mi="0" ci="6" mb="0" cb="2"/><line nr="1366" mi="0" ci="5" mb="0" cb="0"/><line nr="1369" mi="0" ci="6" mb="0" cb="2"/><line nr="1370" mi="0" ci="4" mb="0" cb="0"/><line nr="1373" mi="4" ci="0" mb="2" cb="0"/><line nr="1374" mi="5" ci="0" mb="0" cb="0"/><line nr="1377" mi="0" ci="6" mb="0" cb="2"/><line nr="1378" mi="0" ci="1" mb="0" cb="0"/><line nr="1379" mi="0" ci="3" mb="1" cb="1"/><line nr="1380" mi="0" ci="2" mb="0" cb="0"/><line nr="1381" mi="0" ci="4" mb="0" cb="0"/><line nr="1382" mi="0" ci="1" mb="0" cb="0"/><line nr="1384" mi="0" ci="6" mb="0" cb="2"/><line nr="1385" mi="0" ci="5" mb="0" cb="0"/><line nr="1388" mi="0" ci="6" mb="1" cb="1"/><line nr="1389" mi="1" ci="0" mb="0" cb="0"/><line nr="1390" mi="0" ci="3" mb="1" cb="1"/><line nr="1391" mi="0" ci="2" mb="0" cb="0"/><line nr="1392" mi="0" ci="4" mb="0" cb="0"/><line nr="1393" mi="0" ci="1" mb="0" cb="0"/><line nr="1395" mi="0" ci="6" mb="0" cb="2"/><line nr="1396" mi="0" ci="5" mb="0" cb="0"/><line nr="1399" mi="0" ci="6" mb="0" cb="2"/><line nr="1400" mi="0" ci="1" mb="0" cb="0"/><line nr="1401" mi="0" ci="3" mb="1" cb="1"/><line nr="1402" mi="0" ci="2" mb="0" cb="0"/><line nr="1403" mi="0" ci="3" mb="0" cb="0"/><line nr="1404" mi="0" ci="1" mb="0" cb="0"/><line nr="1406" mi="0" ci="6" mb="0" cb="2"/><line nr="1407" mi="0" ci="1" mb="0" cb="0"/><line nr="1408" mi="0" ci="3" mb="1" cb="1"/><line nr="1409" mi="0" ci="2" mb="0" cb="0"/><line nr="1410" mi="0" ci="4" mb="0" cb="0"/><line nr="1411" mi="0" ci="1" mb="0" cb="0"/><line nr="1413" mi="0" ci="6" mb="0" cb="2"/><line nr="1414" mi="0" ci="5" mb="0" cb="0"/><line nr="1417" mi="0" ci="6" mb="0" cb="2"/><line nr="1418" mi="0" ci="1" mb="0" cb="0"/><line nr="1419" mi="0" ci="3" mb="0" cb="2"/><line nr="1420" mi="0" ci="2" mb="0" cb="0"/><line nr="1421" mi="0" ci="3" mb="0" cb="0"/><line nr="1422" mi="0" ci="1" mb="0" cb="0"/><line nr="1424" mi="0" ci="6" mb="0" cb="2"/><line nr="1425" mi="0" ci="5" mb="0" cb="0"/><line nr="1428" mi="0" ci="6" mb="0" cb="2"/><line nr="1429" mi="0" ci="5" mb="0" cb="0"/><line nr="1432" mi="0" ci="6" mb="0" cb="2"/><line nr="1433" mi="0" ci="5" mb="0" cb="0"/><line nr="1436" mi="0" ci="4" mb="0" cb="2"/><line nr="1437" mi="0" ci="4" mb="0" cb="0"/><line nr="1440" mi="0" ci="6" mb="1" cb="1"/><line nr="1441" mi="12" ci="0" mb="0" cb="0"/><line nr="1444" mi="0" ci="6" mb="1" cb="1"/><line nr="1445" mi="1" ci="0" mb="0" cb="0"/><line nr="1446" mi="0" ci="3" mb="1" cb="1"/><line nr="1447" mi="0" ci="2" mb="0" cb="0"/><line nr="1448" mi="0" ci="4" mb="0" cb="0"/><line nr="1449" mi="0" ci="1" mb="0" cb="0"/><line nr="1451" mi="0" ci="6" mb="0" cb="2"/><line nr="1452" mi="0" ci="5" mb="0" cb="0"/><line nr="1455" mi="0" ci="6" mb="0" cb="2"/><line nr="1456" mi="0" ci="1" mb="0" cb="0"/><line nr="1457" mi="0" ci="3" mb="1" cb="1"/><line nr="1458" mi="0" ci="2" mb="0" cb="0"/><line nr="1459" mi="0" ci="3" mb="0" cb="0"/><line nr="1460" mi="0" ci="1" mb="0" cb="0"/><line nr="1462" mi="0" ci="6" mb="0" cb="2"/><line nr="1463" mi="0" ci="5" mb="0" cb="0"/><line nr="1466" mi="0" ci="6" mb="0" cb="2"/><line nr="1467" mi="0" ci="5" mb="0" cb="0"/><line nr="1470" mi="0" ci="6" mb="0" cb="2"/><line nr="1471" mi="0" ci="4" mb="0" cb="0"/><line nr="1474" mi="0" ci="4" mb="0" cb="2"/><line nr="1475" mi="0" ci="12" mb="0" cb="0"/><line nr="1478" mi="0" ci="6" mb="1" cb="1"/><line nr="1479" mi="0" ci="5" mb="0" cb="0"/><line nr="1482" mi="0" ci="6" mb="1" cb="1"/><line nr="1483" mi="0" ci="5" mb="0" cb="0"/><line nr="1486" mi="0" ci="6" mb="1" cb="1"/><line nr="1487" mi="0" ci="4" mb="0" cb="0"/><line nr="1491" mi="0" ci="3" mb="0" cb="2"/><line nr="1492" mi="0" ci="1" mb="0" cb="0"/><line nr="1493" mi="0" ci="4" mb="0" cb="2"/><line nr="1495" mi="0" ci="7" mb="0" cb="0"/><line nr="1498" mi="0" ci="6" mb="2" cb="46"/><line nr="1501" mi="0" ci="6" mb="1" cb="1"/><line nr="1502" mi="1" ci="0" mb="0" cb="0"/><line nr="1503" mi="0" ci="3" mb="1" cb="1"/><line nr="1504" mi="0" ci="2" mb="0" cb="0"/><line nr="1505" mi="0" ci="3" mb="0" cb="0"/><line nr="1506" mi="0" ci="1" mb="0" cb="0"/><line nr="1508" mi="0" ci="4" mb="0" cb="2"/><line nr="1509" mi="0" ci="5" mb="0" cb="0"/><line nr="1512" mi="0" ci="6" mb="1" cb="1"/><line nr="1513" mi="5" ci="0" mb="0" cb="0"/><line nr="1516" mi="4" ci="0" mb="2" cb="0"/><line nr="1517" mi="5" ci="0" mb="0" cb="0"/><line nr="1520" mi="0" ci="9" mb="1" cb="3"/><line nr="1521" mi="0" ci="3" mb="0" cb="0"/><line nr="1524" mi="0" ci="6" mb="0" cb="2"/><line nr="1525" mi="0" ci="4" mb="0" cb="0"/><line nr="1528" mi="0" ci="4" mb="0" cb="2"/><line nr="1529" mi="0" ci="5" mb="0" cb="0"/><line nr="1532" mi="0" ci="6" mb="1" cb="1"/><line nr="1533" mi="0" ci="4" mb="0" cb="0"/><line nr="1536" mi="0" ci="6" mb="0" cb="2"/><line nr="1537" mi="0" ci="5" mb="0" cb="0"/><line nr="1540" mi="0" ci="4" mb="0" cb="2"/><line nr="1541" mi="0" ci="5" mb="0" cb="0"/><line nr="1544" mi="0" ci="6" mb="1" cb="1"/><line nr="1545" mi="0" ci="5" mb="0" cb="0"/><line nr="1548" mi="0" ci="6" mb="0" cb="2"/><line nr="1549" mi="0" ci="1" mb="0" cb="0"/><line nr="1550" mi="0" ci="3" mb="1" cb="1"/><line nr="1551" mi="0" ci="2" mb="0" cb="0"/><line nr="1552" mi="0" ci="3" mb="0" cb="0"/><line nr="1553" mi="0" ci="1" mb="0" cb="0"/><line nr="1555" mi="0" ci="3" mb="1" cb="1"/><line nr="1556" mi="0" ci="2" mb="0" cb="0"/><line nr="1557" mi="0" ci="4" mb="0" cb="0"/><line nr="1558" mi="0" ci="1" mb="0" cb="0"/><line nr="1560" mi="3" ci="0" mb="2" cb="0"/><line nr="1561" mi="3" ci="0" mb="0" cb="0"/><line nr="1564" mi="0" ci="4" mb="0" cb="2"/><line nr="1565" mi="0" ci="5" mb="0" cb="0"/><line nr="1568" mi="0" ci="9" mb="1" cb="3"/><line nr="1569" mi="0" ci="3" mb="0" cb="0"/><line nr="1572" mi="0" ci="4" mb="0" cb="2"/><line nr="1573" mi="0" ci="5" mb="0" cb="0"/><line nr="1576" mi="0" ci="4" mb="0" cb="2"/><line nr="1577" mi="0" ci="5" mb="0" cb="0"/><line nr="1580" mi="0" ci="6" mb="0" cb="2"/><line nr="1581" mi="0" ci="5" mb="0" cb="0"/><line nr="1584" mi="0" ci="4" mb="0" cb="2"/><line nr="1585" mi="0" ci="5" mb="0" cb="0"/><line nr="1588" mi="0" ci="4" mb="0" cb="2"/><line nr="1589" mi="0" ci="5" mb="0" cb="0"/><line nr="1592" mi="0" ci="6" mb="0" cb="2"/><line nr="1593" mi="0" ci="5" mb="0" cb="0"/><line nr="1596" mi="0" ci="4" mb="0" cb="2"/><line nr="1597" mi="0" ci="5" mb="0" cb="0"/><line nr="1600" mi="0" ci="4" mb="0" cb="2"/><line nr="1601" mi="0" ci="5" mb="0" cb="0"/><line nr="1604" mi="0" ci="6" mb="0" cb="2"/><line nr="1605" mi="0" ci="5" mb="0" cb="0"/><line nr="1608" mi="0" ci="4" mb="0" cb="2"/><line nr="1609" mi="0" ci="5" mb="0" cb="0"/><line nr="1612" mi="0" ci="6" mb="0" cb="2"/><line nr="1613" mi="0" ci="12" mb="0" cb="0"/><line nr="1616" mi="0" ci="6" mb="1" cb="1"/><line nr="1617" mi="1" ci="0" mb="0" cb="0"/><line nr="1618" mi="0" ci="3" mb="1" cb="1"/><line nr="1619" mi="0" ci="2" mb="0" cb="0"/><line nr="1620" mi="0" ci="4" mb="0" cb="0"/><line nr="1621" mi="0" ci="1" mb="0" cb="0"/><line nr="1623" mi="0" ci="6" mb="0" cb="2"/><line nr="1624" mi="0" ci="5" mb="0" cb="0"/><line nr="1627" mi="0" ci="6" mb="0" cb="2"/><line nr="1628" mi="0" ci="1" mb="0" cb="0"/><line nr="1629" mi="0" ci="3" mb="1" cb="1"/><line nr="1630" mi="0" ci="2" mb="0" cb="0"/><line nr="1631" mi="0" ci="3" mb="0" cb="0"/><line nr="1632" mi="0" ci="1" mb="0" cb="0"/><line nr="1634" mi="0" ci="6" mb="0" cb="2"/><line nr="1635" mi="0" ci="12" mb="0" cb="0"/><line nr="1638" mi="0" ci="4" mb="0" cb="2"/><line nr="1639" mi="0" ci="5" mb="0" cb="0"/><line nr="1642" mi="0" ci="4" mb="0" cb="2"/><line nr="1643" mi="0" ci="5" mb="0" cb="0"/><line nr="1646" mi="0" ci="6" mb="0" cb="2"/><line nr="1647" mi="0" ci="12" mb="0" cb="0"/><line nr="1650" mi="0" ci="6" mb="1" cb="1"/><line nr="1651" mi="0" ci="5" mb="0" cb="0"/><line nr="1654" mi="0" ci="6" mb="0" cb="2"/><line nr="1655" mi="0" ci="5" mb="0" cb="0"/><line nr="1658" mi="0" ci="6" mb="0" cb="2"/><line nr="1659" mi="0" ci="5" mb="0" cb="0"/><line nr="1662" mi="0" ci="6" mb="0" cb="2"/><line nr="1663" mi="0" ci="5" mb="0" cb="0"/><line nr="1666" mi="0" ci="4" mb="0" cb="2"/><line nr="1667" mi="0" ci="5" mb="0" cb="0"/><line nr="1670" mi="0" ci="9" mb="1" cb="3"/><line nr="1671" mi="0" ci="3" mb="0" cb="0"/><line nr="1674" mi="0" ci="6" mb="0" cb="2"/><line nr="1675" mi="0" ci="5" mb="0" cb="0"/><line nr="1678" mi="0" ci="6" mb="1" cb="1"/><line nr="1679" mi="0" ci="5" mb="0" cb="0"/><line nr="1682" mi="0" ci="6" mb="0" cb="2"/><line nr="1683" mi="0" ci="5" mb="0" cb="0"/><line nr="1686" mi="0" ci="6" mb="0" cb="2"/><line nr="1687" mi="0" ci="4" mb="0" cb="0"/><line nr="1690" mi="0" ci="6" mb="1" cb="1"/><line nr="1691" mi="0" ci="5" mb="0" cb="0"/><line nr="1694" mi="0" ci="6" mb="0" cb="2"/><line nr="1695" mi="0" ci="5" mb="0" cb="0"/><line nr="1698" mi="0" ci="6" mb="0" cb="2"/><line nr="1699" mi="0" ci="4" mb="0" cb="0"/><line nr="1703" mi="0" ci="3" mb="0" cb="2"/><line nr="1704" mi="0" ci="1" mb="0" cb="0"/><line nr="1707" mi="0" ci="5" mb="0" cb="0"/><line nr="1708" mi="0" ci="4" mb="0" cb="0"/><line nr="1709" mi="0" ci="6" mb="0" cb="0"/><line nr="1710" mi="0" ci="7" mb="0" cb="0"/><line nr="1711" mi="0" ci="7" mb="0" cb="0"/><line nr="1714" mi="0" ci="6" mb="1" cb="6"/><line nr="1717" mi="0" ci="7" mb="0" cb="2"/><line nr="1718" mi="0" ci="1" mb="0" cb="0"/><line nr="1719" mi="0" ci="3" mb="1" cb="1"/><line nr="1720" mi="0" ci="2" mb="0" cb="0"/><line nr="1721" mi="0" ci="3" mb="0" cb="0"/><line nr="1722" mi="0" ci="1" mb="0" cb="0"/><line nr="1724" mi="0" ci="7" mb="1" cb="1"/><line nr="1725" mi="0" ci="12" mb="0" cb="0"/><line nr="1728" mi="0" ci="7" mb="1" cb="1"/><line nr="1729" mi="0" ci="5" mb="0" cb="0"/><line nr="1732" mi="0" ci="7" mb="0" cb="2"/><line nr="1733" mi="0" ci="1" mb="0" cb="0"/><line nr="1734" mi="0" ci="3" mb="1" cb="1"/><line nr="1735" mi="0" ci="2" mb="0" cb="0"/><line nr="1736" mi="0" ci="3" mb="0" cb="0"/><line nr="1737" mi="0" ci="1" mb="0" cb="0"/><line nr="1739" mi="0" ci="7" mb="1" cb="1"/><line nr="1740" mi="1" ci="0" mb="0" cb="0"/><line nr="1741" mi="0" ci="3" mb="1" cb="1"/><line nr="1742" mi="0" ci="2" mb="0" cb="0"/><line nr="1743" mi="0" ci="4" mb="0" cb="0"/><line nr="1744" mi="0" ci="1" mb="0" cb="0"/><line nr="1746" mi="10" ci="0" mb="4" cb="0"/><line nr="1747" mi="3" ci="0" mb="0" cb="0"/><line nr="1751" mi="0" ci="3" mb="0" cb="2"/><line nr="1753" mi="0" ci="3" mb="0" cb="2"/><line nr="1755" mi="0" ci="3" mb="0" cb="0"/><line nr="1756" mi="0" ci="3" mb="0" cb="0"/><line nr="1757" mi="0" ci="2" mb="0" cb="0"/><line nr="1759" mi="0" ci="1" mb="0" cb="0"/><line nr="1760" mi="0" ci="13" mb="0" cb="2"/><line nr="1761" mi="0" ci="2" mb="0" cb="0"/><line nr="1762" mi="0" ci="5" mb="0" cb="0"/><line nr="1763" mi="0" ci="4" mb="0" cb="0"/><line nr="1768" mi="0" ci="3" mb="0" cb="2"/><line nr="1771" mi="0" ci="4" mb="0" cb="0"/><line nr="1773" mi="0" ci="2" mb="0" cb="0"/><line nr="1778" mi="0" ci="5" mb="0" cb="0"/><line nr="1779" mi="1" ci="0" mb="0" cb="0"/><line nr="1780" mi="2" ci="0" mb="0" cb="0"/><line nr="1781" mi="0" ci="1" mb="0" cb="0"/><line nr="1782" mi="0" ci="3" mb="0" cb="2"/><line nr="1785" mi="0" ci="6" mb="1" cb="1"/><line nr="1786" mi="0" ci="5" mb="0" cb="0"/><line nr="1789" mi="0" ci="2" mb="0" cb="0"/><line nr="1791" mi="2" ci="0" mb="0" cb="0"/><line nr="1795" mi="0" ci="3" mb="0" cb="2"/><line nr="1798" mi="0" ci="4" mb="0" cb="0"/><line nr="1800" mi="0" ci="2" mb="0" cb="0"/><line nr="1805" mi="0" ci="5" mb="0" cb="0"/><line nr="1806" mi="1" ci="0" mb="0" cb="0"/><line nr="1807" mi="2" ci="0" mb="0" cb="0"/><line nr="1808" mi="0" ci="1" mb="0" cb="0"/><line nr="1809" mi="0" ci="3" mb="0" cb="2"/><line nr="1812" mi="0" ci="6" mb="1" cb="1"/><line nr="1813" mi="0" ci="5" mb="0" cb="0"/><line nr="1816" mi="0" ci="2" mb="0" cb="0"/><line nr="1818" mi="2" ci="0" mb="0" cb="0"/><line nr="1820" mi="0" ci="479" mb="0" cb="0"/><line nr="1832" mi="0" ci="2" mb="0" cb="2"/><line nr="1835" mi="1" ci="11" mb="1" cb="1"/><line nr="1837" mi="0" ci="8" mb="1" cb="1"/><line nr="1838" mi="0" ci="2" mb="0" cb="0"/><line nr="1839" mi="2" ci="0" mb="0" cb="0"/><line nr="1844" mi="0" ci="2" mb="36" cb="2"/><line nr="1847" mi="1" ci="11" mb="1" cb="1"/><line nr="1849" mi="12" ci="0" mb="2" cb="0"/><line nr="1851" mi="12" ci="0" mb="2" cb="0"/><line nr="1853" mi="12" ci="0" mb="2" cb="0"/><line nr="1855" mi="12" ci="0" mb="2" cb="0"/><line nr="1857" mi="12" ci="0" mb="2" cb="0"/><line nr="1859" mi="12" ci="0" mb="2" cb="0"/><line nr="1861" mi="12" ci="0" mb="2" cb="0"/><line nr="1863" mi="12" ci="0" mb="2" cb="0"/><line nr="1865" mi="12" ci="0" mb="2" cb="0"/><line nr="1867" mi="12" ci="0" mb="2" cb="0"/><line nr="1869" mi="12" ci="0" mb="2" cb="0"/><line nr="1871" mi="12" ci="0" mb="2" cb="0"/><line nr="1873" mi="12" ci="0" mb="2" cb="0"/><line nr="1875" mi="12" ci="0" mb="2" cb="0"/><line nr="1877" mi="12" ci="0" mb="2" cb="0"/><line nr="1879" mi="12" ci="0" mb="2" cb="0"/><line nr="1881" mi="12" ci="0" mb="2" cb="0"/><line nr="1883" mi="12" ci="0" mb="2" cb="0"/><line nr="1885" mi="12" ci="0" mb="2" cb="0"/><line nr="1887" mi="12" ci="0" mb="2" cb="0"/><line nr="1889" mi="12" ci="0" mb="2" cb="0"/><line nr="1891" mi="12" ci="0" mb="2" cb="0"/><line nr="1893" mi="12" ci="0" mb="2" cb="0"/><line nr="1895" mi="12" ci="0" mb="2" cb="0"/><line nr="1897" mi="12" ci="0" mb="2" cb="0"/><line nr="1899" mi="12" ci="0" mb="2" cb="0"/><line nr="1901" mi="12" ci="0" mb="2" cb="0"/><line nr="1903" mi="12" ci="0" mb="2" cb="0"/><line nr="1905" mi="12" ci="0" mb="2" cb="0"/><line nr="1907" mi="12" ci="0" mb="2" cb="0"/><line nr="1909" mi="12" ci="0" mb="2" cb="0"/><line nr="1911" mi="12" ci="0" mb="2" cb="0"/><line nr="1913" mi="12" ci="0" mb="2" cb="0"/><line nr="1915" mi="12" ci="0" mb="2" cb="0"/><line nr="1917" mi="12" ci="0" mb="2" cb="0"/><line nr="1919" mi="2" ci="10" mb="1" cb="1"/><line nr="1921" mi="8" ci="0" mb="2" cb="0"/><line nr="1922" mi="2" ci="0" mb="0" cb="0"/><line nr="1923" mi="2" ci="0" mb="0" cb="0"/><line nr="1928" mi="0" ci="2" mb="36" cb="2"/><line nr="1931" mi="1" ci="11" mb="1" cb="1"/><line nr="1933" mi="12" ci="0" mb="2" cb="0"/><line nr="1935" mi="12" ci="0" mb="2" cb="0"/><line nr="1937" mi="12" ci="0" mb="2" cb="0"/><line nr="1939" mi="12" ci="0" mb="2" cb="0"/><line nr="1941" mi="12" ci="0" mb="2" cb="0"/><line nr="1943" mi="12" ci="0" mb="2" cb="0"/><line nr="1945" mi="12" ci="0" mb="2" cb="0"/><line nr="1947" mi="12" ci="0" mb="2" cb="0"/><line nr="1949" mi="12" ci="0" mb="2" cb="0"/><line nr="1951" mi="12" ci="0" mb="2" cb="0"/><line nr="1953" mi="12" ci="0" mb="2" cb="0"/><line nr="1955" mi="12" ci="0" mb="2" cb="0"/><line nr="1957" mi="12" ci="0" mb="2" cb="0"/><line nr="1959" mi="12" ci="0" mb="2" cb="0"/><line nr="1961" mi="12" ci="0" mb="2" cb="0"/><line nr="1963" mi="12" ci="0" mb="2" cb="0"/><line nr="1965" mi="12" ci="0" mb="2" cb="0"/><line nr="1967" mi="12" ci="0" mb="2" cb="0"/><line nr="1969" mi="12" ci="0" mb="2" cb="0"/><line nr="1971" mi="12" ci="0" mb="2" cb="0"/><line nr="1973" mi="12" ci="0" mb="2" cb="0"/><line nr="1975" mi="12" ci="0" mb="2" cb="0"/><line nr="1977" mi="12" ci="0" mb="2" cb="0"/><line nr="1979" mi="12" ci="0" mb="2" cb="0"/><line nr="1981" mi="12" ci="0" mb="2" cb="0"/><line nr="1983" mi="12" ci="0" mb="2" cb="0"/><line nr="1985" mi="12" ci="0" mb="2" cb="0"/><line nr="1987" mi="12" ci="0" mb="2" cb="0"/><line nr="1989" mi="12" ci="0" mb="2" cb="0"/><line nr="1991" mi="12" ci="0" mb="2" cb="0"/><line nr="1993" mi="12" ci="0" mb="2" cb="0"/><line nr="1995" mi="12" ci="0" mb="2" cb="0"/><line nr="1997" mi="12" ci="0" mb="2" cb="0"/><line nr="1999" mi="12" ci="0" mb="2" cb="0"/><line nr="2001" mi="12" ci="0" mb="2" cb="0"/><line nr="2003" mi="2" ci="10" mb="1" cb="1"/><line nr="2005" mi="8" ci="0" mb="2" cb="0"/><line nr="2006" mi="2" ci="0" mb="0" cb="0"/><line nr="2007" mi="2" ci="0" mb="0" cb="0"/><line nr="2012" mi="0" ci="515" mb="0" cb="0"/><line nr="2038" mi="0" ci="15" mb="0" cb="0"/><line nr="2045" mi="0" ci="515" mb="0" cb="0"/><line nr="2053" mi="0" ci="15" mb="0" cb="0"/><line nr="2056" mi="0" ci="15" mb="0" cb="0"/><line nr="2059" mi="0" ci="15" mb="0" cb="0"/><line nr="2062" mi="0" ci="16" mb="0" cb="0"/><line nr="2066" mi="0" ci="4" mb="0" cb="0"/><line nr="2067" mi="0" ci="4" mb="0" cb="0"/><line nr="2068" mi="0" ci="5" mb="0" cb="0"/><line nr="2069" mi="0" ci="4" mb="0" cb="0"/><line nr="2074" mi="0" ci="2" mb="0" cb="0"/><line nr="2075" mi="0" ci="3" mb="0" cb="0"/><line nr="2076" mi="0" ci="1" mb="0" cb="0"/><line nr="2080" mi="3" ci="0" mb="0" cb="0"/><line nr="2081" mi="3" ci="0" mb="0" cb="0"/><line nr="2082" mi="1" ci="0" mb="0" cb="0"/><line nr="2087" mi="6" ci="0" mb="0" cb="0"/><line nr="2088" mi="4" ci="0" mb="0" cb="0"/><line nr="2089" mi="3" ci="0" mb="0" cb="0"/><line nr="2090" mi="2" ci="0" mb="0" cb="0"/><line nr="2091" mi="1" ci="0" mb="0" cb="0"/><line nr="2095" mi="3" ci="0" mb="0" cb="0"/><line nr="2096" mi="5" ci="0" mb="2" cb="0"/><line nr="2097" mi="6" ci="0" mb="0" cb="0"/><line nr="2098" mi="1" ci="0" mb="0" cb="0"/><line nr="2103" mi="3" ci="0" mb="0" cb="0"/><line nr="2104" mi="3" ci="0" mb="0" cb="0"/><line nr="2105" mi="1" ci="0" mb="0" cb="0"/><line nr="2110" mi="5" ci="0" mb="4" cb="0"/><line nr="2111" mi="15" ci="0" mb="0" cb="0"/><line nr="2113" mi="3" ci="0" mb="0" cb="0"/><line nr="2114" mi="1" ci="0" mb="0" cb="0"/><line nr="2124" mi="0" ci="5" mb="0" cb="0"/><line nr="2125" mi="0" ci="8" mb="0" cb="2"/><line nr="2126" mi="0" ci="4" mb="0" cb="0"/><line nr="2127" mi="0" ci="4" mb="0" cb="0"/><line nr="2128" mi="0" ci="4" mb="0" cb="0"/><line nr="2129" mi="0" ci="4" mb="0" cb="0"/><line nr="2130" mi="0" ci="5" mb="0" cb="0"/><line nr="2132" mi="0" ci="3" mb="0" cb="0"/><line nr="2133" mi="0" ci="3" mb="0" cb="0"/><line nr="2134" mi="0" ci="3" mb="0" cb="0"/><line nr="2135" mi="0" ci="3" mb="0" cb="0"/><line nr="2137" mi="0" ci="2" mb="0" cb="0"/><line nr="2140" mi="0" ci="3" mb="0" cb="0"/><line nr="2141" mi="0" ci="3" mb="0" cb="0"/><line nr="2150" mi="0" ci="2" mb="0" cb="0"/><line nr="2152" mi="0" ci="2" mb="0" cb="0"/><line nr="2159" mi="0" ci="5" mb="0" cb="0"/><line nr="2161" mi="0" ci="1" mb="0" cb="0"/><line nr="2163" mi="0" ci="3" mb="0" cb="0"/><line nr="2164" mi="0" ci="3" mb="0" cb="0"/><line nr="2165" mi="0" ci="3" mb="0" cb="0"/><line nr="2166" mi="0" ci="2" mb="0" cb="0"/><line nr="2167" mi="0" ci="1" mb="0" cb="0"/><line nr="2168" mi="0" ci="4" mb="0" cb="0"/><line nr="2169" mi="0" ci="4" mb="0" cb="0"/><line nr="2170" mi="0" ci="3" mb="0" cb="0"/><line nr="2174" mi="0" ci="3" mb="1" cb="3"/><line nr="2177" mi="0" ci="3" mb="0" cb="0"/><line nr="2178" mi="0" ci="3" mb="0" cb="0"/><line nr="2179" mi="0" ci="3" mb="0" cb="0"/><line nr="2180" mi="0" ci="1" mb="0" cb="0"/><line nr="2182" mi="0" ci="3" mb="0" cb="0"/><line nr="2183" mi="0" ci="3" mb="0" cb="0"/><line nr="2184" mi="0" ci="3" mb="0" cb="0"/><line nr="2185" mi="0" ci="7" mb="1" cb="3"/><line nr="2187" mi="0" ci="4" mb="0" cb="0"/><line nr="2191" mi="0" ci="3" mb="0" cb="0"/><line nr="2192" mi="0" ci="3" mb="0" cb="0"/><line nr="2193" mi="0" ci="3" mb="0" cb="0"/><line nr="2194" mi="0" ci="7" mb="1" cb="3"/><line nr="2196" mi="0" ci="3" mb="0" cb="0"/><line nr="2200" mi="0" ci="4" mb="0" cb="2"/><line nr="2202" mi="0" ci="6" mb="0" cb="2"/><line nr="2203" mi="0" ci="9" mb="0" cb="0"/><line nr="2204" mi="0" ci="16" mb="0" cb="2"/><line nr="2206" mi="0" ci="3" mb="0" cb="0"/><line nr="2207" mi="0" ci="3" mb="0" cb="0"/><line nr="2208" mi="0" ci="3" mb="0" cb="0"/><line nr="2209" mi="0" ci="6" mb="1" cb="1"/><line nr="2210" mi="6" ci="0" mb="0" cb="0"/><line nr="2211" mi="0" ci="2" mb="0" cb="0"/><line nr="2213" mi="0" ci="16" mb="0" cb="2"/><line nr="2215" mi="0" ci="16" mb="1" cb="1"/><line nr="2217" mi="0" ci="3" mb="0" cb="0"/><line nr="2218" mi="0" ci="2" mb="0" cb="2"/><line nr="2219" mi="0" ci="3" mb="0" cb="0"/><line nr="2222" mi="0" ci="3" mb="0" cb="0"/><line nr="2223" mi="0" ci="5" mb="0" cb="0"/><line nr="2225" mi="0" ci="4" mb="0" cb="0"/><line nr="2228" mi="3" ci="0" mb="0" cb="0"/><line nr="2229" mi="0" ci="6" mb="0" cb="2"/><line nr="2230" mi="0" ci="7" mb="0" cb="0"/><line nr="2233" mi="0" ci="2" mb="0" cb="0"/><line nr="2234" mi="0" ci="6" mb="0" cb="2"/><line nr="2235" mi="0" ci="6" mb="0" cb="0"/><line nr="2236" mi="0" ci="2" mb="0" cb="0"/><line nr="2237" mi="0" ci="3" mb="0" cb="0"/><line nr="2239" mi="0" ci="5" mb="0" cb="0"/><line nr="2240" mi="0" ci="1" mb="0" cb="0"/><line nr="2242" mi="1" ci="0" mb="0" cb="0"/><line nr="2244" mi="0" ci="4" mb="0" cb="0"/><line nr="2245" mi="0" ci="4" mb="0" cb="0"/><line nr="2246" mi="0" ci="2" mb="0" cb="0"/><line nr="2247" mi="0" ci="2" mb="0" cb="0"/><line nr="2248" mi="0" ci="8" mb="0" cb="0"/><line nr="2249" mi="1" ci="0" mb="0" cb="0"/><line nr="2250" mi="2" ci="0" mb="0" cb="0"/><line nr="2251" mi="9" ci="0" mb="2" cb="0"/><line nr="2252" mi="8" ci="0" mb="4" cb="0"/><line nr="2253" mi="1" ci="0" mb="0" cb="0"/><line nr="2254" mi="3" ci="0" mb="0" cb="0"/><line nr="2257" mi="1" ci="0" mb="0" cb="0"/><line nr="2258" mi="0" ci="1" mb="0" cb="0"/><line nr="2259" mi="0" ci="2" mb="1" cb="1"/><line nr="2260" mi="0" ci="4" mb="0" cb="0"/><line nr="2261" mi="3" ci="6" mb="1" cb="1"/><line nr="2263" mi="0" ci="13" mb="0" cb="0"/><line nr="2270" mi="0" ci="3" mb="0" cb="4"/><line nr="2273" mi="0" ci="17" mb="0" cb="0"/><line nr="2274" mi="0" ci="6" mb="0" cb="0"/><line nr="2275" mi="0" ci="3" mb="0" cb="2"/><line nr="2276" mi="0" ci="15" mb="0" cb="0"/><line nr="2278" mi="0" ci="8" mb="0" cb="0"/><line nr="2279" mi="0" ci="1" mb="0" cb="0"/><line nr="2281" mi="0" ci="17" mb="0" cb="0"/><line nr="2282" mi="0" ci="8" mb="0" cb="0"/><line nr="2283" mi="0" ci="1" mb="0" cb="0"/><line nr="2285" mi="0" ci="17" mb="0" cb="0"/><line nr="2286" mi="0" ci="8" mb="0" cb="0"/><line nr="2287" mi="0" ci="1" mb="0" cb="0"/><line nr="2291" mi="0" ci="1" mb="0" cb="0"/><line nr="2294" mi="0" ci="12" mb="0" cb="0"/><line nr="2295" mi="0" ci="3" mb="0" cb="2"/><line nr="2298" mi="0" ci="9" mb="0" cb="0"/><line nr="2299" mi="0" ci="3" mb="0" cb="0"/><line nr="2300" mi="0" ci="4" mb="0" cb="0"/><line nr="2301" mi="0" ci="1" mb="0" cb="0"/><line nr="2305" mi="0" ci="1" mb="0" cb="0"/><line nr="2308" mi="0" ci="3" mb="0" cb="3"/><line nr="2311" mi="0" ci="7" mb="0" cb="0"/><line nr="2312" mi="0" ci="6" mb="0" cb="0"/><line nr="2313" mi="0" ci="3" mb="0" cb="0"/><line nr="2314" mi="0" ci="4" mb="0" cb="0"/><line nr="2315" mi="0" ci="4" mb="0" cb="0"/><line nr="2316" mi="0" ci="3" mb="0" cb="0"/><line nr="2317" mi="0" ci="1" mb="0" cb="0"/><line nr="2319" mi="0" ci="7" mb="0" cb="0"/><line nr="2320" mi="0" ci="6" mb="0" cb="0"/><line nr="2321" mi="0" ci="3" mb="0" cb="0"/><line nr="2322" mi="0" ci="4" mb="0" cb="0"/><line nr="2323" mi="0" ci="4" mb="0" cb="0"/><line nr="2324" mi="0" ci="3" mb="0" cb="0"/><line nr="2325" mi="0" ci="1" mb="0" cb="0"/><line nr="2329" mi="0" ci="1" mb="0" cb="0"/><line nr="2332" mi="0" ci="7" mb="0" cb="2"/><line nr="2334" mi="0" ci="11" mb="0" cb="0"/><line nr="2335" mi="0" ci="6" mb="0" cb="0"/><line nr="2337" mi="0" ci="1" mb="0" cb="0"/><line nr="2341" mi="0" ci="13" mb="0" cb="0"/><line nr="2342" mi="0" ci="4" mb="0" cb="2"/><line nr="2343" mi="0" ci="1" mb="0" cb="0"/><line nr="2346" mi="0" ci="3" mb="0" cb="0"/><line nr="2347" mi="0" ci="3" mb="0" cb="0"/><line nr="2348" mi="0" ci="1" mb="0" cb="0"/><line nr="2353" mi="0" ci="5" mb="0" cb="0"/><line nr="2354" mi="0" ci="4" mb="0" cb="2"/><line nr="2355" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1549" covered="7374"/><counter type="BRANCH" missed="430" covered="818"/><counter type="LINE" missed="251" covered="1036"/><counter type="COMPLEXITY" missed="328" covered="523"/><counter type="METHOD" missed="6" covered="35"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaParserTreeConstants.java"><line nr="122" mi="0" ci="460" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="460"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAnnotationMethodDeclaration.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTExplicitConstructorInvocation.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="2" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="1" cb="3"/><line nr="50" mi="12" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="32" covered="30"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTTryStatement.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="2"/><line nr="28" mi="0" ci="5" mb="0" cb="2"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="1" cb="1"/><line nr="37" mi="0" ci="5" mb="0" cb="2"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTMethodDeclarator.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAssignmentOperator.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTTypeArguments.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTInstanceOfExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTFieldDeclaration.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="1" cb="3"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="4"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="4"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="1" cb="3"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="1" cb="3"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="1" cb="3"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="4"/><line nr="102" mi="0" ci="10" mb="0" cb="2"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="2" cb="2"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="2" cb="2"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="1" cb="1"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="179"/><counter type="BRANCH" missed="10" covered="36"/><counter type="LINE" missed="4" covered="43"/><counter type="COMPLEXITY" missed="10" covered="32"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTSingleMemberAnnotation.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTClassOrInterfaceType.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="2"/><line nr="38" mi="0" ci="5" mb="0" cb="2"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="4" ci="6" mb="1" cb="1"/><line nr="44" mi="5" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="53"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTPrimaryPrefix.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Token.java"><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="2"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ASTVariableDeclaratorId.java"><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="2"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="1" cb="3"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="1" cb="3"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="2"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="144"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="36"/><counter type="COMPLEXITY" missed="2" covered="23"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTMultiplicativeExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTFormalParameters.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAnnotationTypeMemberDeclaration.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTCastExpression.java"><line nr="9" mi="3" ci="3" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="17"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTSwitchLabel.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTEmptyStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTArrayInitializer.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTInclusiveOrExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTAnnotationTypeDeclaration.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="12" mb="1" cb="3"/><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTStatementExpression.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTNormalAnnotation.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ASTSwitchStatement.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="11203" covered="32522"/><counter type="BRANCH" missed="2424" covered="3441"/><counter type="LINE" missed="2245" covered="6559"/><counter type="COMPLEXITY" missed="1942" covered="2704"/><counter type="METHOD" missed="193" covered="1246"/><counter type="CLASS" missed="2" covered="134"/></package><package name="net/sourceforge/pmd/cpd"><class name="net/sourceforge/pmd/cpd/JavaTokenizer$ConstructorDetector"><method name="&lt;init&gt;" desc="(Z)V" line="204"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processToken" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="212"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="16"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushTypeDeclaration" desc="()V" line="264"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreConstructorToken" desc="(Lnet/sourceforge/pmd/cpd/Tokens;Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="270"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="144"/><counter type="BRANCH" missed="2" covered="23"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/cpd/JavaTokenizer"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProperties" desc="(Ljava/util/Properties;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenize" desc="(Lnet/sourceforge/pmd/cpd/SourceCode;Lnet/sourceforge/pmd/cpd/Tokens;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processToken" desc="(Lnet/sourceforge/pmd/cpd/Tokens;Ljava/lang/String;Lnet/sourceforge/pmd/lang/java/ast/Token;Lnet/sourceforge/pmd/cpd/JavaTokenizer$ConstructorDetector;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoreLiterals" desc="(Z)V" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoreIdentifiers" desc="(Z)V" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoreAnnotations" desc="(Z)V" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="161"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/cpd/JavaTokenizer$TypeDeclaration"><method name="&lt;init&gt;" desc="(I)V" line="290"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/cpd/JavaTokenizer$TokenDiscarder"><method name="&lt;init&gt;" desc="(Z)V" line="103"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateState" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipPackageAndImport" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipSemicolon" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipCPDSuppression" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipAnnotations" desc="()V" line="156"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDiscarding" desc="()Z" line="164"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectAnnotations" desc="(Lnet/sourceforge/pmd/lang/java/ast/Token;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="228"/><counter type="BRANCH" missed="2" covered="64"/><counter type="LINE" missed="0" covered="56"/><counter type="COMPLEXITY" missed="2" covered="39"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/cpd/JavaLanguage"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Properties;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProperties" desc="(Ljava/util/Properties;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JavaTokenizer.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="12" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="19" mb="3" cb="7"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="4"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="4"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="4"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="2"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="1" cb="3"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="12" mb="0" cb="6"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="12" mb="0" cb="6"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="4"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="4"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="16" mb="0" cb="8"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="4"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="2"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="11" mb="1" cb="5"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="5"/><line nr="218" mi="0" ci="5" mb="0" cb="2"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="7" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="12" mb="1" cb="3"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="8" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="2"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="2"/><line nr="276" mi="0" ci="13" mb="1" cb="3"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="539"/><counter type="BRANCH" missed="7" covered="102"/><counter type="LINE" missed="0" covered="135"/><counter type="COMPLEXITY" missed="7" covered="69"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="JavaLanguage.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="13" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="568"/><counter type="BRANCH" missed="7" covered="102"/><counter type="LINE" missed="0" covered="143"/><counter type="COMPLEXITY" missed="7" covered="72"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="5"/></package><package name="net/sourceforge/pmd/lang/java/rule/basic"><class name="net/sourceforge/pmd/lang/java/rule/basic/DoubleCheckedLockingRule"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="66"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="189"/><counter type="BRANCH" missed="9" covered="27"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkLocalVariableUsage" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/String;)Z" line="154"><counter type="INSTRUCTION" missed="2" covered="175"/><counter type="BRANCH" missed="11" covered="33"/><counter type="LINE" missed="1" covered="26"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifVerify" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/String;)Z" line="204"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNonVariableStmt" desc="(Ljava/lang/String;Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;" line="236"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchName" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/String;)Z" line="245"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameFromPrimaryPrefix" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;)Ljava/lang/String;" line="256"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="546"/><counter type="BRANCH" missed="28" covered="92"/><counter type="LINE" missed="1" covered="104"/><counter type="COMPLEXITY" missed="28" covered="42"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/BigIntegerInstantiationRule"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="5" covered="104"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="107"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/OverrideBothEqualsAndHashcodeRule"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImplementsList;Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="185"/><counter type="BRANCH" missed="3" covered="35"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/BooleanInstantiationRule"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="15" covered="83"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="145"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/AvoidUsingHardCodedIPRule"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLatinDigit" desc="(C)Z" line="84"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isHexCharacter" desc="(C)Z" line="88"><counter type="INSTRUCTION" missed="13" covered="7"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIPv4" desc="(CLjava/lang/String;)Z" line="96"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIPv6" desc="(CLjava/lang/String;ZZ)Z" line="120"><counter type="INSTRUCTION" missed="7" covered="159"/><counter type="BRANCH" missed="12" covered="44"/><counter type="LINE" missed="2" covered="38"/><counter type="COMPLEXITY" missed="11" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasChosenAddressTypes" desc="()Z" line="195"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dysfunctionReason" desc="()Ljava/lang/String;" line="203"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="425"/><counter type="BRANCH" missed="27" covered="79"/><counter type="LINE" missed="2" covered="80"/><counter type="COMPLEXITY" missed="22" covered="41"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/AvoidMultipleUnaryOperatorsRule"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTUnaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTUnaryExpressionNotPlusMinus;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkUnaryDescendent" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/CheckSkipResultRule"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/AvoidUsingOctalValuesRule"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/CheckResultSetRule"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResultSetVariableName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="167"/><counter type="BRANCH" missed="1" covered="31"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/BrokenNullCheckRule"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForViolations" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTIfStatement;Ljava/lang/Object;Lnet/sourceforge/pmd/lang/ast/Node;)V" line="47"><counter type="INSTRUCTION" missed="1" covered="89"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primaryExpressionsAreEqual" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;)Z" line="100"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findExpressionNames" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/util/List;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNullCompareExpression" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEqualityExpression;)Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;" line="157"><counter type="INSTRUCTION" missed="4" covered="34"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="289"/><counter type="BRANCH" missed="5" covered="53"/><counter type="LINE" missed="4" covered="70"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/basic/AvoidBranchingStatementAsLastInLoopRule"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBreakStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTContinueStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lnet/sourceforge/pmd/lang/rule/properties/EnumeratedMultiProperty;Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPropertyValue" desc="(Lnet/sourceforge/pmd/lang/rule/properties/EnumeratedMultiProperty;Ljava/lang/String;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checksNothing" desc="()Z" line="97"><counter type="INSTRUCTION" missed="14" covered="8"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dysfunctionReason" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="189"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OverrideBothEqualsAndHashcodeRule.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="4"/><line nr="34" mi="0" ci="3" mb="1" cb="1"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="1" cb="1"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="4"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="1" cb="1"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="2"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="4"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="15" mb="0" cb="8"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="185"/><counter type="BRANCH" missed="3" covered="35"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleCheckedLockingRule.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="12" mb="0" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="1" cb="3"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="4"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="1" cb="1"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="1" cb="1"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="1" cb="1"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="1" cb="1"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="1" cb="1"/><line nr="135" mi="0" ci="5" mb="1" cb="1"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="1" cb="1"/><line nr="138" mi="0" ci="5" mb="1" cb="1"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="10" mb="0" cb="2"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="1" cb="3"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="56" mb="5" cb="11"/><line nr="174" mi="0" ci="11" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="1" cb="3"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="10" mb="0" cb="2"/><line nr="186" mi="0" ci="5" mb="0" cb="2"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="2"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="9" mb="2" cb="2"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="2" cb="2"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="1" cb="1"/><line nr="206" mi="0" ci="12" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="2"/><line nr="208" mi="0" ci="9" mb="2" cb="2"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="9" mb="1" cb="3"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="9" mb="2" cb="2"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="2"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="2"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="9" mb="1" cb="3"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="4"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="9" mb="1" cb="3"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="546"/><counter type="BRANCH" missed="28" covered="92"/><counter type="LINE" missed="1" covered="104"/><counter type="COMPLEXITY" missed="28" covered="42"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BigIntegerInstantiationRule.java"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="1" cb="1"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="13" mb="0" cb="2"/><line nr="36" mi="0" ci="16" mb="1" cb="7"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="2"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="10" mb="1" cb="3"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="14" mb="1" cb="7"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="107"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidUsingHardCodedIPRule.java"><line nr="20" mi="0" ci="49" mb="0" cb="0"/><line nr="28" mi="0" ci="14" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="13" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="19" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="1" cb="1"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="17" mb="0" cb="6"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="1" ci="9" mb="1" cb="3"/><line nr="88" mi="13" ci="7" mb="9" cb="1"/><line nr="96" mi="0" ci="12" mb="1" cb="5"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="8" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="1" cb="3"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="3" ci="12" mb="3" cb="5"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="2"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="2" cb="2"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="11" mb="2" cb="2"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="2"/><line nr="177" mi="0" ci="2" mb="0" cb="2"/><line nr="178" mi="0" ci="12" mb="2" cb="4"/><line nr="180" mi="0" ci="12" mb="2" cb="4"/><line nr="183" mi="0" ci="2" mb="0" cb="2"/><line nr="184" mi="0" ci="9" mb="1" cb="3"/><line nr="186" mi="0" ci="9" mb="0" cb="4"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="1" ci="9" mb="1" cb="1"/><line nr="203" mi="1" ci="6" mb="1" cb="1"/><counter type="INSTRUCTION" missed="23" covered="425"/><counter type="BRANCH" missed="27" covered="79"/><counter type="LINE" missed="2" covered="80"/><counter type="COMPLEXITY" missed="22" covered="41"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CheckResultSetRule.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="16" mb="0" cb="8"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="1" cb="1"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="6"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="19" mb="0" cb="10"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="2"/><line nr="82" mi="0" ci="10" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="2"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="167"/><counter type="BRANCH" missed="1" covered="31"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidBranchingStatementAsLastInLoopRule.java"><line nr="24" mi="0" ci="15" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="15" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="31" mi="0" ci="10" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="2"/><line nr="74" mi="0" ci="5" mb="0" cb="2"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="2"/><line nr="88" mi="0" ci="6" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="14" ci="8" mb="5" cb="1"/><line nr="107" mi="2" ci="5" mb="1" cb="1"/><counter type="INSTRUCTION" missed="16" covered="189"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidUsingOctalValuesRule.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="10" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="2"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="4"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CheckSkipResultRule.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="1" cb="3"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="11" mb="0" cb="2"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="1" cb="3"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="1" cb="1"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="1" cb="1"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="1" cb="3"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BrokenNullCheckRule.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="2"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="2"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="4"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="4"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="2"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="2"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="2"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="15" mb="0" cb="4"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="1" cb="1"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="2"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="1" cb="1"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="10" mb="1" cb="1"/><line nr="161" mi="0" ci="4" mb="1" cb="1"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="289"/><counter type="BRANCH" missed="5" covered="53"/><counter type="LINE" missed="4" covered="70"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidMultipleUnaryOperatorsRule.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="1" cb="1"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="4"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="1" cb="1"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="30" mb="3" cb="7"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="4"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="2"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanInstantiationRule.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="1" cb="3"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="8" mb="0" cb="4"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="16" mb="1" cb="3"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="1" cb="1"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="5" ci="7" mb="3" cb="3"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="145"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="69" covered="2286"/><counter type="BRANCH" missed="91" covered="401"/><counter type="LINE" missed="11" covered="469"/><counter type="COMPLEXITY" missed="83" covered="224"/><counter type="METHOD" missed="0" covered="61"/><counter type="CLASS" missed="0" covered="11"/></package><package name="net/sourceforge/pmd/lang/java/javadoc"><class name="net/sourceforge/pmd/lang/java/javadoc/JavadocTag"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tagFor" desc="(Ljava/lang/String;)Lnet/sourceforge/pmd/lang/java/javadoc/JavadocTag;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allTagIds" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="76"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JavadocTag.java"><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="1" cb="1"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="76"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="76"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="net/sourceforge/pmd/lang/java/rule/unnecessary"><class name="net/sourceforge/pmd/lang/java/rule/unnecessary/UnnecessaryConversionTemporaryRule"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix;Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="127"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/unnecessary/UselessOverridingMethodRule"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMethodType" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/String;)Z" line="72"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMethodThrowingType" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/util/List;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasArguments" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="10" covered="343"/><counter type="BRANCH" missed="7" covered="57"/><counter type="LINE" missed="2" covered="64"/><counter type="COMPLEXITY" missed="7" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFirstDegreeChildrenOfType" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Class;)Ljava/util/List;" line="226"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lclFindChildrenOfType" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Class;Ljava/util/List;)V" line="232"><counter type="INSTRUCTION" missed="14" covered="33"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="509"/><counter type="BRANCH" missed="17" covered="73"/><counter type="LINE" missed="5" covered="105"/><counter type="COMPLEXITY" missed="15" covered="41"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/unnecessary/UselessOperationOnImmutableRule"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclaration" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration;)Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;" line="90"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="263"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="351"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/unnecessary/UnnecessaryReturnRule"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UnnecessaryConversionTemporaryRule.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="33" mb="0" cb="0"/><line nr="26" mi="0" ci="15" mb="1" cb="5"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="2" cb="2"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="4"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="52" mi="0" ci="5" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="127"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UselessOperationOnImmutableRule.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="80" mb="0" cb="0"/><line nr="34" mi="0" ci="104" mb="0" cb="0"/><line nr="39" mi="0" ci="44" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="2"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="2"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="351"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryReturnRule.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="2"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="19" mb="2" cb="6"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UselessOverridingMethodRule.java"><line nr="42" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="1" cb="1"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="1" cb="1"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="10" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="1" cb="1"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="12" mb="1" cb="7"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="23" mb="3" cb="7"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="1" cb="1"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="4"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="2"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="5" mb="1" cb="1"/><line nr="178" mi="0" ci="10" mb="0" cb="2"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="2"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="4"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="1" cb="1"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="2"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="2"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="1" cb="1"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="3" mb="3" cb="1"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="3" mb="3" cb="1"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="8" mb="0" cb="2"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="2"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="509"/><counter type="BRANCH" missed="17" covered="73"/><counter type="LINE" missed="5" covered="105"/><counter type="COMPLEXITY" missed="15" covered="41"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="29" covered="1026"/><counter type="BRANCH" missed="23" covered="109"/><counter type="LINE" missed="6" covered="164"/><counter type="COMPLEXITY" missed="21" covered="68"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="4"/></package><package name="net/sourceforge/pmd/lang/java/rule/strictexception"><class name="net/sourceforge/pmd/lang/java/rule/strictexception/SignatureDeclareThrowsExceptionRule"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateExceptions" desc="(Ljava/util/List;Ljava/lang/Object;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasDeclaredExceptionInSignature" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParentSignatureDeclaration" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;)Z" line="107"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="139"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strictexception/AvoidCatchingThrowableRule"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strictexception/ExceptionAsFlowControlRule"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTThrowStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SignatureDeclareThrowsExceptionRule.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="2"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="13" mb="0" cb="6"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="1" cb="3"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="1" ci="9" mb="1" cb="3"/><counter type="INSTRUCTION" missed="1" covered="139"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidCatchingThrowableRule.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="2"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExceptionAsFlowControlRule.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="2"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="13" mb="0" cb="2"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="2"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="1" cb="3"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1" covered="235"/><counter type="BRANCH" missed="3" covered="37"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="3" covered="29"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="3"/></package><package name="net/sourceforge/pmd/lang/java/rule/strings"><class name="net/sourceforge/pmd/lang/java/rule/strings/StringInstantiationRule"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="2" covered="73"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/UseIndexOfCharRule"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetTypename" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodNames" desc="()[Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isViolationArgument" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/StringToStringRule"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="5" covered="61"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotAMethodReference" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;)Z" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotAName" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;)Z" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotA" desc="(Lnet/sourceforge/pmd/lang/symboltable/NameOccurrence;Ljava/lang/Class;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="88"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/ConsecutiveLiteralAppendsRule"><method name="&lt;init&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="2" covered="194"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkConstructor" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)I" line="170"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInitializerExpressions" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;)I" line="196"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasInitializer" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;)Z" line="230"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processAdditive" desc="(Ljava/lang/Object;ILnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/ast/Node;)I" line="234"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAdditive" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="288"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstParentBlock" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="314"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSwitchParent" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="339"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForViolation" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Object;I)V" line="359"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAppendingStringLiteral" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="366"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStringBuffer" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;)Z" line="375"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="619"/><counter type="BRANCH" missed="11" covered="119"/><counter type="LINE" missed="1" covered="157"/><counter type="COMPLEXITY" missed="11" covered="67"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/InefficientEmptyStringCheckRule"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTargetMethod" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence;)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appliesToClassName" desc="(Ljava/lang/String;)Z" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/AvoidDuplicateLiteralsRule"><method name="&lt;init&gt;" desc="()V" line="90"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineReader" desc="()Ljava/io/LineNumberReader;" line="104"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="35" covered="48"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="9" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processResults" desc="(Ljava/lang/Object;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="157"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkFile" desc="(Ljava/io/File;)Ljava/lang/String;" line="192"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dysfunctionReason" desc="()Ljava/lang/String;" line="211"><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="115" covered="281"/><counter type="BRANCH" missed="15" covered="19"/><counter type="LINE" missed="23" covered="55"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/AvoidDuplicateLiteralsRule$ExceptionParser"><method name="&lt;init&gt;" desc="(C)V" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Set;" line="63"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/AppendCharacterWithCharRule"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/UseStringBufferLengthRule"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isViolation" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqualsViolation" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="114"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLengthViolation" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="128"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="142"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/InefficientStringBufferingRule"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAdditiveExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="0" covered="169"/><counter type="BRANCH" missed="3" covered="47"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStringType" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;)Z" line="109"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitiveType" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;)Z" line="123"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeNode" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;)Lnet/sourceforge/pmd/lang/java/ast/ASTType;" line="131"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInStringBufferOperation" desc="(Lnet/sourceforge/pmd/lang/ast/Node;ILjava/lang/String;)Z" line="145"><counter type="INSTRUCTION" missed="2" covered="53"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllocatedStringBuffer" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAdditiveExpression;)Z" line="169"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="326"/><counter type="BRANCH" missed="11" covered="77"/><counter type="LINE" missed="2" covered="82"/><counter type="COMPLEXITY" missed="11" covered="40"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/InsufficientStringBufferDeclarationRule"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="197"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="storeBlockStatistics" desc="(Ljava/util/Map;ILnet/sourceforge/pmd/lang/ast/Node;)V" line="129"><counter type="INSTRUCTION" missed="5" covered="53"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processBlocks" desc="(Ljava/util/Map;)I" line="152"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processAdditive" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)I" line="166"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStringOrCharLiteral" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;)Z" line="183"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processNode" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)I" line="187"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstructorLength" desc="(Lnet/sourceforge/pmd/lang/ast/Node;I)I" line="221"><counter type="INSTRUCTION" missed="5" covered="128"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="2" covered="38"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInitialLength" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)I" line="294"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstructorAppendsLength" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)I" line="315"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAdditive" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="336"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstParentBlock" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="351"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSwitchParent" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;" line="376"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="758"/><counter type="BRANCH" missed="14" covered="130"/><counter type="LINE" missed="4" covered="188"/><counter type="COMPLEXITY" missed="14" covered="72"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/UselessStringValueOfRule"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="7" covered="137"/><counter type="BRANCH" missed="7" covered="31"/><counter type="LINE" missed="1" covered="26"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitive" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="196"/><counter type="BRANCH" missed="13" covered="43"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="13" covered="18"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/ConsecutiveAppendsShouldReuseRule"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlockStatement;Ljava/lang/Object;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextBlockStatementSibling" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/java/ast/ASTBlockStatement;" line="71"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableAppended" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBlockStatement;)Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="0" covered="164"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAStringBuilderBuffer" desc="(Lnet/sourceforge/pmd/lang/java/ast/AbstractJavaNode;Ljava/lang/String;)Z" line="152"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFirstChild" desc="(Lnet/sourceforge/pmd/lang/ast/Node;Ljava/lang/Class;)Z" line="162"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="285"/><counter type="BRANCH" missed="8" covered="58"/><counter type="LINE" missed="0" covered="70"/><counter type="COMPLEXITY" missed="8" covered="31"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/rule/strings/UnnecessaryCaseChangeRule"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="16"><counter type="INSTRUCTION" missed="4" covered="55"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBadPrefixOrNull" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;I)I" line="45"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBadSuffixOrNull" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;I)Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="139"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="4" covered="32"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UseIndexOfCharRule.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="12" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InefficientStringBufferingRule.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="2"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="12" mb="2" cb="6"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="2"/><line nr="68" mi="0" ci="7" mb="0" cb="4"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="4"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="2"/><line nr="80" mi="0" ci="8" mb="0" cb="4"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="4"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="6" mb="1" cb="1"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="2"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="2"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="1" cb="3"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="4"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="2"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="1" cb="1"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="12" mb="2" cb="4"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="1" cb="3"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="1" cb="1"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="1" cb="3"/><counter type="INSTRUCTION" missed="4" covered="326"/><counter type="BRANCH" missed="11" covered="77"/><counter type="LINE" missed="2" covered="82"/><counter type="COMPLEXITY" missed="11" covered="40"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseStringBufferLengthRule.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="2"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="17" mb="2" cb="6"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="10" mb="1" cb="1"/><line nr="106" mi="0" ci="12" mb="0" cb="4"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="2"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="15" mb="0" cb="4"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="142"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UselessStringValueOfRule.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="4"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="2"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="1" cb="1"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="1" cb="1"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="1" cb="1"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="2"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="1" cb="5"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="2" cb="4"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="2"/><line nr="58" mi="2" ci="8" mb="1" cb="1"/><line nr="60" mi="0" ci="11" mb="0" cb="4"/><line nr="61" mi="0" ci="9" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="1" cb="3"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="2" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="2" cb="2"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="1" cb="1"/><line nr="86" mi="0" ci="8" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="196"/><counter type="BRANCH" missed="13" covered="43"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="13" covered="18"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryCaseChangeRule.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="2"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="2"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="1" cb="1"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="1" cb="1"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="1" cb="3"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="2"/><line nr="49" mi="0" ci="9" mb="0" cb="4"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="1" cb="1"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="6"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="1" cb="1"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="2" cb="4"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="139"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="4" covered="32"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidDuplicateLiteralsRule.java"><line nr="35" mi="0" ci="13" mb="0" cb="0"/><line nr="38" mi="0" ci="13" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="2"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="2"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="14" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="1" cb="1"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="2" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="9" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="12" mb="0" cb="2"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="19" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="2"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="11" mb="0" cb="2"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="10" mb="1" cb="3"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="2"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="2" cb="0"/><line nr="193" mi="12" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="2" cb="0"/><line nr="196" mi="12" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="2" cb="0"/><line nr="199" mi="12" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="1" cb="1"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="2" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="2" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="115" covered="356"/><counter type="BRANCH" missed="15" covered="29"/><counter type="LINE" missed="23" covered="76"/><counter type="COMPLEXITY" missed="11" covered="21"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="StringToStringRule.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="2"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="11" mb="0" cb="2"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="2"/><line nr="27" mi="0" ci="12" mb="0" cb="6"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="1" cb="5"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="1" cb="3"/><counter type="INSTRUCTION" missed="5" covered="88"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InefficientEmptyStringCheckRule.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="4"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="4"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="53" mi="0" ci="10" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="2"/><line nr="59" mi="0" ci="10" mb="0" cb="6"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AppendCharacterWithCharRule.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="2"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="2"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InsufficientStringBufferDeclarationRule.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="2"/><line nr="75" mi="0" ci="8" mb="0" cb="4"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="1" cb="3"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="13" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="4"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="4"/><line nr="110" mi="0" ci="13" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="2"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="2"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="1" cb="1"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="11" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="13" mb="0" cb="2"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="1" cb="1"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="8" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="1" cb="3"/><line nr="175" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="1" cb="3"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="1" cb="1"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="2"/><line nr="191" mi="0" ci="8" mb="1" cb="3"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="2"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="8" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="1" cb="3"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="8" mb="1" cb="3"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="2"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="2"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="1" cb="1"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="2"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="2"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="2"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="2"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="2"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="2"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="7" mb="1" cb="3"/><line nr="272" mi="0" ci="7" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="2"/><line nr="281" mi="0" ci="3" mb="1" cb="1"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="2"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="2"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="2"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="4"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="2"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="2"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="1" cb="1"/><line nr="322" mi="0" ci="8" mb="0" cb="2"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="6" mb="0" cb="4"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="11" mb="0" cb="4"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="7" mb="0" cb="4"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="3" mb="0" cb="2"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="2"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="7" mb="1" cb="1"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="2"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="2"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="758"/><counter type="BRANCH" missed="14" covered="130"/><counter type="LINE" missed="4" covered="188"/><counter type="COMPLEXITY" missed="14" covered="72"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringInstantiationRule.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="2"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="2"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="2"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="13" mb="0" cb="2"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="1" cb="1"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="1" cb="3"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConsecutiveLiteralAppendsRule.java"><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="14" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="2"/><line nr="106" mi="0" ci="10" mb="0" cb="2"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="2"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="4"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="2" ci="18" mb="2" cb="10"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="2"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="2"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="2"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="2"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="9" mb="0" cb="6"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="8" mb="0" cb="2"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="4"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="2"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="7" mb="1" cb="3"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="1" cb="3"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="1" cb="3"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="9" mb="0" cb="6"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="10" mb="0" cb="2"/><line nr="243" mi="0" ci="6" mb="1" cb="3"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="2"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="8" mb="0" cb="2"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="8" mb="0" cb="4"/><line nr="257" mi="0" ci="2" mb="1" cb="1"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="2"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="2"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="8" mb="0" cb="2"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="2"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="7" mb="0" cb="4"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="2"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="2"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="7" mb="1" cb="1"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="2"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="2"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="4" mb="0" cb="2"/><line nr="360" mi="0" ci="8" mb="0" cb="0"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="367" mi="0" ci="6" mb="1" cb="3"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="2"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="2" cb="2"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="619"/><counter type="BRANCH" missed="11" covered="119"/><counter type="LINE" missed="1" covered="157"/><counter type="COMPLEXITY" missed="11" covered="67"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConsecutiveAppendsShouldReuseRule.java"><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="2"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="4"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="1" cb="1"/><line nr="74" mi="0" ci="5" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="2"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="1" cb="1"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="2"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="1" cb="1"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="2"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="2"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="4"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="1" cb="1"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="1" cb="1"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="4"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="1" cb="1"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="2"/><line nr="154" mi="0" ci="10" mb="1" cb="3"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="11" mb="0" cb="4"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="285"/><counter type="BRANCH" missed="8" covered="58"/><counter type="LINE" missed="0" covered="70"/><counter type="COMPLEXITY" missed="8" covered="31"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="157" covered="3123"/><counter type="BRANCH" missed="86" covered="572"/><counter type="LINE" missed="37" covered="737"/><counter type="COMPLEXITY" missed="82" covered="328"/><counter type="METHOD" missed="2" covered="79"/><counter type="CLASS" missed="0" covered="14"/></package><package name="net/sourceforge/pmd/lang/java/typeresolution"><class name="net/sourceforge/pmd/lang/java/typeresolution/TypeHelper"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isA" desc="(Lnet/sourceforge/pmd/lang/java/ast/TypeNode;Ljava/lang/Class;)Z" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEither" desc="(Lnet/sourceforge/pmd/lang/java/ast/TypeNode;Ljava/lang/Class;Ljava/lang/Class;)Z" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isA" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/TypedNameDeclaration;Ljava/lang/Class;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEither" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/TypedNameDeclaration;Ljava/lang/Class;Ljava/lang/Class;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNeither" desc="(Lnet/sourceforge/pmd/lang/java/symboltable/TypedNameDeclaration;Ljava/lang/Class;Ljava/lang/Class;)Z" line="38"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subclasses" desc="(Lnet/sourceforge/pmd/lang/java/ast/TypeNode;Ljava/lang/Class;)Z" line="42"><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="123"/><counter type="BRANCH" missed="4" covered="34"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="5" covered="21"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/typeresolution/PMDASMClassLoader"><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/ClassLoader;)Lnet/sourceforge/pmd/lang/java/typeresolution/PMDASMClassLoader;" line="57"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadClass" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="67"><counter type="INSTRUCTION" missed="13" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couldResolve" desc="(Ljava/lang/String;)Z" line="93"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImportedClasses" desc="(Ljava/lang/String;)Ljava/util/Map;" line="97"><counter type="INSTRUCTION" missed="78" covered="104"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="91" covered="163"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="6" covered="34"/><counter type="COMPLEXITY" missed="11" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/typeresolution/TypeResolutionFacade"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeWith" desc="(Ljava/lang/ClassLoader;Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver"><method name="&lt;init&gt;" desc="()V" line="137"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="147"><counter type="INSTRUCTION" missed="54" covered="55"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="6" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="175"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="190"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="197"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="212"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="218"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="224"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;" line="236"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="258"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="265"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;" line="272"><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTType;Ljava/lang/Object;)Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTReferenceType;Ljava/lang/Object;)Ljava/lang/Object;" line="291"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimitiveType;Ljava/lang/Object;)Ljava/lang/Object;" line="298"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="304"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="311"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="322"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTConditionalAndExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="328"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTInclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="334"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTExclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="341"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAndExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="348"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTEqualityExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="355"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTInstanceOfExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="361"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTRelationalExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="367"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTShiftExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="373"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAdditiveExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="381"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMultiplicativeExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="388"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTUnaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="395"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPreIncrementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="402"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPreDecrementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="409"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTUnaryExpressionNotPlusMinus;Ljava/lang/Object;)Ljava/lang/Object;" line="416"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPostfixExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="427"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCastExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="434"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="441"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;" line="452"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix;Ljava/lang/Object;)Ljava/lang/Object;" line="463"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTNullLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="471"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTBooleanLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="476"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="482"><counter type="INSTRUCTION" missed="5" covered="62"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="507"><counter type="INSTRUCTION" missed="1" covered="28"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="537"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTNormalAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="544"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTMarkerAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="551"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTSingleMemberAnnotation;Ljava/lang/Object;)Ljava/lang/Object;" line="558"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rollupTypeUnary" desc="(Lnet/sourceforge/pmd/lang/java/ast/TypeNode;)V" line="565"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rollupTypeUnaryNumericPromotion" desc="(Lnet/sourceforge/pmd/lang/java/ast/TypeNode;)V" line="576"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rollupTypeBinaryNumericPromotion" desc="(Lnet/sourceforge/pmd/lang/java/ast/TypeNode;)V" line="595"><counter type="INSTRUCTION" missed="0" covered="135"/><counter type="BRANCH" missed="4" covered="38"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="populateType" desc="(Lnet/sourceforge/pmd/lang/java/ast/TypeNode;Ljava/lang/String;)V" line="631"><counter type="INSTRUCTION" missed="11" covered="110"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="4" covered="24"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classNameExists" desc="(Ljava/lang/String;)Z" line="684"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadClass" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="695"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processOnDemand" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="702"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassName" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)Ljava/lang/String;" line="712"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="populateImports" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;)V" line="730"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="populateClassName" desc="(Lnet/sourceforge/pmd/lang/java/ast/ASTCompilationUnit;Ljava/lang/String;)V" line="748"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="234"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="90" covered="1363"/><counter type="BRANCH" missed="25" covered="131"/><counter type="LINE" missed="18" covered="315"/><counter type="COMPLEXITY" missed="23" covered="112"/><counter type="METHOD" missed="0" covered="57"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ClassTypeResolver.java"><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="2"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="2"/><line nr="157" mi="0" ci="15" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="2" cb="0"/><line nr="161" mi="15" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="2" cb="0"/><line nr="165" mi="15" ci="0" mb="0" cb="0"/><line nr="168" mi="12" ci="6" mb="0" cb="0"/><line nr="169" mi="2" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="1" cb="1"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="2"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="13" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="8" mb="1" cb="3"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="2"/><line nr="243" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="2"/><line nr="250" mi="0" ci="7" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="2" cb="2"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="2"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="1" cb="1"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="5" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="0" ci="5" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="2" mb="0" cb="0"/><line nr="416" mi="0" ci="5" mb="0" cb="0"/><line nr="417" mi="0" ci="5" mb="0" cb="2"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="3" mb="0" cb="0"/><line nr="422" mi="0" ci="2" mb="0" cb="0"/><line nr="427" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="5" mb="0" cb="0"/><line nr="442" mi="0" ci="4" mb="0" cb="2"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="5" mb="0" cb="0"/><line nr="453" mi="0" ci="3" mb="1" cb="1"/><line nr="454" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="2" mb="0" cb="0"/><line nr="463" mi="0" ci="5" mb="0" cb="0"/><line nr="465" mi="0" ci="2" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="476" mi="0" ci="4" mb="0" cb="0"/><line nr="477" mi="0" ci="5" mb="0" cb="0"/><line nr="482" mi="0" ci="5" mb="0" cb="0"/><line nr="483" mi="0" ci="3" mb="0" cb="2"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="486" mi="0" ci="3" mb="0" cb="2"/><line nr="487" mi="0" ci="5" mb="0" cb="0"/><line nr="488" mi="0" ci="3" mb="0" cb="2"/><line nr="489" mi="0" ci="5" mb="0" cb="0"/><line nr="490" mi="0" ci="3" mb="0" cb="2"/><line nr="491" mi="0" ci="5" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="2"/><line nr="493" mi="0" ci="5" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="2"/><line nr="495" mi="0" ci="5" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="1" cb="1"/><line nr="497" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="5" ci="0" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="0" ci="5" mb="0" cb="0"/><line nr="509" mi="1" ci="18" mb="2" cb="6"/><line nr="530" mi="0" ci="3" mb="0" cb="0"/><line nr="532" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="0" ci="5" mb="0" cb="0"/><line nr="538" mi="0" ci="3" mb="0" cb="0"/><line nr="539" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="5" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="546" mi="0" ci="2" mb="0" cb="0"/><line nr="551" mi="0" ci="5" mb="0" cb="0"/><line nr="552" mi="0" ci="3" mb="0" cb="0"/><line nr="553" mi="0" ci="2" mb="0" cb="0"/><line nr="558" mi="0" ci="5" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="0"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="0"/><line nr="566" mi="0" ci="4" mb="0" cb="2"/><line nr="567" mi="0" ci="4" mb="0" cb="0"/><line nr="568" mi="0" ci="3" mb="0" cb="2"/><line nr="569" mi="0" ci="5" mb="0" cb="0"/><line nr="572" mi="0" ci="1" mb="0" cb="0"/><line nr="576" mi="0" ci="2" mb="0" cb="0"/><line nr="577" mi="0" ci="4" mb="1" cb="1"/><line nr="578" mi="0" ci="4" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="1" cb="1"/><line nr="580" mi="0" ci="4" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="1" cb="1"/><line nr="582" mi="0" ci="15" mb="0" cb="6"/><line nr="584" mi="0" ci="5" mb="0" cb="0"/><line nr="586" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="0" ci="1" mb="0" cb="0"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="596" mi="0" ci="4" mb="1" cb="1"/><line nr="597" mi="0" ci="4" mb="0" cb="0"/><line nr="598" mi="0" ci="4" mb="0" cb="0"/><line nr="599" mi="0" ci="6" mb="2" cb="2"/><line nr="600" mi="0" ci="4" mb="0" cb="0"/><line nr="601" mi="0" ci="4" mb="0" cb="0"/><line nr="602" mi="0" ci="4" mb="0" cb="4"/><line nr="604" mi="0" ci="10" mb="0" cb="4"/><line nr="605" mi="0" ci="5" mb="0" cb="0"/><line nr="606" mi="0" ci="10" mb="1" cb="3"/><line nr="607" mi="0" ci="5" mb="0" cb="0"/><line nr="608" mi="0" ci="10" mb="0" cb="4"/><line nr="609" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="10" mb="0" cb="4"/><line nr="611" mi="0" ci="5" mb="0" cb="0"/><line nr="612" mi="0" ci="10" mb="0" cb="4"/><line nr="613" mi="0" ci="5" mb="0" cb="0"/><line nr="615" mi="0" ci="5" mb="0" cb="0"/><line nr="617" mi="0" ci="4" mb="0" cb="4"/><line nr="620" mi="0" ci="14" mb="0" cb="8"/><line nr="622" mi="0" ci="4" mb="0" cb="0"/><line nr="627" mi="0" ci="1" mb="0" cb="0"/><line nr="631" mi="0" ci="2" mb="0" cb="0"/><line nr="632" mi="0" ci="5" mb="0" cb="0"/><line nr="633" mi="0" ci="5" mb="1" cb="3"/><line nr="634" mi="0" ci="5" mb="0" cb="2"/><line nr="635" mi="0" ci="7" mb="0" cb="0"/><line nr="636" mi="0" ci="5" mb="0" cb="2"/><line nr="637" mi="0" ci="2" mb="0" cb="0"/><line nr="639" mi="0" ci="2" mb="1" cb="1"/><line nr="646" mi="0" ci="5" mb="0" cb="0"/><line nr="647" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="0" ci="4" mb="0" cb="0"/><line nr="649" mi="1" ci="0" mb="0" cb="0"/><line nr="650" mi="4" ci="0" mb="0" cb="0"/><line nr="651" mi="1" ci="0" mb="0" cb="0"/><line nr="652" mi="4" ci="0" mb="0" cb="0"/><line nr="653" mi="1" ci="2" mb="0" cb="0"/><line nr="656" mi="0" ci="8" mb="1" cb="5"/><line nr="658" mi="0" ci="22" mb="0" cb="0"/><line nr="661" mi="0" ci="5" mb="0" cb="0"/><line nr="662" mi="0" ci="1" mb="0" cb="0"/><line nr="664" mi="0" ci="1" mb="0" cb="0"/><line nr="666" mi="0" ci="8" mb="1" cb="5"/><line nr="669" mi="0" ci="12" mb="0" cb="0"/><line nr="670" mi="0" ci="1" mb="0" cb="0"/><line nr="672" mi="0" ci="1" mb="0" cb="0"/><line nr="674" mi="0" ci="2" mb="0" cb="2"/><line nr="675" mi="0" ci="3" mb="0" cb="0"/><line nr="677" mi="0" ci="1" mb="0" cb="0"/><line nr="684" mi="0" ci="5" mb="0" cb="0"/><line nr="685" mi="0" ci="2" mb="0" cb="0"/><line nr="686" mi="0" ci="1" mb="0" cb="0"/><line nr="687" mi="0" ci="2" mb="0" cb="0"/><line nr="688" mi="1" ci="0" mb="0" cb="0"/><line nr="689" mi="2" ci="0" mb="0" cb="0"/><line nr="695" mi="0" ci="5" mb="0" cb="0"/><line nr="696" mi="1" ci="0" mb="0" cb="0"/><line nr="697" mi="2" ci="0" mb="0" cb="0"/><line nr="702" mi="0" ci="11" mb="0" cb="2"/><line nr="704" mi="0" ci="14" mb="0" cb="0"/><line nr="705" mi="0" ci="1" mb="0" cb="0"/><line nr="707" mi="0" ci="1" mb="0" cb="0"/><line nr="708" mi="0" ci="2" mb="0" cb="0"/><line nr="712" mi="0" ci="5" mb="0" cb="0"/><line nr="713" mi="0" ci="2" mb="0" cb="2"/><line nr="714" mi="0" ci="2" mb="0" cb="0"/><line nr="716" mi="0" ci="3" mb="0" cb="2"/><line nr="717" mi="0" ci="3" mb="0" cb="0"/><line nr="719" mi="0" ci="3" mb="0" cb="0"/><line nr="720" mi="0" ci="6" mb="0" cb="0"/><line nr="721" mi="0" ci="13" mb="0" cb="0"/><line nr="730" mi="0" ci="4" mb="0" cb="0"/><line nr="732" mi="0" ci="4" mb="0" cb="0"/><line nr="735" mi="0" ci="10" mb="0" cb="2"/><line nr="736" mi="0" ci="3" mb="0" cb="0"/><line nr="737" mi="0" ci="3" mb="0" cb="2"/><line nr="738" mi="0" ci="6" mb="0" cb="0"/><line nr="739" mi="0" ci="3" mb="1" cb="1"/><line nr="740" mi="0" ci="3" mb="0" cb="0"/><line nr="741" mi="0" ci="6" mb="0" cb="0"/><line nr="742" mi="0" ci="11" mb="0" cb="0"/><line nr="744" mi="0" ci="1" mb="0" cb="0"/><line nr="745" mi="0" ci="1" mb="0" cb="0"/><line nr="748" mi="0" ci="6" mb="0" cb="0"/><line nr="749" mi="0" ci="7" mb="0" cb="0"/><line nr="750" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="1363"/><counter type="BRANCH" missed="25" covered="131"/><counter type="LINE" missed="18" covered="315"/><counter type="COMPLEXITY" missed="23" covered="112"/><counter type="METHOD" missed="0" covered="57"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeHelper.java"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="12" mb="0" cb="4"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="24" mb="2" cb="8"/><line nr="34" mi="0" ci="12" mb="0" cb="4"/><line nr="38" mi="0" ci="12" mb="0" cb="4"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="2"/><line nr="44" mi="0" ci="16" mb="1" cb="3"/><line nr="47" mi="0" ci="4" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="1" cb="1"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="4"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="123"/><counter type="BRANCH" missed="4" covered="34"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="5" covered="21"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PMDASMClassLoader.java"><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="2"/><line nr="97" mi="0" ci="5" mb="1" cb="1"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="16" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="1" cb="3"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="10" mb="0" cb="2"/><line nr="110" mi="5" ci="16" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="1" cb="1"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="25" ci="7" mb="6" cb="2"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="26" ci="8" mb="6" cb="2"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="163"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="6" covered="34"/><counter type="COMPLEXITY" missed="11" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeResolutionFacade.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="186" covered="1666"/><counter type="BRANCH" missed="44" covered="182"/><counter type="LINE" missed="27" covered="373"/><counter type="COMPLEXITY" missed="39" covered="146"/><counter type="METHOD" missed="1" covered="71"/><counter type="CLASS" missed="0" covered="4"/></package><package name="net/sourceforge/pmd/lang/java"><class name="net/sourceforge/pmd/lang/java/Java17Parser"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createJavaParser" desc="(Ljava/io/Reader;)Lnet/sourceforge/pmd/lang/java/ast/JavaParser;" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/JavaLanguageModule"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/AbstractJavaHandler"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataFlowHandler" desc="()Lnet/sourceforge/pmd/lang/DataFlowHandler;" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXPathHandler" desc="()Lnet/sourceforge/pmd/lang/XPathHandler;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleViolationFactory" desc="()Lnet/sourceforge/pmd/lang/rule/RuleViolationFactory;" line="54"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataFlowFacade" desc="()Lnet/sourceforge/pmd/lang/VisitorStarter;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSymbolFacade" desc="()Lnet/sourceforge/pmd/lang/VisitorStarter;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSymbolFacade" desc="(Ljava/lang/ClassLoader;)Lnet/sourceforge/pmd/lang/VisitorStarter;" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeResolutionFacade" desc="(Ljava/lang/ClassLoader;)Lnet/sourceforge/pmd/lang/VisitorStarter;" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDumpFacade" desc="(Ljava/io/Writer;Ljava/lang/String;Z)Lnet/sourceforge/pmd/lang/VisitorStarter;" line="95"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDFAGraphRule" desc="()Lnet/sourceforge/pmd/lang/dfa/DFAGraphRule;" line="104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/JavaDataFlowHandler"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDataFlowNode" desc="(Ljava/util/List;Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/dfa/DataFlowNode;" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabelStatementNodeClass" desc="()Ljava/lang/Class;" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java17Handler"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParser" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)Lnet/sourceforge/pmd/lang/Parser;" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java13Handler"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParser" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)Lnet/sourceforge/pmd/lang/Parser;" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/AbstractJavaParser"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTokenManager" desc="(Ljava/io/Reader;)Lnet/sourceforge/pmd/lang/TokenManager;" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createJavaParser" desc="(Ljava/io/Reader;)Lnet/sourceforge/pmd/lang/java/ast/JavaParser;" line="42"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canParse" desc="()Z" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;Ljava/io/Reader;)Lnet/sourceforge/pmd/lang/ast/Node;" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuppressMap" desc="()Ljava/util/Map;" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java14Handler"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParser" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)Lnet/sourceforge/pmd/lang/Parser;" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java15Parser"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createJavaParser" desc="(Ljava/io/Reader;)Lnet/sourceforge/pmd/lang/java/ast/JavaParser;" line="25"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java18Parser"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createJavaParser" desc="(Ljava/io/Reader;)Lnet/sourceforge/pmd/lang/java/ast/JavaParser;" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/JavaTokenManager"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFileName" desc="(Ljava/lang/String;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java16Parser"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createJavaParser" desc="(Ljava/io/Reader;)Lnet/sourceforge/pmd/lang/java/ast/JavaParser;" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java16Handler"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParser" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)Lnet/sourceforge/pmd/lang/Parser;" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java14Parser"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createJavaParser" desc="(Ljava/io/Reader;)Lnet/sourceforge/pmd/lang/java/ast/JavaParser;" line="25"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java18Handler"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParser" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)Lnet/sourceforge/pmd/lang/Parser;" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java13Parser"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createJavaParser" desc="(Ljava/io/Reader;)Lnet/sourceforge/pmd/lang/java/ast/JavaParser;" line="25"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/AbstractJavaHandler$2"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/AbstractJavaHandler;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/AbstractJavaHandler$1"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/AbstractJavaHandler;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialize" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialize" desc="(Lnet/sf/saxon/sxpath/IndependentContext;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/AbstractJavaHandler$4"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/AbstractJavaHandler;Ljava/lang/ClassLoader;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/AbstractJavaHandler$3"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/AbstractJavaHandler;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/AbstractJavaHandler$6"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/AbstractJavaHandler;Ljava/io/Writer;Ljava/lang/String;Z)V" line="95"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="97"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/sourceforge/pmd/lang/java/AbstractJavaHandler$5"><method name="&lt;init&gt;" desc="(Lnet/sourceforge/pmd/lang/java/AbstractJavaHandler;Ljava/lang/ClassLoader;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Lnet/sourceforge/pmd/lang/ast/Node;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/sourceforge/pmd/lang/java/Java15Handler"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParser" desc="(Lnet/sourceforge/pmd/lang/ParserOptions;)Lnet/sourceforge/pmd/lang/Parser;" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractJavaParser.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaLanguageModule.java"><line nr="18" mi="0" ci="12" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java17Parser.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java18Handler.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java16Handler.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java14Handler.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java13Parser.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaTokenManager.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java15Parser.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaDataFlowHandler.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java17Handler.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java15Handler.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java14Parser.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java13Handler.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractJavaHandler.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="15" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="15" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="23" ci="0" mb="0" cb="0"/><line nr="97" mi="12" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="118"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="4" covered="19"/><counter type="METHOD" missed="4" covered="19"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="Java18Parser.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java16Parser.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="44" covered="372"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="6" covered="90"/><counter type="COMPLEXITY" missed="6" covered="55"/><counter type="METHOD" missed="6" covered="54"/><counter type="CLASS" missed="1" covered="22"/></package><counter type="INSTRUCTION" missed="15314" covered="69385"/><counter type="BRANCH" missed="3559" covered="8640"/><counter type="LINE" missed="3009" covered="14383"/><counter type="COMPLEXITY" missed="3031" covered="6343"/><counter type="METHOD" missed="313" covered="2685"/><counter type="CLASS" missed="18" covered="362"/></report>