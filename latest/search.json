[




{
"title": "Adding support for metrics to a language",
"tags": "customizing",
"keywords": "",
"url": "pmd_devdocs_adding_metrics_support_to_language.html",
"summary": "PMD's Java module has an extensive framework for the calculation of metrics, which allows rule developers to implement and use new code metrics very simply. Most of the functionality of this framework is abstracted in such a way that any PMD supported language can implement such a framework without too much trouble. Here's how."
}
,



{
"title": "PMD How to Add a New CPD Language",
"tags": "customizing",
"keywords": "",
"url": "pmd_devdocs_adding_new_cpd_language.html",
"summary": "How to Add a New CPD Language"
}
,



{
"title": "PMD Adding a New Language",
"tags": "customizing",
"keywords": "",
"url": "pmd_devdocs_adding_new_language.html",
"summary": "Adding a New Language to PMD"
}
,



{
"title": "Ant Task Usage",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_tools_ant.html",
"summary": ""
}
,



{
"title": "Apex Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_apex.html",
"summary": ""
}
,



{
"title": "Index of Apex code metrics",
"tags": "customizing",
"keywords": "",
"url": "pmd_apex_metrics_index.html",
"summary": "Index of the code metrics available out of the box to Apex rule developers."
}
,



{
"title": "ApexUnit",
"tags": "",
"keywords": "ApexUnit, ApexUnitTestClassShouldHaveAsserts, ApexUnitTestShouldNotUseSeeAllDataTrue",
"url": "pmd_rules_apex_apexunit.html",
"summary": "These rules deal with different problems that can occur with Apex unit tests."
}
,



{
"title": "Architecture",
"tags": "",
"keywords": "",
"url": "pmd_devdocs_architecture.html",
"summary": ""
}
,



{
"title": "Basic",
"tags": "",
"keywords": "Basic, JumbledIncrementer, ForLoopShouldBeWhileLoop, OverrideBothEqualsAndHashcode, DoubleCheckedLocking, ReturnFromFinallyBlock, UnconditionalIfStatement, BooleanInstantiation, CollapsibleIfStatements, ClassCastExceptionWithToArray, AvoidDecimalLiteralsInBigDecimalConstructor, MisplacedNullCheck, AvoidThreadGroup, BrokenNullCheck, BigIntegerInstantiation, AvoidUsingOctalValues, AvoidUsingHardCodedIP, CheckResultSet, AvoidMultipleUnaryOperators, ExtendsObject, CheckSkipResult, AvoidBranchingStatementAsLastInLoop, DontCallThreadRun, DontUseFloatTypeForLoopIndices, SimplifiedTernary",
"url": "pmd_rules_java_basic.html",
"summary": "The Basic ruleset contains a collection of good practices which should be followed."
}
,



{
"title": "Best Practices",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_best_practices.html",
"summary": ""
}
,



{
"title": "Best Practices",
"tags": "",
"keywords": "Best Practices, ApexUnitTestClassShouldHaveAsserts, ApexUnitTestShouldNotUseSeeAllDataTrue, AvoidGlobalModifier, AvoidLogicInTrigger",
"url": "pmd_rules_apex_bestpractices.html",
"summary": "Rules which enforce generally accepted best practices."
}
,



{
"title": "Best Practices",
"tags": "",
"keywords": "Best Practices, AvoidWithStatement, ConsistentReturn, GlobalVariable, ScopeForInVariable, UseBaseWithParseInt",
"url": "pmd_rules_ecmascript_bestpractices.html",
"summary": "Rules which enforce generally accepted best practices."
}
,



{
"title": "Best Practices",
"tags": "",
"keywords": "Best Practices, AbstractClassWithoutAbstractMethod, AccessorClassGeneration, AccessorMethodGeneration, ArrayIsStoredDirectly, AvoidPrintStackTrace, AvoidReassigningParameters, AvoidStringBufferField, AvoidUsingHardCodedIP, CheckResultSet, ConstantsInInterface, DefaultLabelNotLastInSwitchStmt, ForLoopCanBeForeach, GuardLogStatement, JUnit4SuitesShouldUseSuiteAnnotation, JUnit4TestShouldUseAfterAnnotation, JUnit4TestShouldUseBeforeAnnotation, JUnit4TestShouldUseTestAnnotation, JUnitAssertionsShouldIncludeMessage, JUnitTestContainsTooManyAsserts, JUnitTestsShouldIncludeAssert, JUnitUseExpected, LooseCoupling, MethodReturnsInternalArray, OneDeclarationPerLine, PositionLiteralsFirstInCaseInsensitiveComparisons, PositionLiteralsFirstInComparisons, PreserveStackTrace, ReplaceEnumerationWithIterator, ReplaceHashtableWithMap, ReplaceVectorWithList, SwitchStmtsShouldHaveDefault, SystemPrintln, UnusedFormalParameter, UnusedImports, UnusedLocalVariable, UnusedPrivateField, UnusedPrivateMethod, UseAssertEqualsInsteadOfAssertTrue, UseAssertNullInsteadOfAssertTrue, UseAssertSameInsteadOfAssertTrue, UseAssertTrueInsteadOfAssertEquals, UseCollectionIsEmpty, UseVarargs",
"url": "pmd_rules_java_bestpractices.html",
"summary": "Rules which enforce generally accepted best practices."
}
,



{
"title": "Best Practices",
"tags": "",
"keywords": "Best Practices, DontNestJsfInJstlIteration, NoClassAttribute, NoHtmlComments, NoJspForward",
"url": "pmd_rules_jsp_bestpractices.html",
"summary": "Rules which enforce generally accepted best practices."
}
,



{
"title": "Best Practices",
"tags": "",
"keywords": "Best Practices, TomKytesDespair",
"url": "pmd_rules_plsql_bestpractices.html",
"summary": "Rules which enforce generally accepted best practices."
}
,



{
"title": "Best Practices",
"tags": "",
"keywords": "Best Practices, AvoidReassigningParameters, UnusedMacroParameter",
"url": "pmd_rules_vm_bestpractices.html",
"summary": "Rules which enforce generally accepted best practices."
}
,



{
"title": "Braces",
"tags": "",
"keywords": "Braces, IfStmtsMustUseBraces, WhileLoopsMustUseBraces, IfElseStmtsMustUseBraces, ForLoopsMustUseBraces",
"url": "pmd_rules_apex_braces.html",
"summary": "The Braces ruleset contains rules regarding the use and placement of braces."
}
,



{
"title": "Building PMD from source",
"tags": "",
"keywords": "",
"url": "pmd_devdocs_building.html",
"summary": ""
}
,



{
"title": "Continuous Integrations plugins",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_ci.html",
"summary": ""
}
,



{
"title": "Code Style",
"tags": "",
"keywords": "",
"url": "pmd_devdocs_codestyle.html",
"summary": ""
}
,



{
"title": "Code Style",
"tags": "",
"keywords": "Code Style, ClassNamingConventions, IfElseStmtsMustUseBraces, IfStmtsMustUseBraces, ForLoopsMustUseBraces, MethodNamingConventions, VariableNamingConventions, WhileLoopsMustUseBraces",
"url": "pmd_rules_apex_codestyle.html",
"summary": "Rules which enforce a specific coding style."
}
,



{
"title": "Code Style",
"tags": "",
"keywords": "Code Style, AssignmentInOperand, ForLoopsMustUseBraces, IfElseStmtsMustUseBraces, IfStmtsMustUseBraces, NoElseReturn, UnnecessaryBlock, UnnecessaryParentheses, UnreachableCode, WhileLoopsMustUseBraces",
"url": "pmd_rules_ecmascript_codestyle.html",
"summary": "Rules which enforce a specific coding style."
}
,



{
"title": "Code Style",
"tags": "",
"keywords": "Code Style, AbstractNaming, AtLeastOneConstructor, AvoidDollarSigns, AvoidFinalLocalVariable, AvoidPrefixingMethodParameters, AvoidProtectedFieldInFinalClass, AvoidProtectedMethodInFinalClassNotExtending, AvoidUsingNativeCode, BooleanGetMethodName, CallSuperInConstructor, ClassNamingConventions, CommentDefaultAccessModifier, ConfusingTernary, DefaultPackage, DontImportJavaLang, DuplicateImports, EmptyMethodInAbstractClassShouldBeAbstract, ExtendsObject, FieldDeclarationsShouldBeAtStartOfClass, ForLoopShouldBeWhileLoop, ForLoopsMustUseBraces, GenericsNaming, IfElseStmtsMustUseBraces, IfStmtsMustUseBraces, LocalHomeNamingConvention, LocalInterfaceSessionNamingConvention, LocalVariableCouldBeFinal, LongVariable, MDBAndSessionBeanNamingConvention, MethodArgumentCouldBeFinal, MethodNamingConventions, MIsLeadingVariableName, NoPackage, OnlyOneReturn, PackageCase, PrematureDeclaration, RemoteInterfaceNamingConvention, RemoteSessionInterfaceNamingConvention, ShortClassName, ShortMethodName, ShortVariable, SuspiciousConstantFieldName, TooManyStaticImports, UnnecessaryConstructor, UnnecessaryFullyQualifiedName, UnnecessaryLocalBeforeReturn, UnnecessaryModifier, UnnecessaryReturn, UselessParentheses, UselessQualifiedThis, VariableNamingConventions, WhileLoopsMustUseBraces",
"url": "pmd_rules_java_codestyle.html",
"summary": "Rules which enforce a specific coding style."
}
,



{
"title": "Code Style",
"tags": "",
"keywords": "Code Style, DuplicateJspImports",
"url": "pmd_rules_jsp_codestyle.html",
"summary": "Rules which enforce a specific coding style."
}
,



{
"title": "Code Style",
"tags": "",
"keywords": "Code Style, MisplacedPragma",
"url": "pmd_rules_plsql_codestyle.html",
"summary": "Rules which enforce a specific coding style."
}
,



{
"title": "Code Style",
"tags": "",
"keywords": "Code Style, UseConcatOnce",
"url": "pmd_rules_xsl_codestyle.html",
"summary": "Rules which enforce a specific coding style."
}
,



{
"title": "Finding duplicated code",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_cpd.html",
"summary": "Or how to find copied and pasted code"
}
,



{
"title": "Credits",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_credits.html",
"summary": ""
}
,



{
"title": "Design",
"tags": "",
"keywords": "Design, AvoidDeeplyNestedIfStmts, CyclomaticComplexity, ExcessiveClassLength, ExcessiveParameterList, ExcessivePublicCount, NcssConstructorCount, NcssMethodCount, NcssTypeCount, StdCyclomaticComplexity, TooManyFields",
"url": "pmd_rules_apex_design.html",
"summary": "Rules that help you discover design issues."
}
,



{
"title": "Design",
"tags": "",
"keywords": "Design, AbstractClassWithoutAnyMethod, AvoidCatchingGenericException, AvoidDeeplyNestedIfStmts, AvoidRethrowingException, AvoidThrowingNewInstanceOfSameException, AvoidThrowingNullPointerException, AvoidThrowingRawExceptionTypes, ClassWithOnlyPrivateConstructorsShouldBeFinal, CollapsibleIfStatements, CouplingBetweenObjects, CyclomaticComplexity, DataClass, DoNotExtendJavaLangError, ExceptionAsFlowControl, ExcessiveClassLength, ExcessiveImports, ExcessiveMethodLength, ExcessiveParameterList, ExcessivePublicCount, FinalFieldCouldBeStatic, GodClass, ImmutableField, LawOfDemeter, LogicInversion, LoosePackageCoupling, ModifiedCyclomaticComplexity, NcssConstructorCount, NcssCount, NcssMethodCount, NcssTypeCount, NPathComplexity, SignatureDeclareThrowsException, SimplifiedTernary, SimplifyBooleanAssertion, SimplifyBooleanExpressions, SimplifyBooleanReturns, SimplifyConditional, SingularField, StdCyclomaticComplexity, SwitchDensity, TooManyFields, TooManyMethods, UselessOverridingMethod, UseObjectForClearerAPI, UseUtilityClass",
"url": "pmd_rules_java_design.html",
"summary": "Rules that help you discover design issues."
}
,



{
"title": "Design",
"tags": "",
"keywords": "Design, NoInlineScript, NoInlineStyleInformation, NoLongScripts, NoScriptlets",
"url": "pmd_rules_jsp_design.html",
"summary": "Rules that help you discover design issues."
}
,



{
"title": "Design",
"tags": "",
"keywords": "Design, CyclomaticComplexity, ExcessiveMethodLength, ExcessiveObjectLength, ExcessivePackageBodyLength, ExcessivePackageSpecificationLength, ExcessiveParameterList, ExcessiveTypeLength, NcssMethodCount, NcssObjectCount, NPathComplexity, TooManyFields, TooManyMethods",
"url": "pmd_rules_plsql_design.html",
"summary": "Rules that help you discover design issues."
}
,



{
"title": "Design",
"tags": "",
"keywords": "Design, AvoidDeeplyNestedIfStmts, CollapsibleIfStatements, ExcessiveTemplateLength, NoInlineJavaScript, NoInlineStyles",
"url": "pmd_rules_vm_design.html",
"summary": "Rules that help you discover design issues."
}
,



{
"title": "Developer Resources",
"tags": "",
"keywords": "",
"url": "pmd_devdocs_development.html",
"summary": ""
}
,



{
"title": "Documentation",
"tags": "",
"keywords": "Documentation, CommentContent, CommentRequired, CommentSize, UncommentedEmptyConstructor, UncommentedEmptyMethodBody",
"url": "pmd_rules_java_documentation.html",
"summary": "Rules that are related to code documentation."
}
,



{
"title": "Ecmascript Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_ecmascript.html",
"summary": ""
}
,



{
"title": "Empty Code",
"tags": "",
"keywords": "Empty Code, EmptyCatchBlock, EmptyIfStmt, EmptyTryOrFinallyBlock, EmptyWhileStmt, EmptyStatementBlock",
"url": "pmd_rules_apex_empty.html",
"summary": "The Empty Code ruleset contains rules that find empty statements of any kind (empty method, empty block statement, empty try or catch block,...)."
}
,



{
"title": "Error Prone",
"tags": "",
"keywords": "Error Prone, AvoidDirectAccessTriggerMap, AvoidHardcodingId, EmptyCatchBlock, EmptyIfStmt, EmptyStatementBlock, EmptyTryOrFinallyBlock, EmptyWhileStmt, MethodWithSameNameAsEnclosingClass",
"url": "pmd_rules_apex_errorprone.html",
"summary": "Rules to detect constructs that are either broken, extremely confusing or prone to runtime errors."
}
,



{
"title": "Error Prone",
"tags": "",
"keywords": "Error Prone, AvoidTrailingComma, EqualComparison, InnaccurateNumericLiteral",
"url": "pmd_rules_ecmascript_errorprone.html",
"summary": "Rules to detect constructs that are either broken, extremely confusing or prone to runtime errors."
}
,



{
"title": "Error Prone",
"tags": "",
"keywords": "Error Prone, AssignmentInOperand, AssignmentToNonFinalStatic, AvoidAccessibilityAlteration, AvoidAssertAsIdentifier, AvoidBranchingStatementAsLastInLoop, AvoidCallingFinalize, AvoidCatchingNPE, AvoidCatchingThrowable, AvoidDecimalLiteralsInBigDecimalConstructor, AvoidDuplicateLiterals, AvoidEnumAsIdentifier, AvoidFieldNameMatchingMethodName, AvoidFieldNameMatchingTypeName, AvoidInstanceofChecksInCatchClause, AvoidLiteralsInIfCondition, AvoidLosingExceptionInformation, AvoidMultipleUnaryOperators, AvoidUsingOctalValues, BadComparison, BeanMembersShouldSerialize, BrokenNullCheck, CallSuperFirst, CallSuperLast, CheckSkipResult, ClassCastExceptionWithToArray, CloneMethodMustBePublic, CloneMethodMustImplementCloneable, CloneMethodReturnTypeMustMatchClassName, CloneThrowsCloneNotSupportedException, CloseResource, CompareObjectsWithEquals, ConstructorCallsOverridableMethod, DataflowAnomalyAnalysis, DoNotCallGarbageCollectionExplicitly, DoNotCallSystemExit, DoNotExtendJavaLangThrowable, DoNotHardCodeSDCard, DoNotThrowExceptionInFinally, DontImportSun, DontUseFloatTypeForLoopIndices, EmptyCatchBlock, EmptyFinalizer, EmptyFinallyBlock, EmptyIfStmt, EmptyInitializer, EmptyStatementBlock, EmptyStatementNotInLoop, EmptySwitchStatements, EmptySynchronizedBlock, EmptyTryBlock, EmptyWhileStmt, EqualsNull, FinalizeDoesNotCallSuperFinalize, FinalizeOnlyCallsSuperFinalize, FinalizeOverloaded, FinalizeShouldBeProtected, IdempotentOperations, ImportFromSamePackage, InstantiationToGetClass, InvalidSlf4jMessageFormat, JumbledIncrementer, JUnitSpelling, JUnitStaticSuite, LoggerIsNotStaticFinal, MethodWithSameNameAsEnclosingClass, MisplacedNullCheck, MissingBreakInSwitch, MissingSerialVersionUID, MissingStaticMethodInNonInstantiatableClass, MoreThanOneLogger, NonCaseLabelInSwitchStatement, NonStaticInitializer, NullAssignment, OverrideBothEqualsAndHashcode, ProperCloneImplementation, ProperLogger, ReturnEmptyArrayRatherThanNull, ReturnFromFinallyBlock, SimpleDateFormatNeedsLocale, SingleMethodSingleton, SingletonClassReturningNewInstance, StaticEJBFieldShouldBeFinal, StringBufferInstantiationWithChar, SuspiciousEqualsMethodName, SuspiciousHashcodeMethodName, SuspiciousOctalEscape, TestClassWithoutTestCases, UnconditionalIfStatement, UnnecessaryBooleanAssertion, UnnecessaryCaseChange, UnnecessaryConversionTemporary, UnusedNullCheckInEquals, UseCorrectExceptionLogging, UseEqualsToCompareStrings, UselessOperationOnImmutable, UseLocaleWithCaseConversions, UseProperClassLoader",
"url": "pmd_rules_java_errorprone.html",
"summary": "Rules to detect constructs that are either broken, extremely confusing or prone to runtime errors."
}
,



{
"title": "Error Prone",
"tags": "",
"keywords": "Error Prone, JspEncoding",
"url": "pmd_rules_jsp_errorprone.html",
"summary": "Rules to detect constructs that are either broken, extremely confusing or prone to runtime errors."
}
,



{
"title": "Error Prone",
"tags": "",
"keywords": "Error Prone, TO_DATE_TO_CHAR, TO_DATEWithoutDateFormat, TO_TIMESTAMPWithoutDateFormat",
"url": "pmd_rules_plsql_errorprone.html",
"summary": "Rules to detect constructs that are either broken, extremely confusing or prone to runtime errors."
}
,



{
"title": "Error Prone",
"tags": "",
"keywords": "Error Prone, InvalidDependencyTypes, ProjectVersionAsDependencyVersion",
"url": "pmd_rules_pom_errorprone.html",
"summary": "Rules to detect constructs that are either broken, extremely confusing or prone to runtime errors."
}
,



{
"title": "Error Prone",
"tags": "",
"keywords": "Error Prone, EmptyForeachStmt, EmptyIfStmt",
"url": "pmd_rules_vm_errorprone.html",
"summary": "Rules to detect constructs that are either broken, extremely confusing or prone to runtime errors."
}
,



{
"title": "Error Prone",
"tags": "",
"keywords": "Error Prone, MistypedCDATASection",
"url": "pmd_rules_xml_errorprone.html",
"summary": "Rules to detect constructs that are either broken, extremely confusing or prone to runtime errors."
}
,



{
"title": "FAQ",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_faq.html",
"summary": ""
}
,





{
"title": "Getting Started",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_getting_started.html",
"summary": ""
}
,



{
"title": "Getting Help",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_help.html",
"summary": ""
}
,



{
"title": "How PMD Works",
"tags": "customizing",
"keywords": "",
"url": "pmd_devdocs_how_pmd_works.html",
"summary": "Processing overview of the different steps taken by PMD."
}
,



{
"title": "PMD Introduction",
"tags": "getting_started",
"keywords": "java",
"url": "index.html",
"summary": "Welcome to PMD, an extensible cross-language static code analyzer. It finds common programming flaws like unused variables, empty catch blocks, unnecessary object creation, and so forth. Additionally it includes CPD, the copy-paste-detector. CPD finds duplicated code."
}
,



{
"title": "Java Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_java.html",
"summary": ""
}
,



{
"title": "Index of Java code metrics",
"tags": "customizing",
"keywords": "",
"url": "pmd_java_metrics_index.html",
"summary": "Index of the code metrics available out of the box to Java rule developers."
}
,



{
"title": "JSP Support",
"tags": "",
"keywords": "",
"url": "pmd_languages_jsp.html",
"summary": ""
}
,



{
"title": "Java Server Pages Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_jsp.html",
"summary": ""
}
,



{
"title": "License",
"tags": "",
"keywords": "",
"url": "license.html",
"summary": ""
}
,



{
"title": "PMD Making Rulesets",
"tags": "customizing",
"keywords": "",
"url": "pmd_devdocs_making_rulesets.html",
"summary": "Making Custom Rulesets for PMD"
}
,



{
"title": "Maven PMD Plugin",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_tools_maven.html",
"summary": ""
}
,



{
"title": "What does &#39;PMD&#39; mean?",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_meaning.html",
"summary": ""
}
,



{
"title": "Using code metrics in custom rules",
"tags": "customizing",
"keywords": "",
"url": "pmd_devdocs_metrics_howto.html",
"summary": "PMD was recently enhanced with the ability to compute code metrics on Java and Apex source (the so-called Metrics Framework). This framework provides developers with a straightforward interface to use code metrics in their rules, and to extend the framework with their own custom metrics."
}
,



{
"title": "Multithreading",
"tags": "",
"keywords": "Multithreading, AvoidSynchronizedAtMethodLevel, AvoidThreadGroup, AvoidUsingVolatile, DoNotUseThreads, DontCallThreadRun, DoubleCheckedLocking, NonThreadSafeSingleton, UnsynchronizedStaticDateFormatter, UseConcurrentHashMap, UseNotifyAllInsteadOfNotify",
"url": "pmd_rules_java_multithreading.html",
"summary": "Rules that flag issues when dealing with multiple threads of execution."
}
,



{
"title": "Scroll layout",
"tags": "special_layouts",
"keywords": "json, scrolling, scrollto, jquery plugin",
"url": "jsmydoc_scroll.html",
"summary": "This page demonstrates how you the integration of a script called ScrollTo, which is used here to link definitions of a JSON code sample to a list of definitions for that particular term. The scenario here is that the JSON blocks are really long, with extensive nesting and subnesting, which makes it difficult for tables below the JSON to adequately explain the term in a usable way."
}
,



{
"title": "News",
"tags": "",
"keywords": "news, blog, updates, release notes, announcements",
"url": "news.html",
"summary": ""
}
,



{
"title": "PMD in the press",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_news.html",
"summary": ""
}
,



{
"title": "News",
"tags": "",
"keywords": "news, blog, updates, release notes, announcements",
"url": "news_archive.html",
"summary": ""
}
,



{
"title": "Performance",
"tags": "",
"keywords": "Performance, AvoidDmlStatementsInLoops, AvoidSoqlInLoops, AvoidSoslInLoops",
"url": "pmd_rules_apex_performance.html",
"summary": "Rules that flag suboptimal code."
}
,



{
"title": "Performance",
"tags": "",
"keywords": "Performance, AddEmptyString, AppendCharacterWithChar, AvoidArrayLoops, AvoidFileStream, AvoidInstantiatingObjectsInLoops, AvoidUsingShortType, BigIntegerInstantiation, BooleanInstantiation, ByteInstantiation, ConsecutiveAppendsShouldReuse, ConsecutiveLiteralAppends, InefficientEmptyStringCheck, InefficientStringBuffering, InsufficientStringBufferDeclaration, IntegerInstantiation, LongInstantiation, OptimizableToArrayCall, RedundantFieldInitializer, SimplifyStartsWith, ShortInstantiation, StringInstantiation, StringToString, TooFewBranchesForASwitchStatement, UnnecessaryWrapperObjectCreation, UseArrayListInsteadOfVector, UseArraysAsList, UseIndexOfChar, UselessStringValueOf, UseStringBufferForStringAppends, UseStringBufferLength",
"url": "pmd_rules_java_performance.html",
"summary": "Rules that flag suboptimal code."
}
,



{
"title": "Performance",
"tags": "",
"keywords": "Performance, AvoidAxisNavigation",
"url": "pmd_rules_xsl_performance.html",
"summary": "Rules that flag suboptimal code."
}
,



{
"title": "PLSQL Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_plsql.html",
"summary": ""
}
,



{
"title": "Maven POM Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_pom.html",
"summary": ""
}
,





{
"title": "Products/books related to PMD",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_products.html",
"summary": ""
}
,



{
"title": "Pull-Request Merge",
"tags": "",
"keywords": "",
"url": "pmd_devdocs_pull_requests.html",
"summary": ""
}
,



{
"title": "PMD Release Notes",
"tags": "",
"keywords": "changelog, release notes",
"url": "pmd_release_notes.html",
"summary": ""
}
,



{
"title": "Old Release Notes",
"tags": "",
"keywords": "",
"url": "pmd_release_notes_old.html",
"summary": ""
}
,



{
"title": "Releasing",
"tags": "",
"keywords": "",
"url": "pmd_devdocs_releasing.html",
"summary": ""
}
,



{
"title": "Roadmap",
"tags": "",
"keywords": "",
"url": "pmd_devdocs_roadmap.html",
"summary": ""
}
,



{
"title": "PMD Rule Guidelines",
"tags": "customizing",
"keywords": "",
"url": "pmd_devdocs_rule_guidelines.html",
"summary": "Rule Guidelines"
}
,





{
"title": "Security",
"tags": "",
"keywords": "Security, ApexBadCrypto, ApexCRUDViolation, ApexCSRF, ApexDangerousMethods, ApexInsecureEndpoint, ApexOpenRedirect, ApexSharingViolations, ApexSOQLInjection, ApexSuggestUsingNamedCred, ApexXSSFromEscapeFalse, ApexXSSFromURLParam",
"url": "pmd_rules_apex_security.html",
"summary": "Rules that flag potential security flaws."
}
,



{
"title": "Security",
"tags": "",
"keywords": "Security, IframeMissingSrcAttribute, NoUnsanitizedJSPExpression",
"url": "pmd_rules_jsp_security.html",
"summary": "Rules that flag potential security flaws."
}
,



{
"title": "Security",
"tags": "",
"keywords": "Security, VfCsrf, VfUnescapeEl",
"url": "pmd_rules_vf_security.html",
"summary": "Rules that flag potential security flaws."
}
,



{
"title": "Setting up your IDE",
"tags": "",
"keywords": "",
"url": "pmd_devdocs_setting_up_ide.html",
"summary": ""
}
,



{
"title": "Similar projects",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_similarprojects.html",
"summary": ""
}
,





{
"title": "Suppressing warnings",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_suppressing.html",
"summary": ""
}
,































{
"title": "Testing / Test Framework",
"tags": "",
"keywords": "",
"url": "pmd_devdocs_testing.html",
"summary": "PMD provides a simple test framework for unit testing rules"
}
,







{
"title": "Tools / Integrations",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_tools.html",
"summary": ""
}
,







{
"title": "Understanding Rulesets",
"tags": "",
"keywords": "",
"url": "pmd_userdocs_understanding_rulesets.html",
"summary": "Rules belong to categories and rulesets are custom collections of rules"
}
,



{
"title": "Salesforce VisualForce Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_vf.html",
"summary": ""
}
,



{
"title": "VM Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_vm.html",
"summary": ""
}
,



{
"title": "Working with properties",
"tags": "customizingpropertiesproperty",
"keywords": "",
"url": "pmd_devdocs_working_with_properties.html",
"summary": "Properties are a way to parameterise the behaviour of PMD rules and your own directly from the ruleset XML, which greatly improves their reusability. This page explains how to use existing properties, and how to define your own both for Java and XPath rules."
}
,



{
"title": "Writing Documentation",
"tags": "",
"keywords": "documentation, jekyll, markdown",
"url": "pmd_devdocs_writing_documentation.html",
"summary": ""
}
,



{
"title": "PMD Writing a Custom Rule",
"tags": "customizing",
"keywords": "",
"url": "pmd_devdocs_writing_pmd_rules.html",
"summary": "Writing a Custom Rule for PMD"
}
,



{
"title": "Writing XPath Rules",
"tags": "customizing",
"keywords": "",
"url": "pmd_devdocs_writing_xpath_rules.html",
"summary": "Writing XPath rules for PMD"
}
,



{
"title": "XML Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_xml.html",
"summary": ""
}
,



{
"title": "XSL Rules",
"tags": "",
"keywords": "",
"url": "pmd_rules_xsl.html",
"summary": ""
}






]
