var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":126,"id":8541,"methods":[{"el":69,"sc":5,"sl":64},{"el":76,"sc":5,"sl":71},{"el":80,"sc":5,"sl":78},{"el":84,"sc":5,"sl":82},{"el":88,"sc":5,"sl":86},{"el":92,"sc":5,"sl":90},{"el":96,"sc":5,"sl":94},{"el":100,"sc":5,"sl":98},{"el":110,"sc":5,"sl":102},{"el":125,"sc":5,"sl":112}],"name":"EcmascriptParserOptions","sl":14},{"el":43,"id":8541,"methods":[{"el":34,"sc":2,"sl":31},{"el":38,"sc":2,"sl":36},{"el":42,"sc":2,"sl":40}],"name":"EcmascriptParserOptions.Version","sl":16}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_159":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testArrayAccess","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_177":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testVoidKeyword","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_216":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testCaseAsIdentifier","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_298":{"methods":[{"sl":71},{"sl":78},{"sl":86},{"sl":94}],"name":"testConstructor","pass":true,"statements":[{"sl":72},{"sl":73},{"sl":74},{"sl":79},{"sl":87},{"sl":95}]},"test_299":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testGetBody","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_363":{"methods":[{"sl":64},{"sl":71},{"sl":98},{"sl":102},{"sl":112}],"name":"testEqualsHashcode","pass":true,"statements":[{"sl":65},{"sl":66},{"sl":67},{"sl":72},{"sl":73},{"sl":74},{"sl":99},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":108},{"sl":109},{"sl":114},{"sl":115},{"sl":117},{"sl":120},{"sl":121}]},"test_395":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94},{"sl":98}],"name":"testGetBodyFunctionClosureExpression","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95},{"sl":99}]},"test_407":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testLineNumbersWithinEcmascriptRules","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_532":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testFinallyBlockOnly","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_536":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testCatchAndFinallyBlock","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_562":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testEcmascript","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_685":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testLineNumbers","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_703":{"methods":[{"sl":64}],"name":"testCopyXmlToClipboard","pass":true,"statements":[{"sl":65},{"sl":66},{"sl":67}]},"test_723":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testArrayMethod","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_730":{"methods":[{"sl":31},{"sl":36},{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testExclusionsInReportWithNOPMDEcmascript","pass":true,"statements":[{"sl":32},{"sl":33},{"sl":37},{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_732":{"methods":[{"sl":64},{"sl":71},{"sl":78},{"sl":86},{"sl":94}],"name":"testDefaults","pass":true,"statements":[{"sl":65},{"sl":66},{"sl":67},{"sl":72},{"sl":73},{"sl":74},{"sl":79},{"sl":87},{"sl":95}]},"test_754":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testCatchBlockOnly","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_82":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testMultipleCatchAndFinallyBlock","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]},"test_858":{"methods":[{"sl":40},{"sl":64},{"sl":78},{"sl":86},{"sl":94}],"name":"testSuppresionComment","pass":true,"statements":[{"sl":41},{"sl":65},{"sl":66},{"sl":67},{"sl":79},{"sl":87},{"sl":95}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [730], [730], [730], [], [], [730], [730], [], [], [536, 299, 82, 730, 177, 407, 532, 216, 723, 858, 685, 754, 395, 159, 562], [536, 299, 82, 730, 177, 407, 532, 216, 723, 858, 685, 754, 395, 159, 562], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [536, 299, 82, 730, 177, 703, 363, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [536, 299, 82, 730, 177, 703, 363, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [536, 299, 82, 730, 177, 703, 363, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [536, 299, 82, 730, 177, 703, 363, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [], [], [], [298, 363, 732], [298, 363, 732], [298, 363, 732], [298, 363, 732], [], [], [], [536, 299, 82, 730, 298, 177, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [536, 299, 82, 730, 298, 177, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [], [], [], [], [], [], [536, 299, 82, 730, 298, 177, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [536, 299, 82, 730, 298, 177, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [], [], [], [], [], [], [536, 299, 82, 730, 298, 177, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [536, 299, 82, 730, 298, 177, 407, 532, 216, 732, 723, 858, 685, 754, 395, 159, 562], [], [], [363, 395], [363, 395], [], [], [363], [], [363], [363], [363], [363], [363], [363], [], [], [363], [], [363], [363], [], [363], [], [], [363], [363], [], [], [], [], []]
